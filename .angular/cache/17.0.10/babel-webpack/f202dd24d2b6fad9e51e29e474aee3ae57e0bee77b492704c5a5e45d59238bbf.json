{"ast":null,"code":"//==============================================================================\n// wgssSigCaptX.js\n// Copyright (c) 2015 Wacom Europe GmbH\n//\n// 01/04/2015  FRE Created\n//==============================================================================\n// Loosely based on https://github.com/robertodecurnex/J50Npi\nexport const JSONreq = {\n  map: {},\n  counter: 0,\n  getJSON: function (e, t, n) {\n    var a = e + (e.indexOf(\"?\") + 1 ? \"&\" : \"?\"),\n      c = document.getElementsByTagName(\"head\")[0],\n      s = document.createElement(\"script\"),\n      m = [],\n      r = \"\",\n      i = \"json-\" + this.counter;\n    this.counter++, t.script_name = i, t._rand = Math.random(), this.map[i] = n, t.callback = \"JSONreq.success\";\n    for (r in t) m.push(r + \"=\" + encodeURIComponent(t[r]));\n    a += m.join(\"&\"), s.type = \"text/javascript\", s.src = a, s.id = i, c.appendChild(s);\n  },\n  success: function (e) {\n    var t = e.script_name;\n    delete e.script_name, this.map[t](e);\n    var n = document.getElementsByTagName(\"head\")[0],\n      a = document.getElementById(t);\n    n.removeChild(a), delete this.map.script_name;\n  }\n};\n\n/*var JSONreq = {  \n    map: {},\n    counter: 0,\n    getJSON: function(url, data, callback) {\n      var src = url + (url.indexOf(\"?\")+1 ? \"&\" : \"?\");\n      var head = document.getElementsByTagName(\"head\")[0];\n      var newScript = document.createElement(\"script\");\n      var params = [];\n      var param_name = \"\";\n      \n      var script_name = \"json-\" + this.counter;\n      this.counter++;\n      data[\"script_name\"] = script_name;\n      data[\"_rand\"] = Math.random();\n      this.map[script_name] = callback;\n      \n      data[\"callback\"] = \"JSONreq.success\";\n      for(param_name in data){  \n          params.push(param_name + \"=\" + encodeURIComponent(data[param_name]));  \n      }\n      src += params.join(\"&\");\n\n      newScript.type = \"text/javascript\";  \n      newScript.src = src;\n      newScript.id = script_name;\n      \n      head.appendChild(newScript); \n    },\n    success: function(server_data) {\n      var script_name = server_data.script_name;\n      delete server_data.script_name;\n      this.map[script_name](server_data);\n      var head = document.getElementsByTagName(\"head\")[0];\n      var the_script = document.getElementById(script_name);\n      head.removeChild(the_script);\n      delete this.map.script_name;\n    }\n};*/\n\nexport class WacomGSS_SignatureSDK {\n  _onDetectRunning;\n  service_port;\n  constructor(_onDetectRunning, service_port) {\n    this._onDetectRunning = _onDetectRunning;\n    this.service_port = service_port;\n    this.running = false;\n    this.session = null;\n    this.service_detected = false;\n    let sigsdkptr = this;\n    window.sdkPtr = sigsdkptr;\n    var server_url = \"https://localhost:\";\n    this.RBFlags = {\n      //RenderOutputBinary : 2048,    // Not supported in SigCaptX\n      //RenderOutputFilename : 4096,  // Not supported in SigCaptX\n      RenderOutputPicture: 2097152,\n      RenderOutputBase64: 8192,\n      RenderBackgroundTransparent: 65536,\n      RenderColor1BPP: 131072,\n      RenderColor24BPP: 262144,\n      RenderColor32BPP: 524288,\n      RenderColorAntiAlias: 1048576,\n      RenderEncodeData: 4194304,\n      RenderWatermark: 8388608,\n      RenderClipped: 16777216,\n      RenderRelative: 33554432\n    };\n    this.IntegrityStatus = {\n      IntegrityOK: 0,\n      IntegrityFail: 1,\n      IntegrityMissing: 2,\n      IntegrityWrongType: 3,\n      IntegrityInsufficientData: 4,\n      IntegrityUncertain: 5,\n      IntegrityUnsupported: 6\n    };\n    this.HashType = {\n      HashNone: 0,\n      HashMD5: 1,\n      HashSHA1: 2,\n      HashSHA224: 3,\n      HashSHA256: 4,\n      HashSHA384: 5,\n      HashSHA512: 6\n    };\n    this.KeyType = {\n      KeyNone: 0,\n      KeyMD5: 1,\n      KeyMD5MAC: 2,\n      KeySHA1: 3,\n      KeySHA224: 4,\n      KeySHA256: 5,\n      KeySHA384: 6,\n      KeySHA512: 7,\n      KeyCAPICOM: 8\n    };\n    this.SignedData = {\n      DataGood: 0,\n      DataNoHash: 1,\n      DataBadType: 2,\n      DataBadHash: 3,\n      DataError: 4,\n      DataUncertain: 5,\n      DataSigMoved: 6\n    };\n    this.CaptData = {\n      CaptDigitizer: 26,\n      CaptDigitizerDriver: 27,\n      CaptMachineOS: 28,\n      CaptNetworkCard: 29\n    };\n    this.DynamicCaptureResult = {\n      DynCaptOK: 0,\n      DynCaptCancel: 1,\n      DynCaptPadError: 100,\n      DynCaptError: 101,\n      DynCaptNotLicensed: 103,\n      DynCaptAbort: 200,\n      DynCaptIntegrityKeyInvalid: 102\n    };\n    this.TimeZone = {\n      TimeLocal: 0,\n      TimeGMT: 1,\n      TimeUTC: 1\n    };\n    this.DisplayMode = {\n      DspForceFit: 0,\n      DspUseZoom: 1,\n      DspBestFit: 2\n    };\n    this.ShowText = {\n      TxtDontShow: 0,\n      TxtShowLeft: 1,\n      TxtShowCenter: 2,\n      TxtShowRight: 4\n    };\n    this.ObjectType = {\n      ObjectText: 0,\n      ObjectButton: 1,\n      ObjectCheckbox: 2,\n      ObjectSignature: 3,\n      ObjectInput: 4,\n      ObjectInputEcho: 5,\n      ObjectHash: 6,\n      ObjectImage: 7,\n      ObjectDisplayAtShutdown: 8,\n      ObjectInking: 9,\n      ObjectRadioButton: 10\n    };\n    this.TextOptions = {\n      TextAlignLeft: 0,\n      TextAlignRight: 1,\n      TextAlignCentre: 2,\n      TextAlignJustify: 3\n    };\n    this.ButtonOptions = {\n      BtnAlignCentre: 0,\n      BtnAlignMiddle: 0,\n      BtnAlignLeft: 1,\n      BtnAlignRight: 2,\n      BtnAlignTop: 4,\n      BtnAlignBottom: 8\n    };\n    this.CheckBoxOptions = {\n      CheckboxUnchecked: 0,\n      CheckboxChecked: 1,\n      CheckboxDisplayTick: 2,\n      CheckboxDisplayCross: 4\n    };\n    this.ObjectOptionType = {\n      OBJECTOPTION_STRING: 0,\n      OBJECTOPTION_INT: 1,\n      OBJECTOPTION_BOOL: 2\n    };\n    this.VariantType = {\n      VARIANT_EMPTY: 0,\n      VARIANT_TEXT: 1,\n      VARIANT_NUM: 2,\n      VARIANT_OBJECTOPTIONS: 3,\n      VARIANT_SIGOBJ: 4,\n      VARIANT_SIGCTL: 5,\n      VARIANT_INPUTOBJ: 6,\n      VARIANT_HASH: 7,\n      VARIANT_IMGURL: 8,\n      VARIANT_BASE64: 9,\n      VARIANT_DYNCAP: 10,\n      VARIANT_WIZCTL: 11,\n      VARIANT_FONT: 12,\n      VARIANT_KEY: 13\n    };\n    this.PrimitiveType = {\n      PrimitiveLine: 0,\n      PrimitiveRectangle: 1,\n      PrimitiveEllipse: 2\n    };\n    this.PrimitiveOptions = {\n      PrimitiveLineSolid: 0x1,\n      PrimitiveLineDashed: 0x2,\n      PrimitiveOutline: 0x4,\n      PrimitiveFill: 0x8,\n      PrimitiveFillXOR: 0x10\n    };\n    this.EventType = {\n      EvTextClicked: 0,\n      EvButtonClicked: 1,\n      EvCheckboxChecked: 2,\n      EvCheckboxUnchecked: 3,\n      EvInputMinReached: 4,\n      EvInputMaxReached: 5,\n      EvInputExceeded: 6\n    };\n    this.EncryptAlg = {\n      EncryptNone: 0,\n      EncryptTripleDES: 1\n    };\n    this.ResponseStatus = {\n      OK: 0,\n      FAILED: 1,\n      INVALID_SESSION: 3\n    };\n    this.FontWeight = {\n      FW_DONTCARE: 0,\n      FW_THIN: 100,\n      FW_EXTRALIGHT: 200,\n      FW_LIGHT: 300,\n      FW_NORMAL: 400,\n      FW_MEDIUM: 500,\n      FW_SEMIBOLD: 600,\n      FW_BOLD: 700,\n      FW_EXTRABOLD: 800,\n      FW_HEAVY: 900,\n      FW_ULTRALIGHT: 200,\n      FW_REGULAR: 400,\n      FW_DEMIBOLD: 600,\n      FW_ULTRABOLD: 800,\n      FW_BLACK: 900\n    };\n    this.FontCharset = {\n      ANSI_CHARSET: 0,\n      DEFAULT_CHARSET: 1,\n      SYMBOL_CHARSET: 2,\n      SHIFTJIS_CHARSET: 128,\n      HANGEUL_CHARSET: 129,\n      HANGUL_CHARSET: 129,\n      GB2312_CHARSET: 134,\n      CHINESEBIG5_CHARSET: 136,\n      OEM_CHARSET: 255,\n      JOHAB_CHARSET: 130,\n      HEBREW_CHARSET: 177,\n      ARABIC_CHARSET: 178,\n      GREEK_CHARSET: 161,\n      TURKISH_CHARSET: 162,\n      VIETNAMESE_CHARSET: 163,\n      THAI_CHARSET: 222,\n      EASTEUROPE_CHARSET: 238,\n      RUSSIAN_CHARSET: 204,\n      MAC_CHARSET: 77,\n      BALTIC_CHARSET: 186,\n      FS_LATIN1: 0x00000001,\n      FS_LATIN2: 0x00000002,\n      FS_CYRILLIC: 0x00000004,\n      FS_GREEK: 0x00000008,\n      FS_TURKISH: 0x00000010,\n      FS_HEBREW: 0x00000020,\n      FS_ARABIC: 0x00000040,\n      FS_BALTIC: 0x00000080,\n      FS_VIETNAMESE: 0x00000100,\n      FS_THAI: 0x00010000,\n      FS_JISJAPAN: 0x00020000,\n      FS_CHINESESIMP: 0x00040000,\n      FS_WANSUNG: 0x00080000,\n      FS_CHINESETRAD: 0x00100000,\n      FS_JOHAB: 0x00200000,\n      FS_SYMBOL: 0x80000000\n    };\n    this.Font = function (_name, _size, _weight, _charset, _italic, _underline, _strike) {\n      this.type = sigsdkptr.VariantType.VARIANT_FONT;\n      this.fontName = typeof _name == 'undefined' ? \"Arial\" : _name;\n      this.fontSize = typeof _size == 'undefined' ? 8 : _size;\n      this.sWeight = typeof _weight == 'undefined' ? sigsdkptr.FontWeight.FW_NORMAL : _weight;\n      this.sCharset = typeof _charset == 'undefined' ? sigsdkptr.FontCharset.ANSI_CHARSET : _charset;\n      this.fItalic = typeof fItalic == 'undefined' ? 0 : fItalic;\n      this.fUnderline = typeof _underline == 'undefined' ? 0 : fUnderline;\n      this.fStrikethrough = typeof _strike == 'undefined' ? 0 : _strike;\n    };\n    this.keepAlive = function () {\n      var data = {\n        \"session\": sigsdkptr.session,\n        \"KeepAlive\": 1\n      };\n      JSONreq.getJSON(server_url + \"wacom.js\", data, function () {});\n      setTimeout(sigsdkptr.keepAlive, 2000);\n    };\n    function onGetSession(server_data) {\n      if (0 == server_data.status) {\n        sigsdkptr.session = server_data.session;\n        sigsdkptr.running = true;\n        _onDetectRunning();\n        setTimeout(sigsdkptr.keepAlive, 2000);\n      } else {\n        console.log(\"Signature SDK local server error: \" + server_data.status);\n      }\n    }\n    function onGetPort(server_data) {\n      if (0 == server_data.status) {\n        sigsdkptr.service_detected = true;\n        server_url += server_data.port + \"/\";\n        var data = {\n          \"CreateSession\": 1\n        };\n        JSONreq.getJSON(server_url + \"wacom.js\", data, onGetSession);\n      } else {\n        console.log(\"Signature SDK Service error: \" + server_data.status);\n      }\n    }\n    function destroySession() {\n      if (sigsdkptr.session != 0) {\n        var u = server_url + \"wacom.js\" + \"?DestroySession=1&session=\" + sigsdkptr.session;\n        sigsdkptr.session = 0;\n        if (self.Navigator.sendBeacon != undefined) {\n          self.Navigator.sendBeacon(u);\n        } else {\n          var r = new XMLHttpRequest();\n          r.open(\"GET\", u, false); // synchronous\n          r.send(null);\n        }\n      }\n    }\n    window.addEventListener('unload', function (event) {\n      destroySession();\n    });\n    function checkService() {\n      var data = {\n        \"GetPort\": 1\n      };\n      JSONreq.getJSON(server_url + service_port + \"/wacom.js\", data, onGetPort);\n    }\n    checkService();\n    this.getVersion = function (_onGetVersion) {\n      var data = {\n        \"GetVersion\": 1,\n        \"session\": sigsdkptr.session\n      };\n      function callback(server_data) {\n        _onGetVersion( /*thisptr,*/server_data.version, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    };\n    function checkVar(input) {\n      return 'undefined' == typeof input || null == input ? \"\" : input;\n    }\n    this.Hash = function (_onHash) {\n      var thisptr = this;\n      this.handle = null;\n      this.type = sigsdkptr.VariantType.VARIANT_HASH;\n      var data = {\n        \"Hash\": \"Constructor\",\n        \"session\": sigsdkptr.session\n      };\n      function callback(server_data) {\n        thisptr.handle = server_data.handle;\n        _onHash(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n\n      // hData is a sigsdkptr.Variant\n      this.Add = function (hData, _onAdd) {\n        var data = {\n          \"Hash\": \"Add\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        hData.Stringify(data, \"hData\");\n        function callback(server_data) {\n          _onAdd(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.Clear = function (_onClear) {\n        var data = {\n          \"Hash\": \"Clear\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          _onClear(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetType = function (_onGetType) {\n        var data = {\n          \"Hash\": \"GetType\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          // server_data.type type is sigsdkptr.HashType\n          _onGetType(thisptr, parseInt(server_data.hashType), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // type is sigsdkptr.HashType\n      this.PutType = function (type, _onPutType) {\n        var data = {\n          \"Hash\": \"PutType\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"type\": checkVar(type)\n        };\n        function callback(server_data) {\n          _onPutType(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n    };\n    this.Key = function (_onKey) {\n      var thisptr = this;\n      this.handle = null;\n      this.type = sigsdkptr.VariantType.VARIANT_KEY;\n      var data = {\n        \"Key\": \"Constructor\",\n        \"session\": sigsdkptr.session\n      };\n      function callback(server_data) {\n        thisptr.handle = server_data.handle;\n        _onKey(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      this.GetType = function (_onGetType) {\n        var data = {\n          \"Key\": \"GetType\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          // server_data.type type is sigsdkptr.KeyType\n          _onGetType(thisptr, parseInt(server_data.type), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // type is sigsdkptr.KeyType\n      // value is sigsdkptr.Variant\n      this.Set = function (type, value, _onSet) {\n        var data = {\n          \"Key\": \"Set\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"type\": checkVar(type)\n        };\n        value.Stringify(data, \"value\");\n        function callback(server_data) {\n          _onSet(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n    };\n    this.Bitmap = function () {\n      var thisptr = this;\n      this.handle = null;\n      this.isBase64 = false;\n      this.mime_type = null;\n      this.image = new Image();\n    };\n    this.SigObj = function () {\n      var thisptr = this;\n      this.handle = null;\n      this.type = sigsdkptr.VariantType.VARIANT_SIGOBJ;\n\n      // key is sigsdkptr.Key\n      this.CheckIntegrity = function (key, _onCheckIntegrity) {\n        var data = {\n          \"SigObj\": \"CheckIntegrity\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        var vKey = new sigsdkptr.Variant();\n        vKey.Set(key);\n        vKey.Stringify(data, \"key\");\n        function callback(server_data) {\n          //server_data.status type is sigsdkptr.IntegrityStatus\n          _onCheckIntegrity(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // hash type is sigsdkptr.Hash\n      this.CheckSignedData = function (hash, _onCheckSignedData) {\n        var data = {\n          \"SigObj\": \"CheckSignedData\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"HashHandle\": checkVar(hash.handle)\n        };\n        function callback(server_data) {\n          //server_data.status type is sigsdkptr.SignedData\n          _onCheckSignedData(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.Clear = function (_onClear) {\n        var data = {\n          \"SigObj\": \"Clear\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          _onClear(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // captData type is sigsdkptr.CaptData\n      this.GetAdditionalData = function (captData, _onGetAdditionalData) {\n        var data = {\n          \"SigObj\": \"GetAdditionalData\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"captData\": checkVar(captData)\n        };\n        function callback(server_data) {\n          //server_data.additionalData is a string\n          _onGetAdditionalData(thisptr, server_data.additionalData, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetCrossedOut = function (_onGetCrossedOut) {\n        var data = {\n          \"SigObj\": \"GetCrossedOut\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          //server_data.crossedOut is a bool\n          _onGetCrossedOut(thisptr, Boolean(1 == parseInt(server_data.crossedOut)), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // key is a string\n      this.GetExtraData = function (key, _onGetExtraData) {\n        var data = {\n          \"SigObj\": \"GetExtraData\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"key\": checkVar(key)\n        };\n        function callback(server_data) {\n          //server_data.extraData is a string\n          _onGetExtraData(thisptr, server_data.extraData, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetHeight = function (_onGetHeight) {\n        var data = {\n          \"SigObj\": \"GetHeight\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          //server_data.height is a number\n          _onGetHeight(thisptr, parseInt(server_data.height), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetInk = function (_onGetInk) {\n        var data = {\n          \"SigObj\": \"GetInk\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          //server_data.ink is a string\n          _onGetInk(thisptr, server_data.ink, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetIsCaptured = function (_onGetIsCaptured) {\n        var data = {\n          \"SigObj\": \"GetIsCaptured\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          //server_data.isCaptured is a bool\n          _onGetIsCaptured(thisptr, Boolean(1 == parseInt(server_data.isCaptured)), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // key is a string\n      this.GetProperty = function (key, _onGetProperty) {\n        var data = {\n          \"SigObj\": \"GetProperty\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"key\": checkVar(key)\n        };\n        function callback(server_data) {\n          var property = new sigsdkptr.Variant();\n          property.Parse(server_data, \"property\");\n          _onGetProperty(thisptr, property, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetSigData = function (_onGetSigData) {\n        var data = {\n          \"SigObj\": \"GetSigData\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          //server_data.sigData is a sigsdkptr.Variant (if it's a VARIANT_TEXT, it's Base64 encoded)\n          var sigData = new sigsdkptr.Variant();\n          sigData.Parse(server_data, \"sigData\");\n          _onGetSigData(thisptr, sigData, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetSigText = function (_onGetSigText) {\n        var data = {\n          \"SigObj\": \"GetSigText\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          //server_data.sigText is a string\n          _onGetSigText(thisptr, server_data.sigText, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      //timeZone is a sigsdkptr.TimeZone\n      this.GetWhen = function (timeZone, _onGetWhen) {\n        var data = {\n          \"SigObj\": \"GetWhen\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"timeZone\": checkVar(timeZone)\n        };\n        function callback(server_data) {\n          //server_data.when is a date\n          var date = new Date(parseFloat(server_data.year), parseFloat(server_data.month) - 1, parseFloat(server_data.day), parseFloat(server_data.hour), parseFloat(server_data.minute), parseFloat(server_data.second));\n          date.dayOfWeek = parseFloat(server_data.dayOfWeek);\n          _onGetWhen(thisptr, date, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetWho = function (_onGetWho) {\n        var data = {\n          \"SigObj\": \"GetWho\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          //server_data.who is a string\n          _onGetWho(thisptr, server_data.who, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetWhy = function (_onGetWhy) {\n        var data = {\n          \"SigObj\": \"GetWhy\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          //server_data.why is a string\n          _onGetWhy(thisptr, server_data.why, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetWidth = function (_onGetWidth) {\n        var data = {\n          \"SigObj\": \"GetWidth\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          //server_data.width is a number\n          _onGetWidth(thisptr, parseInt(server_data.width), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // key is a string\n      // value is a string\n      this.PutExtraData = function (key, value, _onPutExtraData) {\n        var data = {\n          \"SigObj\": \"PutExtraData\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"key\": checkVar(key),\n          \"value\": checkVar(value)\n        };\n        function callback(server_data) {\n          _onPutExtraData(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // ink is a string\n      this.PutInk = function (ink, _onPutInk) {\n        var data = {\n          \"SigObj\": \"PutInk\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"ink\": checkVar(ink)\n        };\n        function callback(server_data) {\n          _onPutInk(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // sigData type is sigsdkptr.Variant\n      this.PutSigData = function (sigData, _onPutSigData) {\n        var data = {\n          \"SigObj\": \"PutSigData\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        sigData.Stringify(data, \"sigData\");\n        function callback(server_data) {\n          _onPutSigData(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // sigText is a string\n      this.PutSigText = function (sigText, _onPutSigText) {\n        var data = {\n          \"SigObj\": \"PutSigText\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"sigText\": checkVar(sigText)\n        };\n        function callback(server_data) {\n          _onPutSigText(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // bitmapURL type is a url\n      this.ReadEncodedBitmap = function (bitmapURL, _onReadEncodedBitmap) {\n        var data = {\n          \"SigObj\": \"ReadEncodedBitmap\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        var vBmpUrl = new sigsdkptr.Variant();\n        vBmpUrl.type = sigsdkptr.VariantType.VARIANT_IMGURL;\n        vBmpUrl.url = bitmapURL;\n        vBmpUrl.Stringify(data, \"bitmapURL\");\n        function callback(server_data) {\n          _onReadEncodedBitmap(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // mime_type type is a string\n      // width is an integer\n      // height is an integer\n      // ink_width is a real\n      // ink_color is an OLE_COLOR number\n      // background_color is an OLE_COLOR number\n      // flags is a sigsdkptr.RBFlags\n      // paddingX is a real\n      // paddingY is a real\n      this.RenderBitmap = function (mime_type, width, height, ink_width, ink_color, background_color, flags, paddingX, paddingY, _onRenderBitmap) {\n        var data = {\n          \"SigObj\": \"RenderBitmap\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"mimetype\": checkVar(mime_type),\n          \"width\": checkVar(width),\n          \"height\": checkVar(height),\n          \"ink_width\": checkVar(ink_width),\n          \"ink_color\": checkVar(ink_color),\n          \"bg_color\": checkVar(background_color),\n          \"flags\": checkVar(flags),\n          \"paddingX\": checkVar(paddingX),\n          \"paddingY\": checkVar(paddingY)\n        };\n        function callback(server_data) {\n          var status = parseInt(server_data.status);\n          if (status == 0) {\n            if (flags & sigsdkptr.RBFlags.RenderOutputPicture) {\n              var bmp = new sigsdkptr.Bitmap();\n              bmp.handle = server_data.bitmapHandle;\n              bmp.isBase64 = 1 == server_data.isBase64 ? true : false;\n              bmp.image.onload = function () {\n                _onRenderBitmap(thisptr, bmp, status);\n              };\n              if (bmp.isBase64) {\n                bmp.image.src = 'data:image/' + mime_type + ';base64,' + server_data.base64;\n              } else {\n                bmp.image.src = server_url + server_data.bitmapHandle + \"?session=\" + sigsdkptr.session;\n              }\n            } else if (1 == server_data.isBase64) {\n              _onRenderBitmap(thisptr, server_data.base64, status);\n            }\n          } else {\n            _onRenderBitmap(thisptr, null, status);\n          }\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // key is a string\n      // value is a sigsdkptr.Variant\n      this.SetProperty = function (key, value, _onSetProperty) {\n        var data = {\n          \"SigObj\": \"SetProperty\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"key\": checkVar(key)\n        };\n        value.Stringify(data, \"value\");\n        function callback(server_data) {\n          _onSetProperty(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n    };\n    this.DynamicCapture = function (_onConstructor) {\n      var thisptr = this;\n      this.handle = null;\n      var data = {\n        \"DynamicCapture\": \"Constructor\",\n        \"session\": sigsdkptr.session\n      };\n      function callback(server_data) {\n        thisptr.handle = server_data.handle;\n        _onConstructor(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      // sigCtl is a sigsdkptr.SigCtl\n      // who is a string\n      // why is a string\n      // what is a sigsdkptr.Hash\n      // key is a sigsdkptr.Key\n      this.Capture = function (sigCtl, who, why, what, key, _onCapture) {\n        var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n        var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n        var left = window.screenLeft ? window.screenLeft : window.screenX;\n        var top = window.screenTop ? window.screenTop : window.screenY;\n        var data = {\n          \"DynamicCapture\": \"Capture\",\n          \"session\": sigsdkptr.session,\n          \"who\": checkVar(who),\n          \"why\": checkVar(why),\n          \"width\": checkVar(width),\n          \"height\": checkVar(height),\n          \"left\": checkVar(left),\n          \"top\": checkVar(top),\n          \"SigCtlHandle\": checkVar(sigCtl.handle),\n          \"handle\": thisptr.handle\n        };\n        var vWhat = new sigsdkptr.Variant();\n        vWhat.Set(what);\n        vWhat.Stringify(data, \"what\");\n        var vKey = new sigsdkptr.Variant();\n        vKey.Set(key);\n        vKey.Stringify(data, \"key\");\n        function callback(server_data) {\n          var sigObj = new sigsdkptr.SigObj();\n          sigObj.handle = server_data.handle;\n          //server_data.status type is sigsdkptr.DynamicCaptureResult\n          _onCapture(thisptr, sigObj, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetLicence = function (_onGetLicence) {\n        var data = {\n          \"DynamicCapture\": \"GetLicence\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          //server_data.licence type is string\n          _onGetLicence(thisptr, server_data.licence, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // key type is string\n      this.GetProperty = function (key, _onGetProperty) {\n        var data = {\n          \"DynamicCapture\": \"GetProperty\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"key\": checkVar(key)\n        };\n        function callback(server_data) {\n          var property = new sigsdkptr.Variant();\n          property.Parse(server_data, \"property\");\n          _onGetProperty(thisptr, property, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // licence type is string\n      this.PutLicence = function (licence, _onPutLicence) {\n        var data = {\n          \"DynamicCapture\": \"PutLicence\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"licence\": checkVar(licence)\n        };\n        function callback(server_data) {\n          _onPutLicence(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // key type is string\n      // value type is sigsdkptr.Variant\n      this.SetProperty = function (key, value, _onSetProperty) {\n        var data = {\n          \"DynamicCapture\": \"SetProperty\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"key\": checkVar(key)\n        };\n        value.Stringify(data, \"value\");\n        function callback(server_data) {\n          _onSetProperty(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n    };\n    this.SigCtl = function (_onConstructor) {\n      var thisptr = this;\n      this.handle = null;\n      this.type = sigsdkptr.VariantType.VARIANT_SIGCTL;\n      var data = {\n        \"SigCtl\": \"Constructor\",\n        \"session\": sigsdkptr.session\n      };\n      function callback(server_data) {\n        thisptr.handle = server_data.handle;\n        _onConstructor(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      this.AboutBox = function (_onAboutBox) {\n        var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n        var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n        var left = window.screenLeft ? window.screenLeft : window.screenX;\n        var top = window.screenTop ? window.screenTop : window.screenY;\n        var data = {\n          \"SigCtl\": \"AboutBox\",\n          \"session\": sigsdkptr.session,\n          \"width\": checkVar(width),\n          \"height\": checkVar(height),\n          \"left\": checkVar(left),\n          \"top\": checkVar(top),\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          _onAboutBox(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      //key is a string\n      this.GetAppData = function (key, _onGetAppData) {\n        var data = {\n          \"SigCtl\": \"GetAppData\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"key\": checkVar(key)\n        };\n        function callback(server_data) {\n          var appData = new sigsdkptr.Variant();\n          appData.Parse(server_data, \"appData\");\n          _onGetAppData(thisptr, appData, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      /*\n      this.GetBackColor = function(_onGetBackColor)\n      {\n        var data = { \n                     \"SigCtl\": \"GetBackColor\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.appData is an OLE_COLOR (number)\n          _onGetBackColor(thisptr, parseInt(server_data.backColor), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      \n      this.GetBackStyle = function(_onGetBackStyle)\n      {\n        var data = { \n                     \"SigCtl\": \"GetBackStyle\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.backStyle is a number\n          _onGetBackStyle(thisptr, parseInt(server_data.backStyle), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      \n      this.GetBorderColor = function(_onGetBorderColor)\n      {\n        var data = { \n                     \"SigCtl\": \"GetBorderColor\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.borderColor is an OLE_COLOR (number)\n          _onGetBorderColor(thisptr, parseInt(server_data.borderColor), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      \n      this.GetBorderStyle = function(_onGetBorderStyle)\n      {\n        var data = { \n                     \"SigCtl\": \"GetBorderStyle\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.borderStyle is a number\n          _onGetBorderStyle(thisptr, parseInt(server_data.borderStyle), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      \n      this.GetBorderVisible = function(_onGetBorderVisible)\n      {\n        var data = { \n                     \"SigCtl\": \"GetBorderVisible\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.borderVisible is a bool\n          _onGetBorderVisible(thisptr, Boolean(1 == parseInt(server_data.borderVisible)), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      \n      this.GetBorderWidth = function(_onGetBorderWidth)\n      {\n        var data = { \n                     \"SigCtl\": \"GetBorderWidth\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.borderWidth is a number\n          _onGetBorderWidth(thisptr, parseInt(server_data.borderWidth), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      \n      this.GetCaption = function(_onGetCaption)\n      {\n        var data = { \n                     \"SigCtl\": \"GetCaption\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.caption is a string\n          _onGetCaption(thisptr, server_data.caption, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      \n      this.GetCtlPadding = function(_onGetCtlPadding)\n      {\n        var data = { \n                     \"SigCtl\": \"GetCtlPadding\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.ctlPadding is a number\n          _onGetCtlPadding(thisptr, parseInt(server_data.ctlPadding), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      \n      this.GetDisplayMode = function(_onGetDisplayMode)\n      {\n        var data = { \n                     \"SigCtl\": \"GetDisplayMode\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.displayMode is a sigsdkptr.DisplayMode\n          _onGetDisplayMode(thisptr, parseInt(server_data.displayMode), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      \n      this.GetEnabled = function(_onGetEnabled)\n      {\n        var data = { \n                     \"SigCtl\": \"GetEnabled\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.enabled is a bool\n          _onGetEnabled(thisptr, Boolean(1 == parseInt(server_data.enabled)), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      \n      this.GetForeColor = function(_onGetForeColor)\n      {\n        var data = { \n                     \"SigCtl\": \"GetForeColor\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.foreColor is an OLE_COLOR (number)\n          _onGetForeColor(thisptr, parseInt(server_data.foreColor), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      \n      this.GetInkColor = function(_onGetInkColor)\n      {\n        var data = { \n                     \"SigCtl\": \"GetInkColor\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.inkColor is an OLE_COLOR (number)\n          _onGetInkColor(thisptr, parseInt(server_data.inkColor), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      \n      this.GetInkWidth = function(_onGetInkWidth)\n      {\n        var data = { \n                     \"SigCtl\": \"GetInkWidth\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.inkWidth is a number\n          _onGetInkWidth(thisptr, parseFloat(server_data.inkWidth), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      */\n      this.GetInputData = function (_onGetInputData) {\n        var data = {\n          \"SigCtl\": \"GetInputData\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          //server_data.inputData is a string\n          _onGetInputData(thisptr, server_data.inputData, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      /*\n      this.GetInputSignature = function(_onGetInputSignature)\n      {\n        var data = { \n                     \"SigCtl\": \"GetInputSignature\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.inputSignature is a string\n          _onGetInputSignature(thisptr, server_data.inputSignature, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      \n      this.GetInputWho = function(_onGetInputWho)\n      {\n        var data = { \n                     \"SigCtl\": \"GetInputWho\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.inputWho is a string\n          _onGetInputWho(thisptr, server_data.inputWho, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      \n      this.GetInputWhy = function(_onGetInputWhy)\n      {\n        var data = { \n                     \"SigCtl\": \"GetInputWhy\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.inputWhy is a string\n          _onGetInputWhy(thisptr, server_data.inputWhy, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      \n      */\n      this.GetLicence = function (_onGetLicence) {\n        var data = {\n          \"SigCtl\": \"GetLicence\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          //server_data.licence is a string\n          _onGetLicence(thisptr, server_data.licence, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n\n      // key is a string\n      this.GetProperty = function (key, _onGetProperty) {\n        var data = {\n          \"SigCtl\": \"GetProperty\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"key\": checkVar(key)\n        };\n        function callback(server_data) {\n          var property = new sigsdkptr.Variant();\n          property.Parse(server_data, \"property\");\n          _onGetProperty(thisptr, property, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      /*\n      this.GetRotation = function(_onGetRotation)\n      {\n        var data = { \n                     \"SigCtl\": \"GetRotation\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.rotation is a number\n          _onGetRotation(thisptr, parseInt(server_data.rotation), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      \n      this.GetShowWhen = function(_onGetShowWhen)\n      {\n        var data = { \n                     \"SigCtl\": \"GetShowWhen\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.showWhen is a sigsdkptr.ShowText\n          _onGetShowWhen(thisptr, parseInt(server_data.showWhen), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      \n      this.GetShowWho = function(_onGetShowWho)\n      {\n        var data = { \n                     \"SigCtl\": \"GetShowWho\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.showWho is a sigsdkptr.ShowText\n          _onGetShowWho(thisptr, parseInt(server_data.showWho), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      \n      this.GetShowWhy = function(_onGetShowWhy)\n      {\n        var data = { \n                     \"SigCtl\": \"GetShowWhy\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.showWhy is a sigsdkptr.ShowText\n          _onGetShowWhy(thisptr, parseInt(server_data.showWhy), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      */\n      this.GetSignature = function (_onGetSignature) {\n        var data = {\n          \"SigCtl\": \"GetSignature\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          var sigObj = new sigsdkptr.SigObj();\n          sigObj.handle = server_data.signatureHandle;\n          _onGetSignature(thisptr, sigObj, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      /*\n      this.GetTabStop = function(_onGetTabStop)\n      {\n        var data = { \n                     \"SigCtl\": \"GetTabStop\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.tabStop is a bool\n          _onGetTabStop(thisptr, Boolean(1 == parseInt(server_data.tabStop)), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      \n      this.GetWhenFormat = function(_onGetWhenFormat)\n      {\n        var data = { \n                     \"SigCtl\": \"GetWhenFormat\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.whenFormat is a string\n          _onGetWhenFormat(thisptr, server_data.whenFormat, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      \n      this.GetZoom = function(_onGetZoom)\n      {\n        var data = { \n                     \"SigCtl\": \"GetZoom\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        function callback(server_data)\n        {\n          //server_data.zoom is a number\n          _onGetZoom(thisptr, parseInt(server_data.zoom), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }*/\n      // key is a string\n      // val is sigsdkptr.Variant\n      this.PutAppData = function (key, val, _onPutAppData) {\n        var data = {\n          \"SigCtl\": \"PutAppData\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"key\": checkVar(key)\n        };\n        val.Stringify(data, \"val\");\n        function callback(server_data) {\n          _onPutAppData(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      /*// backColor type is OLE_COLOR (number)\n      this.PutBackColor = function(backColor, _onPutBackColor)\n      {\n        var data = { \n                     \"SigCtl\": \"PutBackColor\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"backColor\": checkVar(backColor)\n                   };\n        function callback(server_data)\n        {\n          _onPutBackColor(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      // backStyle type is OLE_COLOR (number)\n      this.PutBackStyle = function(backStyle, _onPutBackStyle)\n      {\n        var data = { \n                     \"SigCtl\": \"PutBackStyle\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"backStyle\": checkVar(backStyle)\n                   };\n        function callback(server_data)\n        {\n          _onPutBackStyle(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      // borderColor type is OLE_COLOR (number)\n      this.PutBorderColor = function(borderColor, _onPutBorderColor)\n      {\n        var data = { \n                     \"SigCtl\": \"PutBorderColor\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"borderColor\": checkVar(borderColor)\n                   };\n        function callback(server_data)\n        {\n          _onPutBorderColor(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      // borderStyle type is a number\n      this.PutBorderStyle = function(borderStyle, _onPutBorderStyle)\n      {\n        var data = { \n                     \"SigCtl\": \"PutBorderStyle\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"borderStyle\": checkVar(borderStyle)\n                   };\n        function callback(server_data)\n        {\n          _onPutBorderStyle(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      // borderVisible type is bool\n      this.PutBorderVisible = function(borderVisible, _onPutBorderVisible)\n      {\n        var data = { \n                     \"SigCtl\": \"PutBorderVisible\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"borderVisible\": checkVar(borderVisible)\n                   };\n        function callback(server_data)\n        {\n          _onPutBorderVisible(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      // borderWidth is a number\n      this.PutBorderWidth = function(borderWidth, _onPutBorderWidth)\n      {\n        var data = { \n                     \"SigCtl\": \"PutBorderWidth\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"borderWidth\": checkVar(borderWidth)\n                   };\n        function callback(server_data)\n        {\n          _onPutBorderWidth(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      // caption type is string\n      this.PutCaption = function(caption, _onPutCaption)\n      {\n        var data = { \n                     \"SigCtl\": \"PutCaption\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"caption\": checkVar(caption)\n                   };\n        function callback(server_data)\n        {\n          _onPutCaption(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      // ctlPadding is a number\n      this.PutCtlPadding = function(ctlPadding, _onPutCtlPadding)\n      {\n        var data = { \n                     \"SigCtl\": \"PutCtlPadding\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"ctlPadding\": checkVar(ctlPadding)\n                   };\n        function callback(server_data)\n        {\n          _onPutCtlPadding(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      // displayMode type is sigsdkptr.DisplayMode (number)\n      this.PutDisplayMode = function(displayMode, _onPutDisplayMode)\n      {\n        var data = { \n                     \"SigCtl\": \"PutDisplayMode\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"displayMode\": checkVar(displayMode)\n                   };\n        function callback(server_data)\n        {\n          _onPutDisplayMode(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      // enabled type is bool\n      this.PutEnabled = function(enabled, _onPutEnabled)\n      {\n        var data = { \n                     \"SigCtl\": \"PutEnabled\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"enabled\": checkVar(enabled)\n                   };\n        function callback(server_data)\n        {\n          _onPutEnabled(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      // foreColor type is OLE_COLOR (number)\n      this.PutForeColor = function(foreColor, _onPutForeColor)\n      {\n        var data = { \n                     \"SigCtl\": \"PutForeColor\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"foreColor\": checkVar(foreColor)\n                   };\n        function callback(server_data)\n        {\n          _onPutForeColor(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      // inkColor type is OLE_COLOR (number)\n      this.PutInkColor = function(inkColor, _onPutInkColor)\n      {\n        var data = { \n                     \"SigCtl\": \"PutInkColor\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"inkColor\": checkVar(inkColor)\n                   };\n        function callback(server_data)\n        {\n          _onPutInkColor(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      // inkWidth is a number\n      this.PutInkWidth = function(inkWidth, _onPutInkWidth)\n      {\n        var data = { \n                     \"SigCtl\": \"PutInkWidth\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"inkWidth\": checkVar(inkWidth)\n                   };\n        function callback(server_data)\n        {\n          _onPutInkWidth(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }*/\n      // inputData type is string\n      this.PutInputData = function (inputData, _onPutInputData) {\n        var data = {\n          \"SigCtl\": \"PutInputData\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"inputData\": checkVar(inputData)\n        };\n        function callback(server_data) {\n          _onPutInputData(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      /*// inputSignature type is string\n      this.PutInputSignature = function(inputSignature, _onPutInputSignature)\n      {\n        var data = { \n                     \"SigCtl\": \"PutInputSignature\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"inputSignature\": checkVar(inputSignature)\n                   };\n        function callback(server_data)\n        {\n          _onPutInputSignature(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      // inputWho type is string\n      this.PutInputWho = function(inputWho, _onPutInputWho)\n      {\n        var data = { \n                     \"SigCtl\": \"PutInputWho\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"inputWho\": checkVar(inputWho)\n                   };\n        function callback(server_data)\n        {\n          _onPutInputWho(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      // inputWhy type is string\n      this.PutInputWhy = function(inputWhy, _onPutInputWhy)\n      {\n        var data = { \n                     \"SigCtl\": \"PutInputWhy\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"inputWhy\": checkVar(inputWhy)\n                   };\n        function callback(server_data)\n        {\n          _onPutInputWhy(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }*/\n      // licence type is string\n      this.PutLicence = function (licence, _onPutLicence) {\n        var data = {\n          \"SigCtl\": \"PutLicence\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"licence\": checkVar(licence)\n        };\n        function callback(server_data) {\n          _onPutLicence(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // properties type is string\n      this.PutProperties = function (properties, _onPutProperties) {\n        var data = {\n          \"SigCtl\": \"PutProperties\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"properties\": checkVar(properties)\n        };\n        function callback(server_data) {\n          _onPutProperties(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      /*// font type is sigsdkptr.Variant (sigsdkptr.VariantType.VARIANT_FONT)\n      this.PutRefFont = function(font, _onPutRefFont)\n      {\n        var data = { \n                     \"SigCtl\": \"PutRefFont\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle\n                   };\n        font.Stringify(data, \"font\");\n        function callback(server_data)\n        {\n          _onPutRefFont(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      // rotation is a number\n      this.PutRotation = function(rotation, _onPutRotation)\n      {\n        var data = { \n                     \"SigCtl\": \"PutRotation\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"rotation\": checkVar(rotation)\n                   };\n        function callback(server_data)\n        {\n          _onPutRotation(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      // showWhen type is sigsdkptr.ShowText\n      this.PutShowWhen = function(showWhen, _onPutShowWhen)\n      {\n        var data = { \n                     \"SigCtl\": \"PutShowWhen\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"showWhen\": checkVar(showWhen)\n                   };\n        function callback(server_data)\n        {\n          _onPutShowWhen(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      // showWho type is sigsdkptr.ShowText\n      this.PutShowWho = function(showWho, _onPutShowWho)\n      {\n        var data = { \n                     \"SigCtl\": \"PutShowWho\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"showWho\": checkVar(showWho)\n                   };\n        function callback(server_data)\n        {\n          _onPutShowWho(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      // showWhy type is sigsdkptr.ShowText\n      this.PutShowWhy = function(showWhy, _onPutShowWhy)\n      {\n        var data = { \n                     \"SigCtl\": \"PutShowWhy\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"showWhy\": checkVar(showWhy)\n                   };\n        function callback(server_data)\n        {\n          _onPutShowWhy(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }*/\n      // sigObj type is sigsdkptr.SigObj\n      this.PutSignature = function (sigObj, _onPutSignature) {\n        var data = {\n          \"SigCtl\": \"PutSignature\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"signatureHandle\": checkVar(sigObj.handle)\n        };\n        function callback(server_data) {\n          _onPutSignature(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      /*// tabStop type is bool\n      this.PutTabStop = function(tabStop, _onPutTabStop)\n      {\n        var data = { \n                     \"SigCtl\": \"PutTabStop\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"tabStop\": checkVar(tabStop)\n                   };\n        function callback(server_data)\n        {\n          _onPutTabStop(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      // whenFormat type is string\n      this.PutWhenFormat = function(whenFormat, _onPutWhenFormat)\n      {\n        var data = { \n                     \"SigCtl\": \"PutWhenFormat\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"whenFormat\": checkVar(whenFormat)\n                   };\n        function callback(server_data)\n        {\n          _onPutWhenFormat(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }\n      // zoom type is a number\n      this.PutZoom = function(zoom, _onPutZoom)\n      {\n        var data = { \n                     \"SigCtl\": \"PutZoom\", \n                     \"session\": sigsdkptr.session,\n                     \"handle\": thisptr.handle,\n                     \"zoom\": checkVar(zoom)\n                   };\n        function callback(server_data)\n        {\n          _onPutZoom(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      }*/\n      // key is a string\n      // value is sigsdkptr.Variant \n      this.SetProperty = function (key, value, _onSetProperty) {\n        var data = {\n          \"SigCtl\": \"SetProperty\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"key\": checkVar(key)\n        };\n        value.Stringify(data, \"value\");\n        function callback(server_data) {\n          _onSetProperty(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n    };\n    this.InputObj = function (_onConstructor) {\n      var thisptr = this;\n      this.handle = null;\n      this.type = sigsdkptr.VariantType.VARIANT_INPUTOBJ;\n      var data = {\n        \"InputObj\": \"Constructor\",\n        \"session\": sigsdkptr.session\n      };\n      function callback(server_data) {\n        thisptr.handle = server_data.handle;\n        _onConstructor(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      this.Clear = function (_onClear) {\n        var data = {\n          \"InputObj\": \"Clear\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          _onClear(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetData = function (_onGetData) {\n        var data = {\n          \"InputObj\": \"GetData\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          // server_data.data is a string\n          _onGetData(thisptr, server_data.data, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetEncryptionType = function (_onGetEncryptionType) {\n        var data = {\n          \"InputObj\": \"GetEncryptionType\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          // server_data.encryptionType type is sigsdkptr.EncryptAlg\n          _onGetEncryptionType(thisptr, parseInt(server_data.encryptionType), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetMaxLength = function (_onGetMaxLength) {\n        var data = {\n          \"InputObj\": \"GetMaxLength\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          // server_data.maxLength is an integer\n          _onGetMaxLength(thisptr, parseInt(server_data.maxLength), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetMinLength = function (_onGetMinLength) {\n        var data = {\n          \"InputObj\": \"GetMinLength\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          // server_data.minLength is an integer\n          _onGetMinLength(thisptr, parseInt(server_data.minLength), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetProperty = function (name, _onGetProperty) {\n        var data = {\n          \"InputObj\": \"GetProperty\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"name\": checkVar(name)\n        };\n        function callback(server_data) {\n          var property = new sigsdkptr.Variant();\n          property.Parse(server_data, \"property\");\n          _onGetProperty(thisptr, server_data.property, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetText = function (_onGetText) {\n        var data = {\n          \"InputObj\": \"GetText\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          // server_data.text is a string\n          _onGetText(thisptr, server_data.text, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // maxLength is an integer    \n      this.PutMaxLength = function (maxLength, _onPutMaxLength) {\n        var data = {\n          \"InputObj\": \"PutMaxLength\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"maxLength\": checkVar(maxLength)\n        };\n        function callback(server_data) {\n          _onPutMaxLength(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // minLength is an integer    \n      this.PutMinLength = function (minLength, _onPutMinLength) {\n        var data = {\n          \"InputObj\": \"PutMinLength\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"minLength\": checkVar(minLength)\n        };\n        function callback(server_data) {\n          _onPutMinLength(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // type is a sigsdkptr.EncryptAlg\n      // key is a sigsdkptr.Variant (with type either VARIANT_BASE64 or a base64 encoded VARIANT_TEXT string)\n      this.SetEncryption = function (type, key, _onSetEncryption) {\n        var data = {\n          \"InputObj\": \"SetEncryption\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"type\": checkVar(type)\n        };\n        key.Stringify(data, \"key\");\n        function callback(server_data) {\n          _onSetEncryption(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // name is a string\n      // value is    a string\n      this.SetProperty = function (name, value, _onSetProperty) {\n        var data = {\n          \"InputObj\": \"SetProperty\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"name\": checkVar(name),\n          \"value\": checkVar(value)\n        };\n        function callback(server_data) {\n          _onSetProperty(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n    };\n\n    // _type type is sigsdkptr.ObjectOptionType\n    this.ObjectOptions = function /*_type*/\n    () {\n      var thisptr = this;\n      this.type = sigsdkptr.VariantType.VARIANT_OBJECTOPTIONS; //_type;\n\n      this.AddOption = function (name, value) {\n        thisptr[name] = value;\n      };\n    };\n    this.Variant = function () {\n      var thisptr = this;\n      this.type = sigsdkptr.VariantType.VARIANT_EMPTY;\n      this.Parse = function (data, id) {\n        var dataType = parseInt(data[id + '.type']);\n        switch (dataType) {\n          case sigsdkptr.VariantType.VARIANT_TEXT:\n            {\n              thisptr.type = dataType;\n              thisptr.text = data[id + '.text'];\n              break;\n            }\n          case sigsdkptr.VariantType.VARIANT_NUM:\n            {\n              thisptr.type = dataType;\n              thisptr.num = parseFloat(data[id + '.num']);\n              break;\n            }\n          case sigsdkptr.VariantType.VARIANT_OBJECTOPTIONS:\n            {\n              thisptr.type = dataType;\n              /////\n              //TODO\n              /////\n              break;\n            }\n          case sigsdkptr.VariantType.VARIANT_SIGOBJ:\n          case sigsdkptr.VariantType.VARIANT_SIGCTL:\n          case sigsdkptr.VariantType.VARIANT_INPUTOBJ:\n          case sigsdkptr.VariantType.VARIANT_HASH:\n          case sigsdkptr.VariantType.VARIANT_KEY:\n          case sigsdkptr.VariantType.VARIANT_DYNCAP:\n          case sigsdkptr.VariantType.VARIANT_WIZCTL:\n            {\n              thisptr.type = dataType;\n              thisptr.handle = data[id + '.handle'];\n              break;\n            }\n          case sigsdkptr.VariantType.VARIANT_BASE64:\n            {\n              thisptr.type = dataType;\n              thisptr.base64 = data[id + '.base64'];\n              break;\n            }\n          case sigsdkptr.VariantType.VARIANT_IMGURL:\n            {\n              thisptr.type = dataType;\n              thisptr.url = data[id + '.url'];\n              break;\n            }\n          case sigsdkptr.VariantType.VARIANT_FONT:\n            {\n              thisptr.type = dataType;\n              thisptr.fontName = data[id + '.fontName'];\n              thisptr.fontSize = data[id + '.fontSize'];\n              thisptr.sWeight = data[id + '.sWeight'];\n              thisptr.sCharset = data[id + '.sCharset'];\n              thisptr.fItalic = data[id + '.fItalic'];\n              thisptr.fUnderline = data[id + '.fUnderline'];\n              thisptr.fStrikethrough = data[id + '.fStrikethrough'];\n              break;\n            }\n          case sigsdkptr.VariantType.VARIANT_EMPTY:\n          default:\n            {\n              thisptr.type = sigsdkptr.VariantType.VARIANT_EMPTY;\n              break;\n            }\n        }\n      };\n      this.Set = function (input) {\n        if ('string' === typeof input) {\n          thisptr.type = sigsdkptr.VariantType.VARIANT_TEXT;\n          thisptr.text = input;\n        } else if ('number' === typeof input) {\n          thisptr.type = sigsdkptr.VariantType.VARIANT_NUM;\n          thisptr.num = input;\n        } else if (null != input && 'object' === typeof input && 'undefined' != typeof input.type && null != input.type) {\n          switch (input.type) {\n            case sigsdkptr.VariantType.VARIANT_OBJECTOPTIONS:\n              {\n                thisptr.type = sigsdkptr.VariantType.VARIANT_OBJECTOPTIONS;\n                for (o in input) {\n                  if (o != 'type') {\n                    if (typeof input[o] == \"string\") {\n                      thisptr[o] = input[o];\n                      thisptr[o + \".type\"] = sigsdkptr.ObjectOptionType.OBJECTOPTION_STRING;\n                    } else if (typeof input[o] == \"number\") {\n                      // truncate: don't use Math.trunc() as it's ECMAScript6 experimental\n                      thisptr[o] = input[o] > 0 ? Math.floor(input[o]) : Math.ceil(input[o]);\n                      thisptr[o + \".type\"] = sigsdkptr.ObjectOptionType.OBJECTOPTION_INT;\n                    } else if (typeof input[o] == \"boolean\") {\n                      thisptr[o] = input[o] == true ? 1 : 0;\n                      thisptr[o + \".type\"] = sigsdkptr.ObjectOptionType.OBJECTOPTION_BOOL;\n                    }\n                  }\n                }\n                break;\n              }\n            case sigsdkptr.VariantType.VARIANT_SIGOBJ:\n            case sigsdkptr.VariantType.VARIANT_SIGCTL:\n            case sigsdkptr.VariantType.VARIANT_INPUTOBJ:\n            case sigsdkptr.VariantType.VARIANT_HASH:\n            case sigsdkptr.VariantType.VARIANT_KEY:\n            case sigsdkptr.VariantType.VARIANT_DYNCAP:\n            case sigsdkptr.VariantType.VARIANT_WIZCTL:\n              {\n                thisptr.type = input.type;\n                thisptr.handle = input.handle;\n                break;\n              }\n            case sigsdkptr.VariantType.VARIANT_IMGURL:\n              {\n                thisptr.type = sigsdkptr.VariantType.VARIANT_IMGURL;\n                thisptr.url = input.url;\n                break;\n              }\n            case sigsdkptr.VariantType.VARIANT_BASE64:\n              {\n                thisptr.type = sigsdkptr.VariantType.VARIANT_BASE64;\n                thisptr.base64 = input.base64;\n                break;\n              }\n            case sigsdkptr.VariantType.VARIANT_FONT:\n              {\n                thisptr.type = sigsdkptr.VariantType.VARIANT_FONT;\n                thisptr.fontName = input.fontName;\n                thisptr.fontSize = input.fontSize;\n                thisptr.sWeight = input.sWeight;\n                thisptr.sCharset = input.sCharset;\n                thisptr.fItalic = input.fItalic;\n                thisptr.fUnderline = input.fUnderline;\n                thisptr.fStrikethrough = input.fStrikethrough;\n                break;\n              }\n            case sigsdkptr.VariantType.VARIANT_TEXT:\n              {\n                thisptr.type = input.type;\n                thisptr.text = input.text;\n                break;\n              }\n            case sigsdkptr.VariantType.VARIANT_NUM:\n              {\n                thisptr.type = input.type;\n                thisptr.num = input.num;\n                break;\n              }\n            case sigsdkptr.VariantType.VARIANT_EMPTY:\n            default:\n              {\n                thisptr.type = sigsdkptr.VariantType.VARIANT_EMPTY;\n                break;\n              }\n          }\n        }\n      };\n      this.Stringify = function (datau, id) {\n        for (var o in thisptr) {\n          if (typeof o == 'string' && typeof thisptr[o] != 'function' && typeof thisptr[o] != 'symbol' && (typeof thisptr[o] == 'object' || typeof thisptr[o] == 'string' || typeof thisptr[o] == 'number')) {\n            datau[id + \".\" + o] = thisptr[o.toString()];\n          }\n        }\n      };\n    };\n    this.WizCtl = function (_onConstructor) {\n      var thisptr = this;\n      this.handle = null;\n      var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n      var left = window.screenLeft ? window.screenLeft : window.screenX;\n      var top = window.screenTop ? window.screenTop : window.screenY;\n      var data = {\n        \"WizCtl\": \"Constructor\",\n        \"session\": sigsdkptr.session,\n        \"width\": width,\n        \"height\": height,\n        \"left\": left,\n        \"top\": top\n      };\n      function callback(server_data) {\n        thisptr.handle = server_data.handle;\n        _onConstructor(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n\n      //objType type is sigsdkptr.ObjectType\n      //id type is string\n      //X type type is a number, text or sigsdkptr.Variant\n      //Y type type is a number, text or sigsdkptr.Variant\n      //objData type is sigsdkptr.Variant\n      //options type is sigsdkptr.Variant\n      this.AddObject = function (objType, id, X, Y, objData, options, _onAddObject) {\n        var data = {\n          \"WizCtl\": \"AddObject\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"objType\": checkVar(objType),\n          \"id\": checkVar(id)\n        };\n        var vX = new sigsdkptr.Variant();\n        var vY = new sigsdkptr.Variant();\n        vX.Set(X);\n        vY.Set(Y);\n        vX.Stringify(data, \"X\");\n        vY.Stringify(data, \"Y\");\n        objData.Stringify(data, \"objData\");\n        options.Stringify(data, \"options\");\n        function callback(server_data) {\n          _onAddObject(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      //primType type is sigsdkptr.PrimitiveType\n      //X1 type type is a number, text or sigsdkptr.Variant\n      //Y1 type type is a number, text or sigsdkptr.Variant\n      //X2 type type is a number, text or sigsdkptr.Variant\n      //Y2 type type is a number, text or sigsdkptr.Variant\n      //primData type is a VARIANT_NUM sigsdkptr.Variant that indicates the primitive width\n      //options is a sigsdkptr.PrimitiveType flag variable as a VARIANT_NUM sigsdkptr.Variant\n      this.AddPrimitive = function (primType, X1, Y1, X2, Y2, primData, options, _onAddPrimitive) {\n        var data = {\n          \"WizCtl\": \"AddPrimitive\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"primType\": checkVar(primType)\n        };\n        var vX1 = new sigsdkptr.Variant();\n        var vY1 = new sigsdkptr.Variant();\n        var vX2 = new sigsdkptr.Variant();\n        var vY2 = new sigsdkptr.Variant();\n        vX1.Set(X1);\n        vY1.Set(Y1);\n        vX2.Set(X2);\n        vY2.Set(Y2);\n        vX1.Stringify(data, \"X1\");\n        vY1.Stringify(data, \"Y1\");\n        vX2.Stringify(data, \"X2\");\n        vY2.Stringify(data, \"Y2\");\n        primData.Stringify(data, \"primData\");\n        options.Stringify(data, \"options\");\n        function callback(server_data) {\n          _onAddPrimitive(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.Close = function (_onClose) {\n        var data = {\n          \"WizCtl\": \"Close\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          _onClose(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.Display = function (_onDisplay) {\n        var data = {\n          \"WizCtl\": \"Display\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          _onDisplay(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // id type is string\n      this.FireClick = function (id, _onFireClick) {\n        var data = {\n          \"WizCtl\": \"FireClick\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"fireClickId\": id\n        };\n        function callback(server_data) {\n          _onFireClick(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetBackColor = function (_onGetBackColor) {\n        var data = {\n          \"WizCtl\": \"GetBackColor\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          // server_data.backColor type is OLE_COLOR (number)\n          _onGetBackColor(thisptr, parseInt(server_data.backColor), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetBorderColor = function (_onGetBorderColor) {\n        var data = {\n          \"WizCtl\": \"GetBorderColor\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          // server_data.backColor type is OLE_COLOR (number)\n          _onGetBorderColor(thisptr, parseInt(server_data.borderColor), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetBorderStyle = function (_onGetBorderStyle) {\n        var data = {\n          \"WizCtl\": \"GetBorderStyle\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          // server_data.borderStyle type is a number\n          _onGetBorderStyle(thisptr, parseInt(server_data.borderStyle), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetBorderVisible = function (_onGetBorderVisible) {\n        var data = {\n          \"WizCtl\": \"GetBorderVisible\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          //server_data.borderVisible is a bool\n          _onGetBorderVisible(thisptr, Boolean(1 == parseInt(server_data.borderVisible)), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetBorderWidth = function (_onGetBorderWidth) {\n        var data = {\n          \"WizCtl\": \"GetBorderWidth\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          //server_data.borderWidth is a number\n          _onGetBorderWidth(thisptr, parseInt(server_data.borderWidth), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetEnableWizardDisplay = function (_onGetEnableWizardDisplay) {\n        var data = {\n          \"WizCtl\": \"GetEnableWizardDisplay\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          //server_data.enableWD is a bool\n          _onGetEnableWizardDisplay(thisptr, Boolean(1 == parseInt(server_data.enableWD)), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetFont = function (_onGetFont) {\n        var data = {\n          \"WizCtl\": \"GetFont\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          var font = new sigsdkptr.Variant();\n          font.Parse(server_data, \"font\");\n          _onGetFont(thisptr, font, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetInkingPad = function (_onGetInkingPad) {\n        var data = {\n          \"WizCtl\": \"GetInkingPad\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          //server_data.inkingPad is a bool\n          _onGetInkingPad(thisptr, Boolean(1 == parseInt(server_data.inkingPad)), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetLicence = function (_onGetLicence) {\n        var data = {\n          \"WizCtl\": \"GetLicence\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          //server_data.licence type is string\n          _onGetLicence(thisptr, server_data.licence, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // id type is string\n      this.GetObjectState = function (id, _onGetObjectState) {\n        var data = {\n          \"WizCtl\": \"GetObjectState\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"objectId\": checkVar(id)\n        };\n        function callback(server_data) {\n          var state = new sigsdkptr.Variant();\n          state.Parse(server_data, \"objState\");\n          _onGetObjectState(thisptr, state, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetPadHeight = function (_onGetPadHeight) {\n        var data = {\n          \"WizCtl\": \"GetPadHeight\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          //server_data.height type is a number\n          _onGetPadHeight(thisptr, parseFloat(server_data.height), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetPadWidth = function (_onGetPadWidth) {\n        var data = {\n          \"WizCtl\": \"GetPadWidth\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          //server_data.width type is a number\n          _onGetPadWidth(thisptr, parseFloat(server_data.width), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // key is a string\n      this.GetProperty = function (key, _onGetProperty) {\n        var data = {\n          \"WizCtl\": \"GetProperty\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"key\": checkVar(key)\n        };\n        function callback(server_data) {\n          var property = new sigsdkptr.Variant();\n          property.Parse(server_data, \"property\");\n          _onGetProperty(thisptr, property, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetVisibleWindow = function (_onGetVisibleWindow) {\n        var data = {\n          \"WizCtl\": \"GetVisibleWindow\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          // server_data.visible type is boolean\n          _onGetVisibleWindow(thisptr, Boolean(1 == parseInt(server_data.visible)), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.GetZoom = function (_onGetZoom) {\n        var data = {\n          \"WizCtl\": \"GetZoom\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          // server_data.zoom type is a number\n          _onGetZoom(thisptr, parseFloat(server_data.zoom), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.PadConnect = function (_onPadConnect) {\n        var data = {\n          \"WizCtl\": \"PadConnect\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          // server_data.padConnect type is a bool\n          _onPadConnect(thisptr, Boolean(1 == parseInt(server_data.padConnect)), parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.PadDisconnect = function (_onPadDisconnect) {\n        var data = {\n          \"WizCtl\": \"PadDisconnect\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          _onPadDisconnect(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // backColor type is OLE_COLOR (number)\n      this.PutBackColor = function (backColor, _onPutBackColor) {\n        var data = {\n          \"WizCtl\": \"PutBackColor\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"backColor\": checkVar(backColor)\n        };\n        function callback(server_data) {\n          _onPutBackColor(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // borderColor type is OLE_COLOR (number)\n      this.PutBorderColor = function (borderColor, _onPutBorderColor) {\n        var data = {\n          \"WizCtl\": \"PutBorderColor\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"borderColor\": checkVar(borderColor)\n        };\n        function callback(server_data) {\n          _onPutBorderColor(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // borderStyle type is a number\n      this.PutBorderStyle = function (borderStyle, _onPutBorderStyle) {\n        var data = {\n          \"WizCtl\": \"PutBorderStyle\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"borderStyle\": checkVar(borderStyle)\n        };\n        function callback(server_data) {\n          _onPutBorderStyle(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n\n      // borderVisible type is bool\n      this.PutBorderVisible = function (borderVisible, _onPutBorderVisible) {\n        var data = {\n          \"WizCtl\": \"PutBorderVisible\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"borderVisible\": checkVar(borderVisible)\n        };\n        function callback(server_data) {\n          _onPutBorderVisible(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // borderWidth is a number\n      this.PutBorderWidth = function (borderWidth, _onPutBorderWidth) {\n        var data = {\n          \"WizCtl\": \"PutBorderWidth\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"borderWidth\": checkVar(borderWidth)\n        };\n        function callback(server_data) {\n          _onPutBorderWidth(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // enableWD is a bool\n      this.PutEnableWizardDisplay = function (enableWD, _onPutEnableWizardDisplay) {\n        var data = {\n          \"WizCtl\": \"PutEnableWizardDisplay\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"enableWD\": checkVar(enableWD)\n        };\n        function callback(server_data) {\n          _onPutEnableWizardDisplay(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // font type is sigsdkptr.Variant (sigsdkptr.VariantType.VARIANT_FONT)\n      this.PutFont = function (font, _onPutFont) {\n        var data = {\n          \"WizCtl\": \"PutFont\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        font.Stringify(data, \"font\");\n        function callback(server_data) {\n          _onPutFont(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // licence type is a string\n      this.PutLicence = function (licence, _onPutLicence) {\n        var data = {\n          \"WizCtl\": \"PutLicence\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"licence\": checkVar(licence)\n        };\n        function callback(server_data) {\n          _onPutLicence(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // height type is a number\n      this.PutPadHeight = function (height, _onPutPadHeight) {\n        var data = {\n          \"WizCtl\": \"PutPadHeight\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"height\": checkVar(height)\n        };\n        function callback(server_data) {\n          _onPutPadHeight(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // width type is a number\n      this.PutPadWidth = function (width, _onPutPadWidth) {\n        var data = {\n          \"WizCtl\": \"PutPadWidth\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"width\": checkVar(width)\n        };\n        function callback(server_data) {\n          _onPutPadWidth(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // properties type is a string\n      this.PutProperties = function (properties, _onPutProperties) {\n        var data = {\n          \"WizCtl\": \"PutProperties\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"properties\": checkVar(properties)\n        };\n        function callback(server_data) {\n          _onPutProperties(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // font type is sigsdkptr.Variant (sigsdkptr.VariantType.VARIANT_FONT)\n      this.PutRefFont = function (font, _onPutRefFont) {\n        var data = {\n          \"WizCtl\": \"PutRefFont\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        font.Stringify(data, \"font\");\n        function callback(server_data) {\n          _onPutRefFont(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // visible type is boolean\n      this.PutVisibleWindow = function (visible, _onPutVisibleWindow) {\n        var data = {\n          \"WizCtl\": \"PutVisibleWindow\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"visible\": Number(visible)\n        };\n        function callback(server_data) {\n          _onPutVisibleWindow(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // zoom type is a real number\n      this.PutZoom = function (zoom, _onPutZoom) {\n        var data = {\n          \"WizCtl\": \"PutZoom\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"zoom\": checkVar(zoom)\n        };\n        function callback(server_data) {\n          _onPutZoom(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      this.Reset = function (_onReset) {\n        var data = {\n          \"WizCtl\": \"Reset\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        function callback(server_data) {\n          _onReset(thisptr, parseInt(server_data.status));\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      // key type is string\n      // value type is sigsdkptr.Variant\n      this.SetProperty = function (key, value, _onSetProperty) {\n        var data = {\n          \"WizCtl\": \"SetProperty\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle,\n          \"key\": key\n        };\n        function callback(server_data) {\n          _onSetProperty(thisptr, parseInt(server_data.status));\n        }\n        value.Stringify(data, \"value\");\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n      var evh;\n      this.SetEventHandler = function (eventHandler) {\n        var data = {\n          \"WizCtl\": \"SetEventHandler\",\n          \"session\": sigsdkptr.session,\n          \"handle\": thisptr.handle\n        };\n        evh = eventHandler;\n        function callback(server_data) {\n          var update_data = {\n            \"WizCtl\": \"UpdateEventHandler\",\n            \"session\": sigsdkptr.session,\n            \"handle\": thisptr.handle\n          };\n          if (0 == parseInt(server_data.status)) {\n            JSONreq.getJSON(server_url + \"wacom.js\", update_data, callback);\n          } else if (\"undefined\" === typeof server_data.status) return;\n          setTimeout(function () {\n            evh(thisptr.handle, server_data[\"event-id\"], parseInt(server_data[\"event-type\"]), parseInt(server_data.status));\n          }, 0);\n        }\n        JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n      };\n    }; // WizCtl\n  }\n}\n\n;","map":{"version":3,"names":["JSONreq","map","counter","getJSON","e","t","n","a","indexOf","c","document","getElementsByTagName","s","createElement","m","r","i","script_name","_rand","Math","random","callback","push","encodeURIComponent","join","type","src","id","appendChild","success","getElementById","removeChild","WacomGSS_SignatureSDK","_onDetectRunning","service_port","constructor","running","session","service_detected","sigsdkptr","window","sdkPtr","server_url","RBFlags","RenderOutputPicture","RenderOutputBase64","RenderBackgroundTransparent","RenderColor1BPP","RenderColor24BPP","RenderColor32BPP","RenderColorAntiAlias","RenderEncodeData","RenderWatermark","RenderClipped","RenderRelative","IntegrityStatus","IntegrityOK","IntegrityFail","IntegrityMissing","IntegrityWrongType","IntegrityInsufficientData","IntegrityUncertain","IntegrityUnsupported","HashType","HashNone","HashMD5","HashSHA1","HashSHA224","HashSHA256","HashSHA384","HashSHA512","KeyType","KeyNone","KeyMD5","KeyMD5MAC","KeySHA1","KeySHA224","KeySHA256","KeySHA384","KeySHA512","KeyCAPICOM","SignedData","DataGood","DataNoHash","DataBadType","DataBadHash","DataError","DataUncertain","DataSigMoved","CaptData","CaptDigitizer","CaptDigitizerDriver","CaptMachineOS","CaptNetworkCard","DynamicCaptureResult","DynCaptOK","DynCaptCancel","DynCaptPadError","DynCaptError","DynCaptNotLicensed","DynCaptAbort","DynCaptIntegrityKeyInvalid","TimeZone","TimeLocal","TimeGMT","TimeUTC","DisplayMode","DspForceFit","DspUseZoom","DspBestFit","ShowText","TxtDontShow","TxtShowLeft","TxtShowCenter","TxtShowRight","ObjectType","ObjectText","ObjectButton","ObjectCheckbox","ObjectSignature","ObjectInput","ObjectInputEcho","ObjectHash","ObjectImage","ObjectDisplayAtShutdown","ObjectInking","ObjectRadioButton","TextOptions","TextAlignLeft","TextAlignRight","TextAlignCentre","TextAlignJustify","ButtonOptions","BtnAlignCentre","BtnAlignMiddle","BtnAlignLeft","BtnAlignRight","BtnAlignTop","BtnAlignBottom","CheckBoxOptions","CheckboxUnchecked","CheckboxChecked","CheckboxDisplayTick","CheckboxDisplayCross","ObjectOptionType","OBJECTOPTION_STRING","OBJECTOPTION_INT","OBJECTOPTION_BOOL","VariantType","VARIANT_EMPTY","VARIANT_TEXT","VARIANT_NUM","VARIANT_OBJECTOPTIONS","VARIANT_SIGOBJ","VARIANT_SIGCTL","VARIANT_INPUTOBJ","VARIANT_HASH","VARIANT_IMGURL","VARIANT_BASE64","VARIANT_DYNCAP","VARIANT_WIZCTL","VARIANT_FONT","VARIANT_KEY","PrimitiveType","PrimitiveLine","PrimitiveRectangle","PrimitiveEllipse","PrimitiveOptions","PrimitiveLineSolid","PrimitiveLineDashed","PrimitiveOutline","PrimitiveFill","PrimitiveFillXOR","EventType","EvTextClicked","EvButtonClicked","EvCheckboxChecked","EvCheckboxUnchecked","EvInputMinReached","EvInputMaxReached","EvInputExceeded","EncryptAlg","EncryptNone","EncryptTripleDES","ResponseStatus","OK","FAILED","INVALID_SESSION","FontWeight","FW_DONTCARE","FW_THIN","FW_EXTRALIGHT","FW_LIGHT","FW_NORMAL","FW_MEDIUM","FW_SEMIBOLD","FW_BOLD","FW_EXTRABOLD","FW_HEAVY","FW_ULTRALIGHT","FW_REGULAR","FW_DEMIBOLD","FW_ULTRABOLD","FW_BLACK","FontCharset","ANSI_CHARSET","DEFAULT_CHARSET","SYMBOL_CHARSET","SHIFTJIS_CHARSET","HANGEUL_CHARSET","HANGUL_CHARSET","GB2312_CHARSET","CHINESEBIG5_CHARSET","OEM_CHARSET","JOHAB_CHARSET","HEBREW_CHARSET","ARABIC_CHARSET","GREEK_CHARSET","TURKISH_CHARSET","VIETNAMESE_CHARSET","THAI_CHARSET","EASTEUROPE_CHARSET","RUSSIAN_CHARSET","MAC_CHARSET","BALTIC_CHARSET","FS_LATIN1","FS_LATIN2","FS_CYRILLIC","FS_GREEK","FS_TURKISH","FS_HEBREW","FS_ARABIC","FS_BALTIC","FS_VIETNAMESE","FS_THAI","FS_JISJAPAN","FS_CHINESESIMP","FS_WANSUNG","FS_CHINESETRAD","FS_JOHAB","FS_SYMBOL","Font","_name","_size","_weight","_charset","_italic","_underline","_strike","fontName","fontSize","sWeight","sCharset","fItalic","fUnderline","fStrikethrough","keepAlive","data","setTimeout","onGetSession","server_data","status","console","log","onGetPort","port","destroySession","u","self","Navigator","sendBeacon","undefined","XMLHttpRequest","open","send","addEventListener","event","checkService","getVersion","_onGetVersion","version","parseInt","checkVar","input","Hash","_onHash","thisptr","handle","Add","hData","_onAdd","Stringify","Clear","_onClear","GetType","_onGetType","hashType","PutType","_onPutType","Key","_onKey","Set","value","_onSet","Bitmap","isBase64","mime_type","image","Image","SigObj","CheckIntegrity","key","_onCheckIntegrity","vKey","Variant","CheckSignedData","hash","_onCheckSignedData","GetAdditionalData","captData","_onGetAdditionalData","additionalData","GetCrossedOut","_onGetCrossedOut","Boolean","crossedOut","GetExtraData","_onGetExtraData","extraData","GetHeight","_onGetHeight","height","GetInk","_onGetInk","ink","GetIsCaptured","_onGetIsCaptured","isCaptured","GetProperty","_onGetProperty","property","Parse","GetSigData","_onGetSigData","sigData","GetSigText","_onGetSigText","sigText","GetWhen","timeZone","_onGetWhen","date","Date","parseFloat","year","month","day","hour","minute","second","dayOfWeek","GetWho","_onGetWho","who","GetWhy","_onGetWhy","why","GetWidth","_onGetWidth","width","PutExtraData","_onPutExtraData","PutInk","_onPutInk","PutSigData","_onPutSigData","PutSigText","_onPutSigText","ReadEncodedBitmap","bitmapURL","_onReadEncodedBitmap","vBmpUrl","url","RenderBitmap","ink_width","ink_color","background_color","flags","paddingX","paddingY","_onRenderBitmap","bmp","bitmapHandle","onload","base64","SetProperty","_onSetProperty","DynamicCapture","_onConstructor","Capture","sigCtl","what","_onCapture","innerWidth","documentElement","clientWidth","body","innerHeight","clientHeight","left","screenLeft","screenX","top","screenTop","screenY","vWhat","sigObj","GetLicence","_onGetLicence","licence","PutLicence","_onPutLicence","SigCtl","AboutBox","_onAboutBox","GetAppData","_onGetAppData","appData","GetInputData","_onGetInputData","inputData","GetSignature","_onGetSignature","signatureHandle","PutAppData","val","_onPutAppData","PutInputData","_onPutInputData","PutProperties","properties","_onPutProperties","PutSignature","_onPutSignature","InputObj","GetData","_onGetData","GetEncryptionType","_onGetEncryptionType","encryptionType","GetMaxLength","_onGetMaxLength","maxLength","GetMinLength","_onGetMinLength","minLength","name","GetText","_onGetText","text","PutMaxLength","_onPutMaxLength","PutMinLength","_onPutMinLength","SetEncryption","_onSetEncryption","ObjectOptions","AddOption","dataType","num","o","floor","ceil","datau","toString","WizCtl","AddObject","objType","X","Y","objData","options","_onAddObject","vX","vY","AddPrimitive","primType","X1","Y1","X2","Y2","primData","_onAddPrimitive","vX1","vY1","vX2","vY2","Close","_onClose","Display","_onDisplay","FireClick","_onFireClick","GetBackColor","_onGetBackColor","backColor","GetBorderColor","_onGetBorderColor","borderColor","GetBorderStyle","_onGetBorderStyle","borderStyle","GetBorderVisible","_onGetBorderVisible","borderVisible","GetBorderWidth","_onGetBorderWidth","borderWidth","GetEnableWizardDisplay","_onGetEnableWizardDisplay","enableWD","GetFont","_onGetFont","font","GetInkingPad","_onGetInkingPad","inkingPad","GetObjectState","_onGetObjectState","state","GetPadHeight","_onGetPadHeight","GetPadWidth","_onGetPadWidth","GetVisibleWindow","_onGetVisibleWindow","visible","GetZoom","_onGetZoom","zoom","PadConnect","_onPadConnect","padConnect","PadDisconnect","_onPadDisconnect","PutBackColor","_onPutBackColor","PutBorderColor","_onPutBorderColor","PutBorderStyle","_onPutBorderStyle","PutBorderVisible","_onPutBorderVisible","PutBorderWidth","_onPutBorderWidth","PutEnableWizardDisplay","_onPutEnableWizardDisplay","PutFont","_onPutFont","PutPadHeight","_onPutPadHeight","PutPadWidth","_onPutPadWidth","PutRefFont","_onPutRefFont","PutVisibleWindow","_onPutVisibleWindow","Number","PutZoom","_onPutZoom","Reset","_onReset","evh","SetEventHandler","eventHandler","update_data"],"sources":["C:/Users/PROGRAMA2WEB/Desktop/wacom-pruebas/sdk-for-signature-sigcaptx-windows-master/Samples/AngularNG/capture/src/app/wgssSigCaptX.js"],"sourcesContent":["//==============================================================================\n// wgssSigCaptX.js\n// Copyright (c) 2015 Wacom Europe GmbH\n//\n// 01/04/2015  FRE Created\n//==============================================================================\n// Loosely based on https://github.com/robertodecurnex/J50Npi\nexport const JSONreq={map:{},counter:0,getJSON:function(e,t,n){var a=e+(e.indexOf(\"?\")+1?\"&\":\"?\"),c=document.getElementsByTagName(\"head\")[0],s=document.createElement(\"script\"),m=[],r=\"\",i=\"json-\"+this.counter;this.counter++,t.script_name=i,t._rand=Math.random(),this.map[i]=n,t.callback=\"JSONreq.success\";for(r in t)m.push(r+\"=\"+encodeURIComponent(t[r]));a+=m.join(\"&\"),s.type=\"text/javascript\",s.src=a,s.id=i,c.appendChild(s)},success:function(e){var t=e.script_name;delete e.script_name,this.map[t](e);var n=document.getElementsByTagName(\"head\")[0],a=document.getElementById(t);n.removeChild(a),delete this.map.script_name}};\n\n/*var JSONreq = {  \n    map: {},\n    counter: 0,\n    getJSON: function(url, data, callback) {\n      var src = url + (url.indexOf(\"?\")+1 ? \"&\" : \"?\");\n      var head = document.getElementsByTagName(\"head\")[0];\n      var newScript = document.createElement(\"script\");\n      var params = [];\n      var param_name = \"\";\n      \n      var script_name = \"json-\" + this.counter;\n      this.counter++;\n      data[\"script_name\"] = script_name;\n      data[\"_rand\"] = Math.random();\n      this.map[script_name] = callback;\n      \n      data[\"callback\"] = \"JSONreq.success\";\n      for(param_name in data){  \n          params.push(param_name + \"=\" + encodeURIComponent(data[param_name]));  \n      }\n      src += params.join(\"&\");\n\n      newScript.type = \"text/javascript\";  \n      newScript.src = src;\n      newScript.id = script_name;\n      \n      head.appendChild(newScript); \n    },\n    success: function(server_data) {\n      var script_name = server_data.script_name;\n      delete server_data.script_name;\n      this.map[script_name](server_data);\n      var head = document.getElementsByTagName(\"head\")[0];\n      var the_script = document.getElementById(script_name);\n      head.removeChild(the_script);\n      delete this.map.script_name;\n    }\n};*/\n\nexport class WacomGSS_SignatureSDK\n{\n  _onDetectRunning;\n  service_port;\n\n  constructor (_onDetectRunning, service_port)\n  {\n    this._onDetectRunning = _onDetectRunning\n    this.service_port = service_port;\n\n  this.running = false;\n  this.session = null;\n  this.service_detected = false;\n  let sigsdkptr = this;\n  window.sdkPtr = sigsdkptr;\n  var server_url = \"https://localhost:\";\n  \n  this.RBFlags =\n  {\n    //RenderOutputBinary : 2048,    // Not supported in SigCaptX\n    //RenderOutputFilename : 4096,  // Not supported in SigCaptX\n    RenderOutputPicture : 2097152,\n    RenderOutputBase64 : 8192,\n    RenderBackgroundTransparent : 65536,\n    RenderColor1BPP : 131072,\n    RenderColor24BPP : 262144,\n    RenderColor32BPP : 524288,\n    RenderColorAntiAlias : 1048576,\n    RenderEncodeData : 4194304,\n    RenderWatermark : 8388608,\n    RenderClipped : 16777216,\n    RenderRelative : 33554432\n  };\n  \n  this.IntegrityStatus = {\n    IntegrityOK : 0,\n    IntegrityFail : 1,\n    IntegrityMissing : 2,\n    IntegrityWrongType : 3,\n    IntegrityInsufficientData : 4,\n    IntegrityUncertain : 5,\n    IntegrityUnsupported : 6\n  };\n  \n  this.HashType =\n  {\n    HashNone : 0,\n    HashMD5 : 1,\n    HashSHA1 : 2,\n    HashSHA224 : 3,\n    HashSHA256 : 4,\n    HashSHA384 : 5,\n    HashSHA512 : 6\n  };\n  \n  this.KeyType =\n  {\n    KeyNone : 0,\n    KeyMD5 : 1,\n    KeyMD5MAC : 2,\n    KeySHA1 : 3,\n    KeySHA224 : 4,\n    KeySHA256 : 5,\n    KeySHA384 : 6,\n    KeySHA512 : 7,\n    KeyCAPICOM : 8\n  };\n  \n  this.SignedData =\n  {\n    DataGood : 0,\n    DataNoHash : 1,\n    DataBadType : 2,\n    DataBadHash : 3,\n    DataError : 4,\n    DataUncertain : 5,\n    DataSigMoved : 6\n  };\n  \n  this.CaptData =\n  {\n    CaptDigitizer : 26,\n    CaptDigitizerDriver : 27,\n    CaptMachineOS : 28,\n    CaptNetworkCard : 29\n  };\n  \n  this.DynamicCaptureResult =\n  {\n    DynCaptOK : 0,\n    DynCaptCancel : 1,\n    DynCaptPadError : 100,\n    DynCaptError : 101,\n    DynCaptNotLicensed : 103,\n    DynCaptAbort : 200,\n    DynCaptIntegrityKeyInvalid : 102\n  };\n  \n  this.TimeZone =\n  {\n    TimeLocal : 0,\n    TimeGMT : 1,\n    TimeUTC : 1\n  };\n  \n  this.DisplayMode =\n  {\n    DspForceFit : 0,\n    DspUseZoom : 1,\n    DspBestFit : 2\n  };\n  \n  this.ShowText =\n  {\n    TxtDontShow : 0,\n    TxtShowLeft : 1,\n    TxtShowCenter : 2,\n    TxtShowRight : 4\n  };\n  \n  this.ObjectType =\n  {\n    ObjectText : 0,\n    ObjectButton : 1,\n    ObjectCheckbox : 2,\n    ObjectSignature : 3,\n    ObjectInput : 4,\n    ObjectInputEcho : 5,\n    ObjectHash : 6,\n    ObjectImage : 7,\n    ObjectDisplayAtShutdown : 8,\n    ObjectInking : 9,\n    ObjectRadioButton : 10\n  };\n  \n  \n  this.TextOptions =\n  {\n    TextAlignLeft: 0,\n    TextAlignRight: 1,\n    TextAlignCentre: 2,\n    TextAlignJustify: 3\n  };\n  \n  this.ButtonOptions =\n  {\n    BtnAlignCentre: 0,\n    BtnAlignMiddle: 0,\n    BtnAlignLeft: 1,\n    BtnAlignRight: 2,\n    BtnAlignTop: 4,\n    BtnAlignBottom: 8\n  };\n  \n  this.CheckBoxOptions = \n  {\n    CheckboxUnchecked: 0,\n    CheckboxChecked: 1,\n    CheckboxDisplayTick: 2,\n    CheckboxDisplayCross: 4\n  };\n  \n  this.ObjectOptionType =\n  {\n    OBJECTOPTION_STRING: 0,\n    OBJECTOPTION_INT: 1,\n    OBJECTOPTION_BOOL: 2\n  };\n  \n  this.VariantType = \n  {\n    VARIANT_EMPTY: 0,\n    VARIANT_TEXT: 1,\n    VARIANT_NUM : 2,\n    VARIANT_OBJECTOPTIONS : 3,\n    VARIANT_SIGOBJ: 4,\n    VARIANT_SIGCTL: 5,\n    VARIANT_INPUTOBJ: 6,\n    VARIANT_HASH: 7,\n    VARIANT_IMGURL: 8,\n    VARIANT_BASE64: 9,\n    VARIANT_DYNCAP: 10,\n    VARIANT_WIZCTL: 11,\n    VARIANT_FONT: 12,\n    VARIANT_KEY: 13\n  };\n  \n  this.PrimitiveType =\n  {\n    PrimitiveLine: 0,\n    PrimitiveRectangle: 1,\n    PrimitiveEllipse: 2\n  };\n  \n  this.PrimitiveOptions =\n  {    \n    PrimitiveLineSolid: 0x1,\n    PrimitiveLineDashed: 0x2,\n    PrimitiveOutline: 0x4,\n    PrimitiveFill: 0x8,\n    PrimitiveFillXOR: 0x10\n  };\n  \n  this.EventType =\n  {    \n    EvTextClicked      : 0,\n    EvButtonClicked    : 1,\n    EvCheckboxChecked  : 2,\n    EvCheckboxUnchecked: 3,\n    EvInputMinReached  : 4,\n    EvInputMaxReached  : 5,\n    EvInputExceeded    : 6\n  };\n  \n  this.EncryptAlg = \n  {\n    EncryptNone: 0,\n    EncryptTripleDES: 1\n  }\n  \n  this.ResponseStatus =\n  {\n    OK: 0,\n    FAILED: 1,\n    INVALID_SESSION: 3\n  };\n  \n  this.FontWeight = \n  {\n    FW_DONTCARE: 0,\n    FW_THIN: 100,\n    FW_EXTRALIGHT: 200,\n    FW_LIGHT: 300,\n    FW_NORMAL: 400,\n    FW_MEDIUM: 500,\n    FW_SEMIBOLD: 600,\n    FW_BOLD: 700,\n    FW_EXTRABOLD: 800,\n    FW_HEAVY: 900,\n    FW_ULTRALIGHT: 200,\n    FW_REGULAR: 400,\n    FW_DEMIBOLD: 600,\n    FW_ULTRABOLD: 800,\n    FW_BLACK: 900\n  }\n  \n  this.FontCharset =\n  {\n    ANSI_CHARSET: 0,\n    DEFAULT_CHARSET: 1,\n    SYMBOL_CHARSET: 2,\n    SHIFTJIS_CHARSET: 128,\n    HANGEUL_CHARSET: 129,\n    HANGUL_CHARSET: 129,\n    GB2312_CHARSET: 134,\n    CHINESEBIG5_CHARSET: 136,\n    OEM_CHARSET: 255,\n    JOHAB_CHARSET: 130,\n    HEBREW_CHARSET: 177,\n    ARABIC_CHARSET: 178,\n    GREEK_CHARSET: 161,\n    TURKISH_CHARSET: 162,\n    VIETNAMESE_CHARSET: 163,\n    THAI_CHARSET: 222,\n    EASTEUROPE_CHARSET: 238,\n    RUSSIAN_CHARSET: 204,\n    MAC_CHARSET: 77,\n    BALTIC_CHARSET: 186,\n    FS_LATIN1: 0x00000001,\n    FS_LATIN2: 0x00000002,\n    FS_CYRILLIC: 0x00000004,\n    FS_GREEK: 0x00000008,\n    FS_TURKISH: 0x00000010,\n    FS_HEBREW: 0x00000020,\n    FS_ARABIC: 0x00000040,\n    FS_BALTIC: 0x00000080,\n    FS_VIETNAMESE: 0x00000100,\n    FS_THAI: 0x00010000,\n    FS_JISJAPAN: 0x00020000,\n    FS_CHINESESIMP: 0x00040000,\n    FS_WANSUNG: 0x00080000,\n    FS_CHINESETRAD: 0x00100000,\n    FS_JOHAB: 0x00200000,\n    FS_SYMBOL: 0x80000000\n  }\n  \n  this.Font = function(_name, _size, _weight, _charset, _italic, _underline, _strike)\n  {\n    this.type = sigsdkptr.VariantType.VARIANT_FONT;\n    this.fontName = (typeof _name == 'undefined')? \"Arial\" : _name;\n    this.fontSize = (typeof _size == 'undefined')? 8: _size;\n    this.sWeight = (typeof _weight == 'undefined')? sigsdkptr.FontWeight.FW_NORMAL: _weight;\n    this.sCharset = (typeof _charset == 'undefined')? sigsdkptr.FontCharset.ANSI_CHARSET: _charset;\n    this.fItalic = (typeof fItalic == 'undefined')? 0: fItalic;\n    this.fUnderline = (typeof _underline == 'undefined')? 0: fUnderline;\n    this.fStrikethrough = (typeof _strike == 'undefined')? 0: _strike;\n  }\n\n  this.keepAlive = function()\n  {\n    var data = { \n                   \"session\": sigsdkptr.session, \n                   \"KeepAlive\": 1\n                 };\n    JSONreq.getJSON(server_url + \"wacom.js\", data, function (){});\n    setTimeout(sigsdkptr.keepAlive, 2000);\n  }\n  \n  function onGetSession(server_data) \n  {\n    if(0 == server_data.status) \n    {\n      sigsdkptr.session = server_data.session\n      sigsdkptr.running = true;\n      _onDetectRunning();\n      setTimeout(sigsdkptr.keepAlive, 2000);\n    } \n    else \n    {\n      console.log(\"Signature SDK local server error: \" + server_data.status);\n    }\n  }\n  \n  function onGetPort(server_data) \n  {\n    if(0 == server_data.status) \n    {\n      sigsdkptr.service_detected = true;\n      server_url += server_data.port + \"/\";\n      var data = { \n                   \"CreateSession\": 1\n                 };\n      JSONreq.getJSON(server_url + \"wacom.js\", data, onGetSession)\n    } \n    else \n    {\n      console.log(\"Signature SDK Service error: \" + server_data.status);\n    }\n  }\n\n\n  function destroySession()\n  {\n    if (sigsdkptr.session != 0)\n    {\n      var u = server_url + \"wacom.js\" + \"?DestroySession=1&session=\"+sigsdkptr.session;\n\n      sigsdkptr.session = 0;\n\n      if (self.Navigator.sendBeacon != undefined)\n      {\n        self.Navigator.sendBeacon(u);\n      }\n      else\n      {\n        var r = new XMLHttpRequest();\n        r.open(\"GET\", u, false); // synchronous\n        r.send(null);\n      }\n      \n    }\n  }\n\n  window.addEventListener('unload', function(event) { destroySession(); });\n\n  function checkService() \n  {\n    var data = { \"GetPort\": 1 };\n    JSONreq.getJSON(server_url + service_port + \"/wacom.js\", data, onGetPort);\n  }\n  checkService();\n\n  this.getVersion = function(_onGetVersion) {\n    var data = {\n      \"GetVersion\": 1,\n      \"session\": sigsdkptr.session,\n    };\n    function callback(server_data) {\n      _onGetVersion(/*thisptr,*/ server_data.version, parseInt(server_data.status));\n    }\n    JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n  }\n\n  function checkVar(input)\n  {\n    return ('undefined' == typeof input || null == input)? \"\" : input;\n  }\n  \n  this.Hash = function(_onHash)\n  {\n    var thisptr = this;\n    this.handle = null;\n    this.type = sigsdkptr.VariantType.VARIANT_HASH;\n    \n    var data = { \n                 \"Hash\": \"Constructor\", \n                 \"session\": sigsdkptr.session \n               };\n    function callback(server_data)\n    {\n      thisptr.handle = server_data.handle;\n      _onHash(thisptr, parseInt(server_data.status));\n    }\n    JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    \n    // hData is a sigsdkptr.Variant\n    this.Add = function(hData, _onAdd)\n    {\n      var data = { \n                   \"Hash\" : \"Add\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle\n                 };\n      hData.Stringify(data, \"hData\");\n      function callback(server_data) \n      {\n        _onAdd(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.Clear = function(_onClear)\n    {\n      var data = { \n                   \"Hash\" : \"Clear\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data) \n      {\n        _onClear(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetType = function(_onGetType)\n    {\n\n      var data = {\n                   \"Hash\" : \"GetType\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data) \n      {\n        // server_data.type type is sigsdkptr.HashType\n        _onGetType(thisptr, parseInt(server_data.hashType), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // type is sigsdkptr.HashType\n    this.PutType = function(type, _onPutType)\n    {\n      var data = { \n                   \"Hash\" : \"PutType\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle, \n                   \"type\": checkVar(type)\n                 };\n      function callback(server_data) \n      {\n        _onPutType(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n  }\n  \n  this.Key = function(_onKey)\n  {\n    var thisptr = this;\n    this.handle = null;\n    this.type = sigsdkptr.VariantType.VARIANT_KEY;\n    \n    var data = { \n                 \"Key\": \"Constructor\", \n                 \"session\": sigsdkptr.session \n               };\n    function callback(server_data)\n    {\n      thisptr.handle = server_data.handle;\n      _onKey(thisptr, parseInt(server_data.status));\n    }\n    JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n        \n    this.GetType = function(_onGetType)\n    {\n      var data = { \n                   \"Key\" : \"GetType\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data) \n      {\n        // server_data.type type is sigsdkptr.KeyType\n        _onGetType(thisptr, parseInt(server_data.type), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // type is sigsdkptr.KeyType\n    // value is sigsdkptr.Variant\n    this.Set = function(type, value, _onSet)\n    {\n      var data = { \n                   \"Key\" : \"Set\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle, \n                   \"type\": checkVar(type)\n                 };\n      value.Stringify(data, \"value\");\n      function callback(server_data) \n      {\n        _onSet(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n  }\n  \n  this.Bitmap = function()\n  {\n    var thisptr = this;\n    this.handle = null;\n    this.isBase64 = false;\n    this.mime_type = null;\n    this.image = new Image();\n  }\n  \n  this.SigObj = function()\n  {\n    var thisptr = this;\n    this.handle = null;\n    this.type = sigsdkptr.VariantType.VARIANT_SIGOBJ;\n    \n    // key is sigsdkptr.Key\n    this.CheckIntegrity = function(key, _onCheckIntegrity)\n    {\n      var data = { \n                   \"SigObj\" : \"CheckIntegrity\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle\n                 };\n      var vKey = new sigsdkptr.Variant();\n      vKey.Set(key);\n      vKey.Stringify(data, \"key\");\n      function callback(server_data) \n      {\n        //server_data.status type is sigsdkptr.IntegrityStatus\n        _onCheckIntegrity(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // hash type is sigsdkptr.Hash\n    this.CheckSignedData = function(hash, _onCheckSignedData)\n    {\n      var data = { \n                   \"SigObj\" : \"CheckSignedData\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle, \n                   \"HashHandle\": checkVar(hash.handle)\n                 };\n      function callback(server_data) \n      {\n        //server_data.status type is sigsdkptr.SignedData\n        _onCheckSignedData(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }    \n    \n    this.Clear = function(_onClear)\n    {\n      var data = { \n                   \"SigObj\" : \"Clear\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data) \n      {\n        _onClear(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }    \n    // captData type is sigsdkptr.CaptData\n    this.GetAdditionalData = function(captData, _onGetAdditionalData)\n    {\n      var data = { \n                   \"SigObj\" : \"GetAdditionalData\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle, \n                   \"captData\": checkVar(captData)\n                 };\n      function callback(server_data) \n      {\n        //server_data.additionalData is a string\n        _onGetAdditionalData(thisptr, server_data.additionalData, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }    \n    \n    this.GetCrossedOut = function(_onGetCrossedOut)\n    {\n      var data = { \n                   \"SigObj\" : \"GetCrossedOut\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data) \n      {\n        //server_data.crossedOut is a bool\n        _onGetCrossedOut(thisptr, Boolean(1 == parseInt(server_data.crossedOut)), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }    \n    // key is a string\n    this.GetExtraData = function(key, _onGetExtraData)\n    {\n      var data = { \n                   \"SigObj\" : \"GetExtraData\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle,\n                   \"key\": checkVar(key)\n                 };\n      function callback(server_data) \n      {\n        //server_data.extraData is a string\n        _onGetExtraData(thisptr, server_data.extraData, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }    \n    \n    this.GetHeight = function(_onGetHeight)\n    {\n      var data = { \n                   \"SigObj\" : \"GetHeight\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data) \n      {\n        //server_data.height is a number\n        _onGetHeight(thisptr, parseInt(server_data.height), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }    \n    \n    this.GetInk = function(_onGetInk)\n    {\n      var data = { \n                   \"SigObj\" : \"GetInk\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data) \n      {\n        //server_data.ink is a string\n        _onGetInk(thisptr, server_data.ink, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }    \n    \n    this.GetIsCaptured = function(_onGetIsCaptured)\n    {\n      var data = { \n                   \"SigObj\" : \"GetIsCaptured\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data) \n      {\n        //server_data.isCaptured is a bool\n        _onGetIsCaptured(thisptr, Boolean(1 == parseInt(server_data.isCaptured)), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // key is a string\n    this.GetProperty = function(key, _onGetProperty)\n    {\n      var data = { \n                   \"SigObj\" : \"GetProperty\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle,\n                   \"key\": checkVar(key)\n                 };\n      function callback(server_data) \n      {\n        var property = new sigsdkptr.Variant();\n        property.Parse(server_data, \"property\");\n        _onGetProperty(thisptr, property, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetSigData = function(_onGetSigData)\n    {\n      var data = { \n                   \"SigObj\" : \"GetSigData\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data) \n      {\n        //server_data.sigData is a sigsdkptr.Variant (if it's a VARIANT_TEXT, it's Base64 encoded)\n        var sigData = new sigsdkptr.Variant();\n        sigData.Parse(server_data, \"sigData\");\n        _onGetSigData(thisptr, sigData, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }    \n    \n    this.GetSigText = function(_onGetSigText)\n    {\n      var data = { \n                   \"SigObj\" : \"GetSigText\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data) \n      {\n        //server_data.sigText is a string\n        _onGetSigText(thisptr, server_data.sigText, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    //timeZone is a sigsdkptr.TimeZone\n    this.GetWhen = function(timeZone, _onGetWhen) \n    {\n      var data = { \n                   \"SigObj\" : \"GetWhen\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle,\n                   \"timeZone\": checkVar(timeZone)\n                 };\n      function callback(server_data) \n      {\n        //server_data.when is a date\n        var date = new Date(\n          parseFloat(server_data.year),\n          parseFloat(server_data.month) - 1,\n          parseFloat(server_data.day),\n          parseFloat(server_data.hour), \n          parseFloat(server_data.minute), \n          parseFloat(server_data.second)\n        );\n        date.dayOfWeek = parseFloat(server_data.dayOfWeek);\n        _onGetWhen(thisptr, date, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetWho = function(_onGetWho)\n    {\n      var data = { \n                   \"SigObj\" : \"GetWho\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data) \n      {\n        //server_data.who is a string\n        _onGetWho(thisptr, server_data.who, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetWhy = function(_onGetWhy)\n    {\n      var data = { \n                   \"SigObj\" : \"GetWhy\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data) \n      {\n        //server_data.why is a string\n        _onGetWhy(thisptr, server_data.why, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetWidth = function(_onGetWidth)\n    {\n      var data = { \n                   \"SigObj\" : \"GetWidth\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data) \n      {\n        //server_data.width is a number\n        _onGetWidth(thisptr, parseInt(server_data.width), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // key is a string\n    // value is a string\n    this.PutExtraData = function(key, value, _onPutExtraData)\n    {\n      var data = { \n                   \"SigObj\" : \"PutExtraData\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle, \n                   \"key\": checkVar(key), \n                   \"value\": checkVar(value) \n                 };\n      function callback(server_data) \n      {\n        _onPutExtraData(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // ink is a string\n    this.PutInk = function(ink, _onPutInk)\n    {\n      var data = { \n                   \"SigObj\" : \"PutInk\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle, \n                   \"ink\": checkVar(ink)\n                 };\n      function callback(server_data) \n      {\n        _onPutInk(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // sigData type is sigsdkptr.Variant\n    this.PutSigData = function(sigData, _onPutSigData)\n    {\n      var data = { \n                   \"SigObj\" : \"PutSigData\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle\n                 };\n      sigData.Stringify(data, \"sigData\");\n      function callback(server_data) \n      {\n        _onPutSigData(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // sigText is a string\n    this.PutSigText = function(sigText, _onPutSigText)\n    {\n      var data = { \n                   \"SigObj\" : \"PutSigText\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle, \n                   \"sigText\": checkVar(sigText)\n                 };\n      function callback(server_data) \n      {\n        _onPutSigText(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // bitmapURL type is a url\n    this.ReadEncodedBitmap = function(bitmapURL, _onReadEncodedBitmap)\n    {\n      var data = { \n                   \"SigObj\" : \"ReadEncodedBitmap\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle\n                 };\n      var vBmpUrl = new sigsdkptr.Variant();\n      vBmpUrl.type = sigsdkptr.VariantType.VARIANT_IMGURL;\n      vBmpUrl.url = bitmapURL;\n      vBmpUrl.Stringify(data, \"bitmapURL\");\n      function callback(server_data) \n      {\n        _onReadEncodedBitmap(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // mime_type type is a string\n    // width is an integer\n    // height is an integer\n    // ink_width is a real\n    // ink_color is an OLE_COLOR number\n    // background_color is an OLE_COLOR number\n    // flags is a sigsdkptr.RBFlags\n    // paddingX is a real\n    // paddingY is a real\n    this.RenderBitmap = function(mime_type, width, height, ink_width, ink_color, background_color, flags, paddingX, paddingY,_onRenderBitmap) \n    {\n      var data = { \n                   \"SigObj\": \"RenderBitmap\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle, \n                   \"mimetype\": checkVar(mime_type),\n                    \"width\": checkVar(width), \n                   \"height\": checkVar(height), \n                   \"ink_width\": checkVar(ink_width), \n                    \"ink_color\": checkVar(ink_color), \n                   \"bg_color\": checkVar(background_color),\n                   \"flags\": checkVar(flags),\n                   \"paddingX\": checkVar(paddingX),\n                   \"paddingY\": checkVar(paddingY)\n                 };\n      function callback(server_data) \n      {\n        var status = parseInt(server_data.status);\n\n        if (status == 0)\n        {\n          if (flags & sigsdkptr.RBFlags.RenderOutputPicture)\n          {\n            var bmp = new sigsdkptr.Bitmap();\n            bmp.handle = server_data.bitmapHandle;\n            bmp.isBase64 = (1 == server_data.isBase64 ? true : false);\n\n            bmp.image.onload = function () { _onRenderBitmap(thisptr, bmp, status); };\n            if (bmp.isBase64) {\n              bmp.image.src = 'data:image/' + mime_type + ';base64,' + server_data.base64;\n            }\n            else {\n              bmp.image.src = server_url + server_data.bitmapHandle + \"?session=\" + sigsdkptr.session;\n            }\n          }\n          else if (1 == server_data.isBase64)\n          {\n            _onRenderBitmap(thisptr, server_data.base64, status);\n          }\n        }\n        else\n        {\n          _onRenderBitmap(thisptr, null, status);\n        }\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback)\n    }\n    // key is a string\n    // value is a sigsdkptr.Variant\n    this.SetProperty = function(key, value, _onSetProperty)\n    {\n      var data = { \n                   \"SigObj\" : \"SetProperty\",  \n                   \"session\": sigsdkptr.session, \n                   \"handle\": thisptr.handle, \n                   \"key\": checkVar(key)\n                 };\n      value.Stringify(data, \"value\");\n      function callback(server_data) \n      {\n        _onSetProperty(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n  }\n  \n  this.DynamicCapture = function(_onConstructor)\n  {\n    var thisptr = this;\n    this.handle = null;\n    \n    var data = { \n                 \"DynamicCapture\": \"Constructor\", \n                 \"session\": sigsdkptr.session\n               };\n    function callback(server_data)\n    {\n      thisptr.handle = server_data.handle;\n      _onConstructor(thisptr, parseInt(server_data.status));\n    }\n    JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    // sigCtl is a sigsdkptr.SigCtl\n    // who is a string\n    // why is a string\n    // what is a sigsdkptr.Hash\n    // key is a sigsdkptr.Key\n    this.Capture = function(sigCtl, who, why, what, key, _onCapture) {\n      var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n      var left = window.screenLeft ? window.screenLeft : window.screenX;\n      var top = window.screenTop ? window.screenTop : window.screenY;\n      var data = { \n                   \"DynamicCapture\": \"Capture\", \n                   \"session\": sigsdkptr.session, \n                   \"who\": checkVar(who), \n                   \"why\": checkVar(why), \n                   \"width\": checkVar(width),\n                   \"height\": checkVar(height),\n                   \"left\": checkVar(left),\n                   \"top\": checkVar(top), \n                   \"SigCtlHandle\": checkVar(sigCtl.handle), \n                   \"handle\": thisptr.handle \n                 };\n      var vWhat = new sigsdkptr.Variant();\n      vWhat.Set(what);\n      vWhat.Stringify(data, \"what\");\n      var vKey = new sigsdkptr.Variant();\n      vKey.Set(key);\n      vKey.Stringify(data, \"key\");\n      function callback(server_data)\n      {\n        var sigObj = new sigsdkptr.SigObj();\n        sigObj.handle = server_data.handle;\n        //server_data.status type is sigsdkptr.DynamicCaptureResult\n        _onCapture(thisptr, sigObj, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetLicence = function(_onGetLicence) {\n      var data = { \n                   \"DynamicCapture\": \"GetLicence\",\n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.licence type is string\n        _onGetLicence(thisptr, server_data.licence, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // key type is string\n    this.GetProperty = function(key, _onGetProperty) {\n      var data = { \n                   \"DynamicCapture\": \"GetProperty\",\n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"key\": checkVar(key)\n                 };\n      function callback(server_data)\n      {\n        var property = new sigsdkptr.Variant();\n        property.Parse(server_data, \"property\");\n        _onGetProperty(thisptr, property, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // licence type is string\n    this.PutLicence = function(licence, _onPutLicence) {\n      var data = { \n                   \"DynamicCapture\": \"PutLicence\",\n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"licence\": checkVar(licence)\n                 };\n      function callback(server_data)\n      {\n        _onPutLicence(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // key type is string\n    // value type is sigsdkptr.Variant\n    this.SetProperty = function(key, value, _onSetProperty) {\n      var data = { \n                   \"DynamicCapture\": \"SetProperty\",\n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"key\": checkVar(key)\n                 };\n      value.Stringify(data, \"value\");\n      function callback(server_data)\n      {\n        _onSetProperty(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n  }\n  \n  this.SigCtl = function(_onConstructor)\n  {\n    var thisptr = this;\n    this.handle = null;\n    this.type = sigsdkptr.VariantType.VARIANT_SIGCTL;\n    \n    var data = { \n                 \"SigCtl\": \"Constructor\", \n                 \"session\": sigsdkptr.session\n               };\n    function callback(server_data)\n    {\n      thisptr.handle = server_data.handle;\n      _onConstructor(thisptr, parseInt(server_data.status));\n    }\n    JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    \n    this.AboutBox = function(_onAboutBox)\n    {      \n      var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n      var left = window.screenLeft ? window.screenLeft : window.screenX;\n      var top = window.screenTop ? window.screenTop : window.screenY;\n      var data = { \n                   \"SigCtl\": \"AboutBox\", \n                   \"session\": sigsdkptr.session,\n                   \"width\": checkVar(width),\n                   \"height\": checkVar(height),\n                   \"left\": checkVar(left),\n                   \"top\": checkVar(top), \n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        _onAboutBox(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    //key is a string\n    this.GetAppData = function(key, _onGetAppData)\n    {\n      var data = { \n                   \"SigCtl\": \"GetAppData\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"key\": checkVar(key)\n                 };\n      function callback(server_data)\n      {\n        var appData = new sigsdkptr.Variant();\n        appData.Parse(server_data, \"appData\");\n        _onGetAppData(thisptr, appData, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    /*\n    this.GetBackColor = function(_onGetBackColor)\n    {\n      var data = { \n                   \"SigCtl\": \"GetBackColor\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.appData is an OLE_COLOR (number)\n        _onGetBackColor(thisptr, parseInt(server_data.backColor), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetBackStyle = function(_onGetBackStyle)\n    {\n      var data = { \n                   \"SigCtl\": \"GetBackStyle\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.backStyle is a number\n        _onGetBackStyle(thisptr, parseInt(server_data.backStyle), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetBorderColor = function(_onGetBorderColor)\n    {\n      var data = { \n                   \"SigCtl\": \"GetBorderColor\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.borderColor is an OLE_COLOR (number)\n        _onGetBorderColor(thisptr, parseInt(server_data.borderColor), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetBorderStyle = function(_onGetBorderStyle)\n    {\n      var data = { \n                   \"SigCtl\": \"GetBorderStyle\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.borderStyle is a number\n        _onGetBorderStyle(thisptr, parseInt(server_data.borderStyle), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetBorderVisible = function(_onGetBorderVisible)\n    {\n      var data = { \n                   \"SigCtl\": \"GetBorderVisible\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.borderVisible is a bool\n        _onGetBorderVisible(thisptr, Boolean(1 == parseInt(server_data.borderVisible)), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetBorderWidth = function(_onGetBorderWidth)\n    {\n      var data = { \n                   \"SigCtl\": \"GetBorderWidth\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.borderWidth is a number\n        _onGetBorderWidth(thisptr, parseInt(server_data.borderWidth), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetCaption = function(_onGetCaption)\n    {\n      var data = { \n                   \"SigCtl\": \"GetCaption\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.caption is a string\n        _onGetCaption(thisptr, server_data.caption, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetCtlPadding = function(_onGetCtlPadding)\n    {\n      var data = { \n                   \"SigCtl\": \"GetCtlPadding\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.ctlPadding is a number\n        _onGetCtlPadding(thisptr, parseInt(server_data.ctlPadding), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetDisplayMode = function(_onGetDisplayMode)\n    {\n      var data = { \n                   \"SigCtl\": \"GetDisplayMode\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.displayMode is a sigsdkptr.DisplayMode\n        _onGetDisplayMode(thisptr, parseInt(server_data.displayMode), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetEnabled = function(_onGetEnabled)\n    {\n      var data = { \n                   \"SigCtl\": \"GetEnabled\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.enabled is a bool\n        _onGetEnabled(thisptr, Boolean(1 == parseInt(server_data.enabled)), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetForeColor = function(_onGetForeColor)\n    {\n      var data = { \n                   \"SigCtl\": \"GetForeColor\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.foreColor is an OLE_COLOR (number)\n        _onGetForeColor(thisptr, parseInt(server_data.foreColor), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetInkColor = function(_onGetInkColor)\n    {\n      var data = { \n                   \"SigCtl\": \"GetInkColor\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.inkColor is an OLE_COLOR (number)\n        _onGetInkColor(thisptr, parseInt(server_data.inkColor), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetInkWidth = function(_onGetInkWidth)\n    {\n      var data = { \n                   \"SigCtl\": \"GetInkWidth\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.inkWidth is a number\n        _onGetInkWidth(thisptr, parseFloat(server_data.inkWidth), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    */\n    this.GetInputData = function(_onGetInputData)\n    {\n      var data = { \n                   \"SigCtl\": \"GetInputData\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.inputData is a string\n        _onGetInputData(thisptr, server_data.inputData, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    /*\n    this.GetInputSignature = function(_onGetInputSignature)\n    {\n      var data = { \n                   \"SigCtl\": \"GetInputSignature\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.inputSignature is a string\n        _onGetInputSignature(thisptr, server_data.inputSignature, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetInputWho = function(_onGetInputWho)\n    {\n      var data = { \n                   \"SigCtl\": \"GetInputWho\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.inputWho is a string\n        _onGetInputWho(thisptr, server_data.inputWho, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetInputWhy = function(_onGetInputWhy)\n    {\n      var data = { \n                   \"SigCtl\": \"GetInputWhy\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.inputWhy is a string\n        _onGetInputWhy(thisptr, server_data.inputWhy, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    */\n    this.GetLicence = function (_onGetLicence) {\n      var data = {\n        \"SigCtl\": \"GetLicence\",\n        \"session\": sigsdkptr.session,\n        \"handle\": thisptr.handle\n      };\n      function callback(server_data) {\n        //server_data.licence is a string\n        _onGetLicence(thisptr, server_data.licence, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n\n    // key is a string\n    this.GetProperty = function(key, _onGetProperty)\n    {\n      var data = { \n                   \"SigCtl\": \"GetProperty\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"key\": checkVar(key)\n                 };\n      function callback(server_data)\n      {\n        var property = new sigsdkptr.Variant();\n        property.Parse(server_data, \"property\");\n        _onGetProperty(thisptr, property, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    /*\n    this.GetRotation = function(_onGetRotation)\n    {\n      var data = { \n                   \"SigCtl\": \"GetRotation\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.rotation is a number\n        _onGetRotation(thisptr, parseInt(server_data.rotation), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetShowWhen = function(_onGetShowWhen)\n    {\n      var data = { \n                   \"SigCtl\": \"GetShowWhen\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.showWhen is a sigsdkptr.ShowText\n        _onGetShowWhen(thisptr, parseInt(server_data.showWhen), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetShowWho = function(_onGetShowWho)\n    {\n      var data = { \n                   \"SigCtl\": \"GetShowWho\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.showWho is a sigsdkptr.ShowText\n        _onGetShowWho(thisptr, parseInt(server_data.showWho), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetShowWhy = function(_onGetShowWhy)\n    {\n      var data = { \n                   \"SigCtl\": \"GetShowWhy\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.showWhy is a sigsdkptr.ShowText\n        _onGetShowWhy(thisptr, parseInt(server_data.showWhy), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    */\n    this.GetSignature = function(_onGetSignature)\n    {\n      var data = { \n                   \"SigCtl\": \"GetSignature\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        var sigObj = new sigsdkptr.SigObj();\n        sigObj.handle = server_data.signatureHandle;\n        _onGetSignature(thisptr, sigObj, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    /*\n    this.GetTabStop = function(_onGetTabStop)\n    {\n      var data = { \n                   \"SigCtl\": \"GetTabStop\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.tabStop is a bool\n        _onGetTabStop(thisptr, Boolean(1 == parseInt(server_data.tabStop)), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetWhenFormat = function(_onGetWhenFormat)\n    {\n      var data = { \n                   \"SigCtl\": \"GetWhenFormat\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.whenFormat is a string\n        _onGetWhenFormat(thisptr, server_data.whenFormat, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetZoom = function(_onGetZoom)\n    {\n      var data = { \n                   \"SigCtl\": \"GetZoom\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.zoom is a number\n        _onGetZoom(thisptr, parseInt(server_data.zoom), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }*/\n    // key is a string\n    // val is sigsdkptr.Variant\n    this.PutAppData = function(key, val, _onPutAppData)\n    {\n      var data = { \n                   \"SigCtl\": \"PutAppData\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"key\": checkVar(key)\n                 };\n      val.Stringify(data, \"val\");\n      function callback(server_data)\n      {\n        _onPutAppData(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    /*// backColor type is OLE_COLOR (number)\n    this.PutBackColor = function(backColor, _onPutBackColor)\n    {\n      var data = { \n                   \"SigCtl\": \"PutBackColor\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"backColor\": checkVar(backColor)\n                 };\n      function callback(server_data)\n      {\n        _onPutBackColor(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // backStyle type is OLE_COLOR (number)\n    this.PutBackStyle = function(backStyle, _onPutBackStyle)\n    {\n      var data = { \n                   \"SigCtl\": \"PutBackStyle\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"backStyle\": checkVar(backStyle)\n                 };\n      function callback(server_data)\n      {\n        _onPutBackStyle(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // borderColor type is OLE_COLOR (number)\n    this.PutBorderColor = function(borderColor, _onPutBorderColor)\n    {\n      var data = { \n                   \"SigCtl\": \"PutBorderColor\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"borderColor\": checkVar(borderColor)\n                 };\n      function callback(server_data)\n      {\n        _onPutBorderColor(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // borderStyle type is a number\n    this.PutBorderStyle = function(borderStyle, _onPutBorderStyle)\n    {\n      var data = { \n                   \"SigCtl\": \"PutBorderStyle\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"borderStyle\": checkVar(borderStyle)\n                 };\n      function callback(server_data)\n      {\n        _onPutBorderStyle(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // borderVisible type is bool\n    this.PutBorderVisible = function(borderVisible, _onPutBorderVisible)\n    {\n      var data = { \n                   \"SigCtl\": \"PutBorderVisible\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"borderVisible\": checkVar(borderVisible)\n                 };\n      function callback(server_data)\n      {\n        _onPutBorderVisible(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // borderWidth is a number\n    this.PutBorderWidth = function(borderWidth, _onPutBorderWidth)\n    {\n      var data = { \n                   \"SigCtl\": \"PutBorderWidth\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"borderWidth\": checkVar(borderWidth)\n                 };\n      function callback(server_data)\n      {\n        _onPutBorderWidth(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // caption type is string\n    this.PutCaption = function(caption, _onPutCaption)\n    {\n      var data = { \n                   \"SigCtl\": \"PutCaption\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"caption\": checkVar(caption)\n                 };\n      function callback(server_data)\n      {\n        _onPutCaption(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // ctlPadding is a number\n    this.PutCtlPadding = function(ctlPadding, _onPutCtlPadding)\n    {\n      var data = { \n                   \"SigCtl\": \"PutCtlPadding\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"ctlPadding\": checkVar(ctlPadding)\n                 };\n      function callback(server_data)\n      {\n        _onPutCtlPadding(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // displayMode type is sigsdkptr.DisplayMode (number)\n    this.PutDisplayMode = function(displayMode, _onPutDisplayMode)\n    {\n      var data = { \n                   \"SigCtl\": \"PutDisplayMode\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"displayMode\": checkVar(displayMode)\n                 };\n      function callback(server_data)\n      {\n        _onPutDisplayMode(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // enabled type is bool\n    this.PutEnabled = function(enabled, _onPutEnabled)\n    {\n      var data = { \n                   \"SigCtl\": \"PutEnabled\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"enabled\": checkVar(enabled)\n                 };\n      function callback(server_data)\n      {\n        _onPutEnabled(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // foreColor type is OLE_COLOR (number)\n    this.PutForeColor = function(foreColor, _onPutForeColor)\n    {\n      var data = { \n                   \"SigCtl\": \"PutForeColor\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"foreColor\": checkVar(foreColor)\n                 };\n      function callback(server_data)\n      {\n        _onPutForeColor(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // inkColor type is OLE_COLOR (number)\n    this.PutInkColor = function(inkColor, _onPutInkColor)\n    {\n      var data = { \n                   \"SigCtl\": \"PutInkColor\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"inkColor\": checkVar(inkColor)\n                 };\n      function callback(server_data)\n      {\n        _onPutInkColor(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // inkWidth is a number\n    this.PutInkWidth = function(inkWidth, _onPutInkWidth)\n    {\n      var data = { \n                   \"SigCtl\": \"PutInkWidth\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"inkWidth\": checkVar(inkWidth)\n                 };\n      function callback(server_data)\n      {\n        _onPutInkWidth(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }*/\n    // inputData type is string\n    this.PutInputData = function(inputData, _onPutInputData)\n    {\n      var data = { \n                   \"SigCtl\": \"PutInputData\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"inputData\": checkVar(inputData)\n                 };\n      function callback(server_data)\n      {\n        _onPutInputData(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    /*// inputSignature type is string\n    this.PutInputSignature = function(inputSignature, _onPutInputSignature)\n    {\n      var data = { \n                   \"SigCtl\": \"PutInputSignature\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"inputSignature\": checkVar(inputSignature)\n                 };\n      function callback(server_data)\n      {\n        _onPutInputSignature(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // inputWho type is string\n    this.PutInputWho = function(inputWho, _onPutInputWho)\n    {\n      var data = { \n                   \"SigCtl\": \"PutInputWho\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"inputWho\": checkVar(inputWho)\n                 };\n      function callback(server_data)\n      {\n        _onPutInputWho(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // inputWhy type is string\n    this.PutInputWhy = function(inputWhy, _onPutInputWhy)\n    {\n      var data = { \n                   \"SigCtl\": \"PutInputWhy\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"inputWhy\": checkVar(inputWhy)\n                 };\n      function callback(server_data)\n      {\n        _onPutInputWhy(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }*/\n    // licence type is string\n    this.PutLicence = function(licence, _onPutLicence)\n    {\n      var data = { \n                   \"SigCtl\": \"PutLicence\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"licence\": checkVar(licence)\n                 };\n      function callback(server_data)\n      {\n        _onPutLicence(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // properties type is string\n    this.PutProperties = function(properties, _onPutProperties)\n    {\n      var data = { \n                   \"SigCtl\": \"PutProperties\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"properties\": checkVar(properties)\n                 };\n      function callback(server_data)\n      {\n        _onPutProperties(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    /*// font type is sigsdkptr.Variant (sigsdkptr.VariantType.VARIANT_FONT)\n    this.PutRefFont = function(font, _onPutRefFont)\n    {\n      var data = { \n                   \"SigCtl\": \"PutRefFont\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      font.Stringify(data, \"font\");\n      function callback(server_data)\n      {\n        _onPutRefFont(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // rotation is a number\n    this.PutRotation = function(rotation, _onPutRotation)\n    {\n      var data = { \n                   \"SigCtl\": \"PutRotation\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"rotation\": checkVar(rotation)\n                 };\n      function callback(server_data)\n      {\n        _onPutRotation(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // showWhen type is sigsdkptr.ShowText\n    this.PutShowWhen = function(showWhen, _onPutShowWhen)\n    {\n      var data = { \n                   \"SigCtl\": \"PutShowWhen\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"showWhen\": checkVar(showWhen)\n                 };\n      function callback(server_data)\n      {\n        _onPutShowWhen(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // showWho type is sigsdkptr.ShowText\n    this.PutShowWho = function(showWho, _onPutShowWho)\n    {\n      var data = { \n                   \"SigCtl\": \"PutShowWho\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"showWho\": checkVar(showWho)\n                 };\n      function callback(server_data)\n      {\n        _onPutShowWho(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // showWhy type is sigsdkptr.ShowText\n    this.PutShowWhy = function(showWhy, _onPutShowWhy)\n    {\n      var data = { \n                   \"SigCtl\": \"PutShowWhy\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"showWhy\": checkVar(showWhy)\n                 };\n      function callback(server_data)\n      {\n        _onPutShowWhy(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }*/\n    // sigObj type is sigsdkptr.SigObj\n    this.PutSignature = function(sigObj, _onPutSignature)\n    {\n      var data = { \n                   \"SigCtl\": \"PutSignature\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"signatureHandle\": checkVar(sigObj.handle)\n                 };\n      function callback(server_data)\n      {\n        _onPutSignature(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    /*// tabStop type is bool\n    this.PutTabStop = function(tabStop, _onPutTabStop)\n    {\n      var data = { \n                   \"SigCtl\": \"PutTabStop\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"tabStop\": checkVar(tabStop)\n                 };\n      function callback(server_data)\n      {\n        _onPutTabStop(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // whenFormat type is string\n    this.PutWhenFormat = function(whenFormat, _onPutWhenFormat)\n    {\n      var data = { \n                   \"SigCtl\": \"PutWhenFormat\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"whenFormat\": checkVar(whenFormat)\n                 };\n      function callback(server_data)\n      {\n        _onPutWhenFormat(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // zoom type is a number\n    this.PutZoom = function(zoom, _onPutZoom)\n    {\n      var data = { \n                   \"SigCtl\": \"PutZoom\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"zoom\": checkVar(zoom)\n                 };\n      function callback(server_data)\n      {\n        _onPutZoom(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }*/\n    // key is a string\n    // value is sigsdkptr.Variant \n    this.SetProperty = function(key, value, _onSetProperty)\n    {\n      var data = { \n                   \"SigCtl\": \"SetProperty\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"key\": checkVar(key)\n                 };\n      value.Stringify(data, \"value\");\n      function callback(server_data)\n      {\n        _onSetProperty(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n  }\n  \n  this.InputObj = function(_onConstructor)\n  {\n    var thisptr = this;\n    this.handle = null;\n    this.type = sigsdkptr.VariantType.VARIANT_INPUTOBJ;\n\n    var data = { \n                 \"InputObj\": \"Constructor\", \n                 \"session\": sigsdkptr.session \n               };\n    function callback(server_data)\n    {\n      thisptr.handle = server_data.handle;\n      _onConstructor(thisptr, parseInt(server_data.status));\n    }\n    JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    \n    this.Clear = function(_onClear)\n    {\n      var data = { \n                   \"InputObj\": \"Clear\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        _onClear(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetData = function(_onGetData)\n    {\n      var data = { \n                   \"InputObj\": \"GetData\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n      // server_data.data is a string\n        _onGetData(thisptr, server_data.data, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n        \n    this.GetEncryptionType = function(_onGetEncryptionType)\n    {\n      var data = { \n                   \"InputObj\": \"GetEncryptionType\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        // server_data.encryptionType type is sigsdkptr.EncryptAlg\n        _onGetEncryptionType(thisptr, parseInt(server_data.encryptionType), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n        \n    this.GetMaxLength = function(_onGetMaxLength)\n    {\n      var data = { \n                   \"InputObj\": \"GetMaxLength\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        // server_data.maxLength is an integer\n        _onGetMaxLength(thisptr, parseInt(server_data.maxLength), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n        \n    this.GetMinLength = function(_onGetMinLength)\n    {\n      var data = { \n                   \"InputObj\": \"GetMinLength\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        // server_data.minLength is an integer\n        _onGetMinLength(thisptr, parseInt(server_data.minLength), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n        \n    this.GetProperty = function(name, _onGetProperty)\n    {\n      var data = { \n                   \"InputObj\": \"GetProperty\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"name\": checkVar(name)\n                 };\n      function callback(server_data)\n      {\n        var property = new sigsdkptr.Variant();\n        property.Parse(server_data, \"property\");\n        _onGetProperty(thisptr, server_data.property, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n        \n    this.GetText = function(_onGetText)\n    {\n      var data = { \n                   \"InputObj\": \"GetText\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        // server_data.text is a string\n        _onGetText(thisptr, server_data.text, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // maxLength is an integer    \n    this.PutMaxLength = function(maxLength, _onPutMaxLength)\n    {\n      var data = { \n                   \"InputObj\": \"PutMaxLength\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"maxLength\": checkVar(maxLength)\n                 };\n      function callback(server_data)\n      {\n        _onPutMaxLength(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // minLength is an integer    \n    this.PutMinLength = function(minLength, _onPutMinLength)\n    {\n      var data = { \n                   \"InputObj\": \"PutMinLength\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"minLength\": checkVar(minLength)\n                 };\n      function callback(server_data)\n      {\n        _onPutMinLength(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // type is a sigsdkptr.EncryptAlg\n    // key is a sigsdkptr.Variant (with type either VARIANT_BASE64 or a base64 encoded VARIANT_TEXT string)\n    this.SetEncryption = function(type, key, _onSetEncryption)\n    {\n      var data = { \n                   \"InputObj\": \"SetEncryption\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"type\": checkVar(type)\n                 };\n      key.Stringify(data, \"key\");\n      function callback(server_data)\n      {\n        _onSetEncryption(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // name is a string\n    // value is    a string\n    this.SetProperty = function(name, value, _onSetProperty)\n    {\n      var data = { \n                   \"InputObj\": \"SetProperty\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"name\": checkVar(name),\n                   \"value\": checkVar(value)\n                 };\n      function callback(server_data)\n      {\n        _onSetProperty(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n  }\n  \n  // _type type is sigsdkptr.ObjectOptionType\n  this.ObjectOptions = function(/*_type*/)\n  {\n    var thisptr = this;\n    this.type = sigsdkptr.VariantType.VARIANT_OBJECTOPTIONS;//_type;\n    \n    this.AddOption = function(name, value)\n    {\n      thisptr[name] = value;\n    }\n  }\n  \n  this.Variant = function()\n  {\n    var thisptr = this;\n    \n    this.type = sigsdkptr.VariantType.VARIANT_EMPTY;\n    \n    this.Parse = function(data, id)\n    {\n      var dataType = parseInt(data[id + '.type']);\n      switch(dataType)\n      {\n        case sigsdkptr.VariantType.VARIANT_TEXT:\n        {\n          thisptr.type = dataType;\n          thisptr.text = data[id + '.text'];\n          break;\n        }\n        case sigsdkptr.VariantType.VARIANT_NUM:\n        {\n          thisptr.type = dataType;\n          thisptr.num = parseFloat(data[id + '.num']);\n          break;\n        }\n        case sigsdkptr.VariantType.VARIANT_OBJECTOPTIONS:\n        {\n          thisptr.type = dataType;\n          /////\n          //TODO\n          /////\n          break;\n        }\n        case sigsdkptr.VariantType.VARIANT_SIGOBJ:\n        case sigsdkptr.VariantType.VARIANT_SIGCTL:\n        case sigsdkptr.VariantType.VARIANT_INPUTOBJ:\n        case sigsdkptr.VariantType.VARIANT_HASH:\n        case sigsdkptr.VariantType.VARIANT_KEY:\n        case sigsdkptr.VariantType.VARIANT_DYNCAP:\n        case sigsdkptr.VariantType.VARIANT_WIZCTL:\n        {\n          thisptr.type = dataType;\n          thisptr.handle = data[id + '.handle'];\n          break;\n        }\n        case sigsdkptr.VariantType.VARIANT_BASE64:\n        {\n          thisptr.type = dataType;\n          thisptr.base64 = data[id + '.base64'];\n          break;\n        }\n        case sigsdkptr.VariantType.VARIANT_IMGURL:\n        {\n          thisptr.type = dataType;\n          thisptr.url = data[id + '.url'];\n          break;\n        }\n        case sigsdkptr.VariantType.VARIANT_FONT:\n        {\n          thisptr.type = dataType;\n          thisptr.fontName = data[id + '.fontName'];\n          thisptr.fontSize = data[id + '.fontSize'];\n          thisptr.sWeight = data[id + '.sWeight'];\n          thisptr.sCharset = data[id + '.sCharset'];\n          thisptr.fItalic = data[id + '.fItalic'];\n          thisptr.fUnderline = data[id + '.fUnderline'];\n          thisptr.fStrikethrough = data[id + '.fStrikethrough'];\n          break;\n        }\n        case sigsdkptr.VariantType.VARIANT_EMPTY:\n        default:\n        {\n          thisptr.type = sigsdkptr.VariantType.VARIANT_EMPTY;\n          break;\n        }\n      }\n    }\n    \n    this.Set = function(input)\n    {\n      if('string' === typeof input)\n      {\n        thisptr.type = sigsdkptr.VariantType.VARIANT_TEXT;\n        thisptr.text = input;\n      }\n      else if('number' === typeof input)\n      {\n        thisptr.type = sigsdkptr.VariantType.VARIANT_NUM;\n        thisptr.num = input;\n      }\n      else if(null != input && 'object' === typeof input && 'undefined' != typeof input.type &&  null != input.type)\n      {\n        switch (input.type)\n        {\n          case sigsdkptr.VariantType.VARIANT_OBJECTOPTIONS:\n          {\n            thisptr.type = sigsdkptr.VariantType.VARIANT_OBJECTOPTIONS;\n            for(o in input)\n            {\n              if(o != 'type')\n              {\n                if(typeof input[o] == \"string\")\n                {\n                  thisptr[o] = input[o];\n                  thisptr[o + \".type\"] = sigsdkptr.ObjectOptionType.OBJECTOPTION_STRING;\n                }\n                else if(typeof input[o] == \"number\")\n                {\n                  // truncate: don't use Math.trunc() as it's ECMAScript6 experimental\n                  thisptr[o] = input[o]>0 ? Math.floor(input[o]) : Math.ceil(input[o]);\n                  thisptr[o + \".type\"] = sigsdkptr.ObjectOptionType.OBJECTOPTION_INT;\n                }\n                else if(typeof input[o] == \"boolean\")\n                {\n                  thisptr[o] = (input[o] == true? 1: 0);\n                  thisptr[o + \".type\"] = sigsdkptr.ObjectOptionType.OBJECTOPTION_BOOL;\n                }\n              }\n            }\n            break;\n          }\n          case sigsdkptr.VariantType.VARIANT_SIGOBJ:\n          case sigsdkptr.VariantType.VARIANT_SIGCTL:\n          case sigsdkptr.VariantType.VARIANT_INPUTOBJ:\n          case sigsdkptr.VariantType.VARIANT_HASH:\n          case sigsdkptr.VariantType.VARIANT_KEY:\n          case sigsdkptr.VariantType.VARIANT_DYNCAP:\n          case sigsdkptr.VariantType.VARIANT_WIZCTL:\n          {\n            thisptr.type = input.type;\n            thisptr.handle = input.handle;\n            break;\n          }\n          case sigsdkptr.VariantType.VARIANT_IMGURL:\n          {\n            thisptr.type = sigsdkptr.VariantType.VARIANT_IMGURL;\n            thisptr.url = input.url;\n            break;\n          }\n          case sigsdkptr.VariantType.VARIANT_BASE64:\n          {\n            thisptr.type = sigsdkptr.VariantType.VARIANT_BASE64;\n            thisptr.base64 = input.base64;\n            break;\n          }\n          case sigsdkptr.VariantType.VARIANT_FONT:\n          {\n            thisptr.type = sigsdkptr.VariantType.VARIANT_FONT;\n            thisptr.fontName = input.fontName;\n            thisptr.fontSize = input.fontSize;\n            thisptr.sWeight = input.sWeight;\n            thisptr.sCharset = input.sCharset;\n            thisptr.fItalic = input.fItalic;\n            thisptr.fUnderline = input.fUnderline;\n            thisptr.fStrikethrough = input.fStrikethrough;\n            break;\n          }\n          case sigsdkptr.VariantType.VARIANT_TEXT:\n          {\n            thisptr.type = input.type;\n            thisptr.text = input.text;\n            break;\n          }\n          case sigsdkptr.VariantType.VARIANT_NUM:\n          {\n            thisptr.type = input.type;\n            thisptr.num = input.num;\n            break;\n          }\n          case sigsdkptr.VariantType.VARIANT_EMPTY:\n          default:\n          {\n            thisptr.type = sigsdkptr.VariantType.VARIANT_EMPTY;\n            break;\n          }            \n        }\n      }\n    }\n    \n    this.Stringify = function(datau, id)\n    {\n      for(var o in thisptr)\n      {\n        if( typeof o == 'string' && typeof thisptr[o] != 'function' && typeof thisptr[o] != 'symbol' && \n            (typeof thisptr[o] == 'object' || typeof thisptr[o] == 'string' || typeof thisptr[o] == 'number') )\n        {\n          datau[id + \".\" + o] = thisptr[o.toString()];\n        }\n      }\n    }    \n  }  \n  \n  this.WizCtl = function(_onConstructor)\n  {\n    var thisptr = this;\n    this.handle = null;\n    \n    var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    var left = window.screenLeft ? window.screenLeft : window.screenX;\n    var top = window.screenTop ? window.screenTop : window.screenY;\n    \n    var data = { \n                 \"WizCtl\": \"Constructor\", \n                 \"session\": sigsdkptr.session,\n                 \"width\": width,\n                 \"height\": height,\n                 \"left\": left,\n                 \"top\": top\n               };\n    function callback(server_data)\n    {\n      thisptr.handle = server_data.handle;\n      _onConstructor(thisptr, parseInt(server_data.status));\n    }\n    JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    \n    //objType type is sigsdkptr.ObjectType\n    //id type is string\n    //X type type is a number, text or sigsdkptr.Variant\n    //Y type type is a number, text or sigsdkptr.Variant\n    //objData type is sigsdkptr.Variant\n    //options type is sigsdkptr.Variant\n    this.AddObject = function(objType, id, X, Y, objData, options, _onAddObject)\n    {\n      var data = { \n                   \"WizCtl\": \"AddObject\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"objType\": checkVar(objType),\n                   \"id\": checkVar(id)\n                 };\n      var vX = new sigsdkptr.Variant();\n      var vY = new sigsdkptr.Variant();\n      vX.Set(X);\n      vY.Set(Y);\n      vX.Stringify(data, \"X\");\n      vY.Stringify(data, \"Y\");\n      objData.Stringify(data, \"objData\");\n      options.Stringify(data, \"options\");\n      function callback(server_data)\n      {\n        _onAddObject(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }    \n    //primType type is sigsdkptr.PrimitiveType\n    //X1 type type is a number, text or sigsdkptr.Variant\n    //Y1 type type is a number, text or sigsdkptr.Variant\n    //X2 type type is a number, text or sigsdkptr.Variant\n    //Y2 type type is a number, text or sigsdkptr.Variant\n    //primData type is a VARIANT_NUM sigsdkptr.Variant that indicates the primitive width\n    //options is a sigsdkptr.PrimitiveType flag variable as a VARIANT_NUM sigsdkptr.Variant\n    this.AddPrimitive = function(primType, X1, Y1, X2, Y2, primData, options, _onAddPrimitive)\n    {\n      var data = { \n                   \"WizCtl\": \"AddPrimitive\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"primType\": checkVar(primType)\n                 };\n      var vX1 = new sigsdkptr.Variant();\n      var vY1 = new sigsdkptr.Variant();\n      var vX2 = new sigsdkptr.Variant();\n      var vY2 = new sigsdkptr.Variant();\n      vX1.Set(X1);\n      vY1.Set(Y1);\n      vX2.Set(X2);\n      vY2.Set(Y2);\n      vX1.Stringify(data, \"X1\");\n      vY1.Stringify(data, \"Y1\");\n      vX2.Stringify(data, \"X2\");\n      vY2.Stringify(data, \"Y2\");\n      primData.Stringify(data, \"primData\");\n      options.Stringify(data, \"options\");\n      function callback(server_data)\n      {\n        _onAddPrimitive(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.Close = function(_onClose)\n    {\n      var data = { \n                   \"WizCtl\": \"Close\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        _onClose(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.Display = function(_onDisplay)\n    {\n      var data = { \n                   \"WizCtl\": \"Display\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        _onDisplay(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // id type is string\n    this.FireClick = function(id, _onFireClick)\n    {\n      var data = { \n                   \"WizCtl\": \"FireClick\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"fireClickId\": id\n                 };\n      function callback(server_data)\n      {\n        _onFireClick(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetBackColor = function(_onGetBackColor)\n    {\n      var data = { \n                   \"WizCtl\": \"GetBackColor\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        // server_data.backColor type is OLE_COLOR (number)\n        _onGetBackColor(thisptr, parseInt(server_data.backColor), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetBorderColor = function(_onGetBorderColor)\n    {\n      var data = { \n                   \"WizCtl\": \"GetBorderColor\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        // server_data.backColor type is OLE_COLOR (number)\n        _onGetBorderColor(thisptr, parseInt(server_data.borderColor), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetBorderStyle = function(_onGetBorderStyle)\n    {\n      var data = { \n                   \"WizCtl\": \"GetBorderStyle\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        // server_data.borderStyle type is a number\n        _onGetBorderStyle(thisptr, parseInt(server_data.borderStyle), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetBorderVisible = function(_onGetBorderVisible)\n    {\n      var data = { \n                   \"WizCtl\": \"GetBorderVisible\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.borderVisible is a bool\n        _onGetBorderVisible(thisptr, Boolean(1 == parseInt(server_data.borderVisible)), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetBorderWidth = function(_onGetBorderWidth)\n    {\n      var data = { \n                   \"WizCtl\": \"GetBorderWidth\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.borderWidth is a number\n        _onGetBorderWidth(thisptr, parseInt(server_data.borderWidth), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetEnableWizardDisplay = function(_onGetEnableWizardDisplay)\n    {\n      var data = { \n                   \"WizCtl\": \"GetEnableWizardDisplay\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.enableWD is a bool\n        _onGetEnableWizardDisplay(thisptr, Boolean(1 == parseInt(server_data.enableWD)), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetFont = function(_onGetFont)\n    {\n      var data = { \n                   \"WizCtl\": \"GetFont\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        var font = new sigsdkptr.Variant();\n        font.Parse(server_data, \"font\");\n        _onGetFont(thisptr, font, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetInkingPad = function(_onGetInkingPad)\n    {\n      var data = { \n                   \"WizCtl\": \"GetInkingPad\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.inkingPad is a bool\n        _onGetInkingPad(thisptr, Boolean(1 == parseInt(server_data.inkingPad)), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetLicence = function(_onGetLicence) {\n      var data = { \n                   \"WizCtl\": \"GetLicence\",\n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.licence type is string\n        _onGetLicence(thisptr, server_data.licence, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // id type is string\n    this.GetObjectState = function(id, _onGetObjectState) {\n      var data = { \n                   \"WizCtl\": \"GetObjectState\",\n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"objectId\": checkVar(id)\n                 };\n      function callback(server_data)\n      {\n        var state = new sigsdkptr.Variant();\n        state.Parse(server_data, \"objState\");\n        _onGetObjectState(thisptr, state, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetPadHeight = function(_onGetPadHeight) {\n      var data = { \n                   \"WizCtl\": \"GetPadHeight\",\n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.height type is a number\n        _onGetPadHeight(thisptr, parseFloat(server_data.height), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetPadWidth = function(_onGetPadWidth) {\n      var data = { \n                   \"WizCtl\": \"GetPadWidth\",\n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        //server_data.width type is a number\n        _onGetPadWidth(thisptr, parseFloat(server_data.width), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }    \n    // key is a string\n    this.GetProperty = function(key, _onGetProperty) {\n      var data = { \n                   \"WizCtl\": \"GetProperty\",\n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"key\": checkVar(key)\n                 };\n      function callback(server_data)\n      {\n        var property = new sigsdkptr.Variant();\n        property.Parse(server_data, \"property\");\n        _onGetProperty(thisptr, property, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetVisibleWindow = function(_onGetVisibleWindow) {\n      var data = { \n                   \"WizCtl\": \"GetVisibleWindow\",\n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        // server_data.visible type is boolean\n        _onGetVisibleWindow(thisptr, Boolean(1 == parseInt(server_data.visible)), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.GetZoom = function(_onGetZoom) {\n      var data = { \n                   \"WizCtl\": \"GetZoom\",\n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        // server_data.zoom type is a number\n        _onGetZoom(thisptr, parseFloat(server_data.zoom), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.PadConnect = function(_onPadConnect) {\n      var data = { \n                   \"WizCtl\": \"PadConnect\",\n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        // server_data.padConnect type is a bool\n        _onPadConnect(thisptr, Boolean(1 == parseInt(server_data.padConnect)), parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.PadDisconnect = function(_onPadDisconnect) {\n      var data = { \n                   \"WizCtl\": \"PadDisconnect\",\n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        _onPadDisconnect(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // backColor type is OLE_COLOR (number)\n    this.PutBackColor = function(backColor, _onPutBackColor)\n    {\n      var data = { \n                   \"WizCtl\": \"PutBackColor\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"backColor\": checkVar(backColor)\n                 };\n      function callback(server_data)\n      {\n        _onPutBackColor(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // borderColor type is OLE_COLOR (number)\n    this.PutBorderColor = function(borderColor, _onPutBorderColor)\n    {\n      var data = { \n                   \"WizCtl\": \"PutBorderColor\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"borderColor\": checkVar(borderColor)\n                 };\n      function callback(server_data)\n      {\n        _onPutBorderColor(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // borderStyle type is a number\n    this.PutBorderStyle = function(borderStyle, _onPutBorderStyle)\n    {\n      var data = { \n                   \"WizCtl\": \"PutBorderStyle\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"borderStyle\": checkVar(borderStyle)\n                 };\n      function callback(server_data)\n      {\n        _onPutBorderStyle(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    // borderVisible type is bool\n    this.PutBorderVisible = function(borderVisible, _onPutBorderVisible)\n    {\n      var data = { \n                   \"WizCtl\": \"PutBorderVisible\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"borderVisible\": checkVar(borderVisible)\n                 };\n      function callback(server_data)\n      {\n        _onPutBorderVisible(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // borderWidth is a number\n    this.PutBorderWidth = function(borderWidth, _onPutBorderWidth)\n    {\n      var data = { \n                   \"WizCtl\": \"PutBorderWidth\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"borderWidth\": checkVar(borderWidth)\n                 };\n      function callback(server_data)\n      {\n        _onPutBorderWidth(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // enableWD is a bool\n    this.PutEnableWizardDisplay = function(enableWD, _onPutEnableWizardDisplay)\n    {\n      var data = { \n                   \"WizCtl\": \"PutEnableWizardDisplay\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"enableWD\": checkVar(enableWD)\n                 };\n      function callback(server_data)\n      {\n        _onPutEnableWizardDisplay(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // font type is sigsdkptr.Variant (sigsdkptr.VariantType.VARIANT_FONT)\n    this.PutFont = function(font, _onPutFont)\n    {\n      var data = { \n                   \"WizCtl\": \"PutFont\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      font.Stringify(data, \"font\");\n      function callback(server_data)\n      {\n        _onPutFont(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // licence type is a string\n    this.PutLicence = function(licence, _onPutLicence) {\n      var data = {\n                   \"WizCtl\": \"PutLicence\",\n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"licence\": checkVar(licence)\n                 };\n      function callback(server_data)\n      {\n        _onPutLicence(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // height type is a number\n    this.PutPadHeight = function(height, _onPutPadHeight) {\n      var data = {\n                   \"WizCtl\": \"PutPadHeight\",\n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"height\": checkVar(height)\n                 };\n      function callback(server_data)\n      {\n        _onPutPadHeight(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // width type is a number\n    this.PutPadWidth = function(width, _onPutPadWidth) {\n      var data = {\n                   \"WizCtl\": \"PutPadWidth\",\n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"width\": checkVar(width)\n                 };\n      function callback(server_data)\n      {\n        _onPutPadWidth(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // properties type is a string\n    this.PutProperties = function(properties, _onPutProperties) {\n      var data = {\n                   \"WizCtl\": \"PutProperties\",\n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"properties\": checkVar(properties)\n                 };\n      function callback(server_data)\n      {\n        _onPutProperties(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // font type is sigsdkptr.Variant (sigsdkptr.VariantType.VARIANT_FONT)\n    this.PutRefFont = function(font, _onPutRefFont)\n    {\n      var data = { \n                   \"WizCtl\": \"PutRefFont\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      font.Stringify(data, \"font\");\n      function callback(server_data)\n      {\n        _onPutRefFont(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // visible type is boolean\n    this.PutVisibleWindow = function(visible, _onPutVisibleWindow)\n    {\n      var data = { \n                   \"WizCtl\": \"PutVisibleWindow\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"visible\": Number( visible )\n                 };\n      function callback(server_data)\n      {\n        _onPutVisibleWindow(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // zoom type is a real number\n    this.PutZoom = function(zoom, _onPutZoom)\n    {\n      var data = { \n                   \"WizCtl\": \"PutZoom\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"zoom\": checkVar(zoom)\n                 };\n      function callback(server_data)\n      {\n        _onPutZoom(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    this.Reset = function(_onReset)\n    {\n      var data = { \n                   \"WizCtl\": \"Reset\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      function callback(server_data)\n      {\n        _onReset(thisptr, parseInt(server_data.status));\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    // key type is string\n    // value type is sigsdkptr.Variant\n    this.SetProperty = function(key, value, _onSetProperty)\n    {\n      var data = { \n                   \"WizCtl\": \"SetProperty\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle,\n                   \"key\": key\n                 };\n      function callback(server_data)\n      {\n        _onSetProperty(thisptr, parseInt(server_data.status));\n      }\n      value.Stringify(data, \"value\");\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n    var evh;\n    this.SetEventHandler = function(eventHandler)\n    {\n      var data = { \n                   \"WizCtl\": \"SetEventHandler\", \n                   \"session\": sigsdkptr.session,\n                   \"handle\": thisptr.handle\n                 };\n      evh = eventHandler;\n                 \n      function callback(server_data)\n      {\n        var update_data = { \n                            \"WizCtl\": \"UpdateEventHandler\", \n                            \"session\": sigsdkptr.session,\n                            \"handle\": thisptr.handle\n                          };\n        if(0 == parseInt(server_data.status))\n        {\n          JSONreq.getJSON(server_url + \"wacom.js\", update_data, callback);\n        }\n        else if (\"undefined\" === typeof(server_data.status)) return;\n        setTimeout( function(){ evh(thisptr.handle, server_data[\"event-id\"], parseInt(server_data[\"event-type\"]), parseInt(server_data.status)); }, 0);\n      }\n      JSONreq.getJSON(server_url + \"wacom.js\", data, callback);\n    }\n    \n  } // WizCtl\n}\n};\n"],"mappings":"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UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA,IAAI,CAACoZ,UAAU,GAAG,UAASlH,GAAG,EAAEmH,aAAa,EAC7C;QACE,IAAIzK,IAAI,GAAG;UACE,QAAQ,EAAE,YAAY;UACtB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,KAAK,EAAEL,QAAQ,CAAC6B,GAAG;QACrB,CAAC;QACZ,SAASlS,QAAQA,CAAC+O,WAAW,EAC7B;UACE,IAAIuK,OAAO,GAAG,IAAIpY,SAAS,CAACmR,OAAO,CAAC,CAAC;UACrCiH,OAAO,CAACtF,KAAK,CAACjF,WAAW,EAAE,SAAS,CAAC;UACrCsK,aAAa,CAAC5I,OAAO,EAAE6I,OAAO,EAAElJ,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QAC/D;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,IAAI,CAACuZ,YAAY,GAAG,UAASC,eAAe,EAC5C;QACE,IAAI5K,IAAI,GAAG;UACE,QAAQ,EAAE,cAAc;UACxB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACE;UACAyK,eAAe,CAAC/I,OAAO,EAAE1B,WAAW,CAAC0K,SAAS,EAAErJ,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QAC/E;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,IAAI,CAAC4Y,UAAU,GAAG,UAAUC,aAAa,EAAE;QACzC,IAAIjK,IAAI,GAAG;UACT,QAAQ,EAAE,YAAY;UACtB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACD,SAAS1Q,QAAQA,CAAC+O,WAAW,EAAE;UAC7B;UACA8J,aAAa,CAACpI,O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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI;MACA,IAAI,CAACga,YAAY,GAAG,UAASP,SAAS,EAAEQ,eAAe,EACvD;QACE,IAAIrL,IAAI,GAAG;UACE,QAAQ,EAAE,cAAc;UACxB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,WAAW,EAAEL,QAAQ,CAACoJ,SAAS;QACjC,CAAC;QACZ,SAASzZ,QAAQA,CAAC+O,WAAW,EAC7B;UACEkL,eAAe,CAACxJ,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACxD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI;MACA,IAAI,CAAC+Y,UAAU,GAAG,UAASD,OAAO,EAAEE,aAAa,EACjD;QACE,IAAIpK,IAAI,GAAG;UACE,QAAQ,EAAE,YAAY;UACtB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,SAAS,EAAEL,QAAQ,CAACyI,OAAO;QAC7B,CAAC;QACZ,SAAS9Y,QAAQA,CAAC+O,WAAW,EAC7B;UACEiK,aAAa,CAACvI,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACtD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA,IAAI,CAACka,aAAa,GAAG,UAASC,UAAU,EAAEC,gBAAgB,EAC1D;QACE,IAAIxL,IAAI,GAAG;UACE,QAAQ,EAAE,eAAe;UACzB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,YAAY,EAAEL,QAAQ,CAAC8J,UAAU;QACnC,CAAC;QACZ,SAASna,QAAQA,CAAC+O,WAAW,EAC7B;UACEqL,gBAAgB,CAAC3J,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACzD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI;MACA,IAAI,CAACqa,YAAY,GAAG,UAAS1B,MAAM,EAAE2B,eAAe,EACpD;QACE,IAAI1L,IAAI,GAAG;UACE,QAAQ,EAAE,cAAc;UACxB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,iBAAiB,EAAEL,QAAQ,CAACsI,MAAM,CAACjI,MAAM;QAC3C,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACEuL,eAAe,CAAC7J,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACxD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI;MACA;MACA,IAAI,CAACsX,WAAW,GAAG,UAASpF,GAAG,EAAET,KAAK,EAAE8F,cAAc,EACtD;QACE,IAAI3I,IAAI,GAAG;UACE,QAAQ,EAAE,aAAa;UACvB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,KAAK,EAAEL,QAAQ,CAAC6B,GAAG;QACrB,CAAC;QACZT,KAAK,CAACX,SAAS,CAAClC,IAAI,EAAE,OAAO,CAAC;QAC9B,SAAS5O,QAAQA,CAAC+O,WAAW,EAC7B;UACEwI,cAAc,CAAC9G,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACvD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;IAEH,CAAC;IAED,IAAI,CAACua,QAAQ,GAAG,UAAS9C,cAAc,EACvC;MACE,IAAIhH,OAAO,GAAG,IAAI;MAClB,IAAI,CAACC,MAAM,GAAG,IAAI;MAClB,IAAI,CAACtQ,IAAI,GAAGc,SAAS,CAAC6G,WAAW,CAACO,gBAAgB;MAElD,IAAIsG,IAAI,GAAG;QACE,UAAU,EAAE,aAAa;QACzB,SAAS,EAAE1N,SAAS,CAACF;MACvB,CAAC;MACZ,SAAShB,QAAQA,CAAC+O,WAAW,EAC7B;QACE0B,OAAO,CAACC,MAAM,GAAG3B,WAAW,CAAC2B,MAAM;QACnC+G,cAAc,CAAChH,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;MACvD;MACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAExD,IAAI,CAAC+Q,KAAK,GAAG,UAASC,QAAQ,EAC9B;QACE,IAAIpC,IAAI,GAAG;UACE,UAAU,EAAE,OAAO;UACnB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACEiC,QAAQ,CAACP,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACjD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAACwa,OAAO,GAAG,UAASC,UAAU,EAClC;QACE,IAAI7L,IAAI,GAAG;UACE,UAAU,EAAE,SAAS;UACrB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACA;UACE0L,UAAU,CAAChK,OAAO,EAAE1B,WAAW,CAACH,IAAI,EAAEwB,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACrE;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAAC0a,iBAAiB,GAAG,UAASC,oBAAoB,EACtD;QACE,IAAI/L,IAAI,GAAG;UACE,UAAU,EAAE,mBAAmB;UAC/B,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACE;UACA4L,oBAAoB,CAAClK,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAAC6L,cAAc,CAAC,EAAExK,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACnG;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAAC6a,YAAY,GAAG,UAASC,eAAe,EAC5C;QACE,IAAIlM,IAAI,GAAG;UACE,UAAU,EAAE,cAAc;UAC1B,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACE;UACA+L,eAAe,CAACrK,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACgM,SAAS,CAAC,EAAE3K,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACzF;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAACgb,YAAY,GAAG,UAASC,eAAe,EAC5C;QACE,IAAIrM,IAAI,GAAG;UACE,UAAU,EAAE,cAAc;UAC1B,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACE;UACAkM,eAAe,CAACxK,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACmM,SAAS,CAAC,EAAE9K,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACzF;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAAC6T,WAAW,GAAG,UAASsH,IAAI,EAAErH,cAAc,EAChD;QACE,IAAIlF,IAAI,GAAG;UACE,UAAU,EAAE,aAAa;UACzB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,MAAM,EAAEL,QAAQ,CAAC8K,IAAI;QACvB,CAAC;QACZ,SAASnb,QAAQA,CAAC+O,WAAW,EAC7B;UACE,IAAIgF,QAAQ,GAAG,IAAI7S,SAAS,CAACmR,OAAO,CAAC,CAAC;UACtC0B,QAAQ,CAACC,KAAK,CAACjF,WAAW,EAAE,UAAU,CAAC;UACvC+E,cAAc,CAACrD,OAAO,EAAE1B,WAAW,CAACgF,QAAQ,EAAE3D,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QAC7E;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAACob,OAAO,GAAG,UAASC,UAAU,EAClC;QACE,IAAIzM,IAAI,GAAG;UACE,UAAU,EAAE,SAAS;UACrB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACE;UACAsM,UAAU,CAAC5K,OAAO,EAAE1B,WAAW,CAACuM,IAAI,EAAElL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACrE;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA,IAAI,CAACub,YAAY,GAAG,UAASR,SAAS,EAAES,eAAe,EACvD;QACE,IAAI5M,IAAI,GAAG;UACE,UAAU,EAAE,cAAc;UAC1B,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,WAAW,EAAEL,QAAQ,CAAC0K,SAAS;QACjC,CAAC;QACZ,SAAS/a,QAAQA,CAAC+O,WAAW,EAC7B;UACEyM,eAAe,CAAC/K,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACxD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA,IAAI,CAACyb,YAAY,GAAG,UAASP,SAAS,EAAEQ,eAAe,EACvD;QACE,IAAI9M,IAAI,GAAG;UACE,UAAU,EAAE,cAAc;UAC1B,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,WAAW,EAAEL,QAAQ,CAAC6K,SAAS;QACjC,CAAC;QACZ,SAASlb,QAAQA,CAAC+O,WAAW,EAC7B;UACE2M,eAAe,CAACjL,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACxD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA;MACA,IAAI,CAAC2b,aAAa,GAAG,UAASvb,IAAI,EAAE8R,GAAG,EAAE0J,gBAAgB,EACzD;QACE,IAAIhN,IAAI,GAAG;UACE,UAAU,EAAE,eAAe;UAC3B,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,MAAM,EAAEL,QAAQ,CAACjQ,IAAI;QACvB,CAAC;QACZ8R,GAAG,CAACpB,SAAS,CAAClC,IAAI,EAAE,KAAK,CAAC;QAC1B,SAAS5O,QAAQA,CAAC+O,WAAW,EAC7B;UACE6M,gBAAgB,CAACnL,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACzD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA;MACA,IAAI,CAACsX,WAAW,GAAG,UAAS6D,IAAI,EAAE1J,KAAK,EAAE8F,cAAc,EACvD;QACE,IAAI3I,IAAI,GAAG;UACE,UAAU,EAAE,aAAa;UACzB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,MAAM,EAAEL,QAAQ,CAAC8K,IAAI,CAAC;UACtB,OAAO,EAAE9K,QAAQ,CAACoB,KAAK;QACzB,CAAC;QACZ,SAASzR,QAAQA,CAAC+O,WAAW,EAC7B;UACEwI,cAAc,CAAC9G,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACvD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;IAEH,CAAC;;IAED;IACA,IAAI,CAAC6b,aAAa,GAAG,SAAS;IAAA,GAC9B;MACE,IAAIpL,OAAO,GAAG,IAAI;MAClB,IAAI,CAACrQ,IAAI,GAAGc,SAAS,CAAC6G,WAAW,CAACI,qBAAqB,CAAC;;MAExD,IAAI,CAAC2T,SAAS,GAAG,UAASX,IAAI,EAAE1J,KAAK,EACrC;QACEhB,OAAO,CAAC0K,IAAI,CAAC,GAAG1J,KAAK;MACvB,CAAC;IACH,CAAC;IAED,IAAI,CAACY,OAAO,GAAG,YACf;MACE,IAAI5B,OAAO,GAAG,IAAI;MAElB,IAAI,CAACrQ,IAAI,GAAGc,SAAS,CAAC6G,WAAW,CAACC,aAAa;MAE/C,IAAI,CAACgM,KAAK,GAAG,UAASpF,IAAI,EAAEtO,EAAE,EAC9B;QACE,IAAIyb,QAAQ,GAAG3L,QAAQ,CAACxB,IAAI,CAACtO,EAAE,GAAG,OAAO,CAAC,CAAC;QAC3C,QAAOyb,QAAQ;UAEb,KAAK7a,SAAS,CAAC6G,WAAW,CAACE,YAAY;YACvC;cACEwI,OAAO,CAACrQ,IAAI,GAAG2b,QAAQ;cACvBtL,OAAO,CAAC6K,IAAI,GAAG1M,IAAI,CAACtO,EAAE,GAAG,OAAO,CAAC;cACjC;YACF;UACA,KAAKY,SAAS,CAAC6G,WAAW,CAACG,WAAW;YACtC;cACEuI,OAAO,CAACrQ,IAAI,GAAG2b,QAAQ;cACvBtL,OAAO,CAACuL,GAAG,GAAGpH,UAAU,CAAChG,IAAI,CAACtO,EAAE,GAAG,MAAM,CAAC,CAAC;cAC3C;YACF;UACA,KAAKY,SAAS,CAAC6G,WAAW,CAACI,qBAAqB;YAChD;cACEsI,OAAO,CAACrQ,IAAI,GAAG2b,QAAQ;cACvB;cACA;cACA;cACA;YACF;UACA,KAAK7a,SAAS,CAAC6G,WAAW,CAACK,cAAc;UACzC,KAAKlH,SAAS,CAAC6G,WAAW,CAACM,cAAc;UACzC,KAAKnH,SAAS,CAAC6G,WAAW,CAACO,gBAAgB;UAC3C,KAAKpH,SAAS,CAAC6G,WAAW,CAACQ,YAAY;UACvC,KAAKrH,SAAS,CAAC6G,WAAW,CAACc,WAAW;UACtC,KAAK3H,SAAS,CAAC6G,WAAW,CAACW,cAAc;UACzC,KAAKxH,SAAS,CAAC6G,WAAW,CAACY,cAAc;YACzC;cACE8H,OAAO,CAACrQ,IAAI,GAAG2b,QAAQ;cACvBtL,OAAO,CAACC,MAAM,GAAG9B,IAAI,CAACtO,EAAE,GAAG,SAAS,CAAC;cACrC;YACF;UACA,KAAKY,SAAS,CAAC6G,WAAW,CAACU,cAAc;YACzC;cACEgI,OAAO,CAACrQ,IAAI,GAAG2b,QAAQ;cACvBtL,OAAO,CAAC4G,MAAM,GAAGzI,IAAI,CAACtO,EAAE,GAAG,SAAS,CAAC;cACrC;YACF;UACA,KAAKY,SAAS,CAAC6G,WAAW,CAACS,cAAc;YACzC;cACEiI,OAAO,CAACrQ,IAAI,GAAG2b,QAAQ;cACvBtL,OAAO,CAACgG,GAAG,GAAG7H,IAAI,CAACtO,EAAE,GAAG,MAAM,CAAC;cAC/B;YACF;UACA,KAAKY,SAAS,CAAC6G,WAAW,CAACa,YAAY;YACvC;cACE6H,OAAO,CAACrQ,IAAI,GAAG2b,QAAQ;cACvBtL,OAAO,CAACrC,QAAQ,GAAGQ,IAAI,CAACtO,EAAE,GAAG,WAAW,CAAC;cACzCmQ,OAAO,CAACpC,QAAQ,GAAGO,IAAI,CAACtO,EAAE,GAAG,WAAW,CAAC;cACzCmQ,OAAO,CAACnC,OAAO,GAAGM,IAAI,CAACtO,EAAE,GAAG,UAAU,CAAC;cACvCmQ,OAAO,CAAClC,QAAQ,GAAGK,IAAI,CAACtO,EAAE,GAAG,WAAW,CAAC;cACzCmQ,OAAO,CAACjC,OAAO,GAAGI,IAAI,CAACtO,EAAE,GAAG,UAAU,CAAC;cACvCmQ,OAAO,CAAChC,UAAU,GAAGG,IAAI,CAACtO,EAAE,GAAG,aAAa,CAAC;cAC7CmQ,OAAO,CAAC/B,cAAc,GAAGE,IAAI,CAACtO,EAAE,GAAG,iBAAiB,CAAC;cACrD;YACF;UACA,KAAKY,SAAS,CAAC6G,WAAW,CAACC,aAAa;UACxC;YACA;cACEyI,OAAO,CAACrQ,IAAI,GAAGc,SAAS,CAAC6G,WAAW,CAACC,aAAa;cAClD;YACF;QACF;MACF,CAAC;MAED,IAAI,CAACwJ,GAAG,GAAG,UAASlB,KAAK,EACzB;QACE,IAAG,QAAQ,KAAK,OAAOA,KAAK,EAC5B;UACEG,OAAO,CAACrQ,IAAI,GAAGc,SAAS,CAAC6G,WAAW,CAACE,YAAY;UACjDwI,OAAO,CAAC6K,IAAI,GAAGhL,KAAK;QACtB,CAAC,MACI,IAAG,QAAQ,KAAK,OAAOA,KAAK,EACjC;UACEG,OAAO,CAACrQ,IAAI,GAAGc,SAAS,CAAC6G,WAAW,CAACG,WAAW;UAChDuI,OAAO,CAACuL,GAAG,GAAG1L,KAAK;QACrB,CAAC,MACI,IAAG,IAAI,IAAIA,KAAK,IAAI,QAAQ,KAAK,OAAOA,KAAK,IAAI,WAAW,IAAI,OAAOA,KAAK,CAAClQ,IAAI,IAAK,IAAI,IAAIkQ,KAAK,CAAClQ,IAAI,EAC7G;UACE,QAAQkQ,KAAK,CAAClQ,IAAI;YAEhB,KAAKc,SAAS,CAAC6G,WAAW,CAACI,qBAAqB;cAChD;gBACEsI,OAAO,CAACrQ,IAAI,GAAGc,SAAS,CAAC6G,WAAW,CAACI,qBAAqB;gBAC1D,KAAI8T,CAAC,IAAI3L,KAAK,EACd;kBACE,IAAG2L,CAAC,IAAI,MAAM,EACd;oBACE,IAAG,OAAO3L,KAAK,CAAC2L,CAAC,CAAC,IAAI,QAAQ,EAC9B;sBACExL,OAAO,CAACwL,CAAC,CAAC,GAAG3L,KAAK,CAAC2L,CAAC,CAAC;sBACrBxL,OAAO,CAACwL,CAAC,GAAG,OAAO,CAAC,GAAG/a,SAAS,CAACyG,gBAAgB,CAACC,mBAAmB;oBACvE,CAAC,MACI,IAAG,OAAO0I,KAAK,CAAC2L,CAAC,CAAC,IAAI,QAAQ,EACnC;sBACE;sBACAxL,OAAO,CAACwL,CAAC,CAAC,GAAG3L,KAAK,CAAC2L,CAAC,CAAC,GAAC,CAAC,GAAGnc,IAAI,CAACoc,KAAK,CAAC5L,KAAK,CAAC2L,CAAC,CAAC,CAAC,GAAGnc,IAAI,CAACqc,IAAI,CAAC7L,KAAK,CAAC2L,CAAC,CAAC,CAAC;sBACpExL,OAAO,CAACwL,CAAC,GAAG,OAAO,CAAC,GAAG/a,SAAS,CAACyG,gBAAgB,CAACE,gBAAgB;oBACpE,CAAC,MACI,IAAG,OAAOyI,KAAK,CAAC2L,CAAC,CAAC,IAAI,SAAS,EACpC;sBACExL,OAAO,CAACwL,CAAC,CAAC,GAAI3L,KAAK,CAAC2L,CAAC,CAAC,IAAI,IAAI,GAAE,CAAC,GAAE,CAAE;sBACrCxL,OAAO,CAACwL,CAAC,GAAG,OAAO,CAAC,GAAG/a,SAAS,CAACyG,gBAAgB,CAACG,iBAAiB;oBACrE;kBACF;gBACF;gBACA;cACF;YACA,KAAK5G,SAAS,CAAC6G,WAAW,CAACK,cAAc;YACzC,KAAKlH,SAAS,CAAC6G,WAAW,CAACM,cAAc;YACzC,KAAKnH,SAAS,CAAC6G,WAAW,CAACO,gBAAgB;YAC3C,KAAKpH,SAAS,CAAC6G,WAAW,CAACQ,YAAY;YACvC,KAAKrH,SAAS,CAAC6G,WAAW,CAACc,WAAW;YACtC,KAAK3H,SAAS,CAAC6G,WAAW,CAACW,cAAc;YACzC,KAAKxH,SAAS,CAAC6G,WAAW,CAACY,cAAc;cACzC;gBACE8H,OAAO,CAACrQ,IAAI,GAAGkQ,KAAK,CAAClQ,IAAI;gBACzBqQ,OAAO,CAACC,MAAM,GAAGJ,KAAK,CAACI,MAAM;gBAC7B;cACF;YACA,KAAKxP,SAAS,CAAC6G,WAAW,CAACS,cAAc;cACzC;gBACEiI,OAAO,CAACrQ,IAAI,GAAGc,SAAS,CAAC6G,WAAW,CAACS,cAAc;gBACnDiI,OAAO,CAACgG,GAAG,GAAGnG,KAAK,CAACmG,GAAG;gBACvB;cACF;YACA,KAAKvV,SAAS,CAAC6G,WAAW,CAACU,cAAc;cACzC;gBACEgI,OAAO,CAACrQ,IAAI,GAAGc,SAAS,CAAC6G,WAAW,CAACU,cAAc;gBACnDgI,OAAO,CAAC4G,MAAM,GAAG/G,KAAK,CAAC+G,MAAM;gBAC7B;cACF;YACA,KAAKnW,SAAS,CAAC6G,WAAW,CAACa,YAAY;cACvC;gBACE6H,OAAO,CAACrQ,IAAI,GAAGc,SAAS,CAAC6G,WAAW,CAACa,YAAY;gBACjD6H,OAAO,CAACrC,QAAQ,GAAGkC,KAAK,CAAClC,QAAQ;gBACjCqC,OAAO,CAACpC,QAAQ,GAAGiC,KAAK,CAACjC,QAAQ;gBACjCoC,OAAO,CAACnC,OAAO,GAAGgC,KAAK,CAAChC,OAAO;gBAC/BmC,OAAO,CAAClC,QAAQ,GAAG+B,KAAK,CAAC/B,QAAQ;gBACjCkC,OAAO,CAACjC,OAAO,GAAG8B,KAAK,CAAC9B,OAAO;gBAC/BiC,OAAO,CAAChC,UAAU,GAAG6B,KAAK,CAAC7B,UAAU;gBACrCgC,OAAO,CAAC/B,cAAc,GAAG4B,KAAK,CAAC5B,cAAc;gBAC7C;cACF;YACA,KAAKxN,SAAS,CAAC6G,WAAW,CAACE,YAAY;cACvC;gBACEwI,OAAO,CAACrQ,IAAI,GAAGkQ,KAAK,CAAClQ,IAAI;gBACzBqQ,OAAO,CAAC6K,IAAI,GAAGhL,KAAK,CAACgL,IAAI;gBACzB;cACF;YACA,KAAKpa,SAAS,CAAC6G,WAAW,CAACG,WAAW;cACtC;gBACEuI,OAAO,CAACrQ,IAAI,GAAGkQ,KAAK,CAAClQ,IAAI;gBACzBqQ,OAAO,CAACuL,GAAG,GAAG1L,KAAK,CAAC0L,GAAG;gBACvB;cACF;YACA,KAAK9a,SAAS,CAAC6G,WAAW,CAACC,aAAa;YACxC;cACA;gBACEyI,OAAO,CAACrQ,IAAI,GAAGc,SAAS,CAAC6G,WAAW,CAACC,aAAa;gBAClD;cACF;UACF;QACF;MACF,CAAC;MAED,IAAI,CAAC8I,SAAS,GAAG,UAASsL,KAAK,EAAE9b,EAAE,EACnC;QACE,KAAI,IAAI2b,CAAC,IAAIxL,OAAO,EACpB;UACE,IAAI,OAAOwL,CAAC,IAAI,QAAQ,IAAI,OAAOxL,OAAO,CAACwL,CAAC,CAAC,IAAI,UAAU,IAAI,OAAOxL,OAAO,CAACwL,CAAC,CAAC,IAAI,QAAQ,KACvF,OAAOxL,OAAO,CAACwL,CAAC,CAAC,IAAI,QAAQ,IAAI,OAAOxL,OAAO,CAACwL,CAAC,CAAC,IAAI,QAAQ,IAAI,OAAOxL,OAAO,CAACwL,CAAC,CAAC,IAAI,QAAQ,CAAC,EACrG;YACEG,KAAK,CAAC9b,EAAE,GAAG,GAAG,GAAG2b,CAAC,CAAC,GAAGxL,OAAO,CAACwL,CAAC,CAACI,QAAQ,CAAC,CAAC,CAAC;UAC7C;QACF;MACF,CAAC;IACH,CAAC;IAED,IAAI,CAACC,MAAM,GAAG,UAAS7E,cAAc,EACrC;MACE,IAAIhH,OAAO,GAAG,IAAI;MAClB,IAAI,CAACC,MAAM,GAAG,IAAI;MAElB,IAAIkF,KAAK,GAAGzU,MAAM,CAAC2W,UAAU,IAAIzY,QAAQ,CAAC0Y,eAAe,CAACC,WAAW,IAAI3Y,QAAQ,CAAC4Y,IAAI,CAACD,WAAW;MAClG,IAAI1E,MAAM,GAAGnS,MAAM,CAAC+W,WAAW,IAAI7Y,QAAQ,CAAC0Y,eAAe,CAACI,YAAY,IAAI9Y,QAAQ,CAAC4Y,IAAI,CAACE,YAAY;MACtG,IAAIC,IAAI,GAAGjX,MAAM,CAACkX,UAAU,GAAGlX,MAAM,CAACkX,UAAU,GAAGlX,MAAM,CAACmX,OAAO;MACjE,IAAIC,GAAG,GAAGpX,MAAM,CAACqX,SAAS,GAAGrX,MAAM,CAACqX,SAAS,GAAGrX,MAAM,CAACsX,OAAO;MAE9D,IAAI7J,IAAI,GAAG;QACE,QAAQ,EAAE,aAAa;QACvB,SAAS,EAAE1N,SAAS,CAACF,OAAO;QAC5B,OAAO,EAAE4U,KAAK;QACd,QAAQ,EAAEtC,MAAM;QAChB,MAAM,EAAE8E,IAAI;QACZ,KAAK,EAAEG;MACT,CAAC;MACZ,SAASvY,QAAQA,CAAC+O,WAAW,EAC7B;QACE0B,OAAO,CAACC,MAAM,GAAG3B,WAAW,CAAC2B,MAAM;QACnC+G,cAAc,CAAChH,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;MACvD;MACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;;MAExD;MACA;MACA;MACA;MACA;MACA;MACA,IAAI,CAACuc,SAAS,GAAG,UAASC,OAAO,EAAElc,EAAE,EAAEmc,CAAC,EAAEC,CAAC,EAAEC,OAAO,EAAEC,OAAO,EAAEC,YAAY,EAC3E;QACE,IAAIjO,IAAI,GAAG;UACE,QAAQ,EAAE,WAAW;UACrB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,SAAS,EAAEL,QAAQ,CAACmM,OAAO,CAAC;UAC5B,IAAI,EAAEnM,QAAQ,CAAC/P,EAAE;QACnB,CAAC;QACZ,IAAIwc,EAAE,GAAG,IAAI5b,SAAS,CAACmR,OAAO,CAAC,CAAC;QAChC,IAAI0K,EAAE,GAAG,IAAI7b,SAAS,CAACmR,OAAO,CAAC,CAAC;QAChCyK,EAAE,CAACtL,GAAG,CAACiL,CAAC,CAAC;QACTM,EAAE,CAACvL,GAAG,CAACkL,CAAC,CAAC;QACTI,EAAE,CAAChM,SAAS,CAAClC,IAAI,EAAE,GAAG,CAAC;QACvBmO,EAAE,CAACjM,SAAS,CAAClC,IAAI,EAAE,GAAG,CAAC;QACvB+N,OAAO,CAAC7L,SAAS,CAAClC,IAAI,EAAE,SAAS,CAAC;QAClCgO,OAAO,CAAC9L,SAAS,CAAClC,IAAI,EAAE,SAAS,CAAC;QAClC,SAAS5O,QAAQA,CAAC+O,WAAW,EAC7B;UACE8N,YAAY,CAACpM,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACrD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAI,CAACgd,YAAY,GAAG,UAASC,QAAQ,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,QAAQ,EAAEV,OAAO,EAAEW,eAAe,EACzF;QACE,IAAI3O,IAAI,GAAG;UACE,QAAQ,EAAE,cAAc;UACxB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,UAAU,EAAEL,QAAQ,CAAC4M,QAAQ;QAC/B,CAAC;QACZ,IAAIO,GAAG,GAAG,IAAItc,SAAS,CAACmR,OAAO,CAAC,CAAC;QACjC,IAAIoL,GAAG,GAAG,IAAIvc,SAAS,CAACmR,OAAO,CAAC,CAAC;QACjC,IAAIqL,GAAG,GAAG,IAAIxc,SAAS,CAACmR,OAAO,CAAC,CAAC;QACjC,IAAIsL,GAAG,GAAG,IAAIzc,SAAS,CAACmR,OAAO,CAAC,CAAC;QACjCmL,GAAG,CAAChM,GAAG,CAAC0L,EAAE,CAAC;QACXO,GAAG,CAACjM,GAAG,CAAC2L,EAAE,CAAC;QACXO,GAAG,CAAClM,GAAG,CAAC4L,EAAE,CAAC;QACXO,GAAG,CAACnM,GAAG,CAAC6L,EAAE,CAAC;QACXG,GAAG,CAAC1M,SAAS,CAAClC,IAAI,EAAE,IAAI,CAAC;QACzB6O,GAAG,CAAC3M,SAAS,CAAClC,IAAI,EAAE,IAAI,CAAC;QACzB8O,GAAG,CAAC5M,SAAS,CAAClC,IAAI,EAAE,IAAI,CAAC;QACzB+O,GAAG,CAAC7M,SAAS,CAAClC,IAAI,EAAE,IAAI,CAAC;QACzB0O,QAAQ,CAACxM,SAAS,CAAClC,IAAI,EAAE,UAAU,CAAC;QACpCgO,OAAO,CAAC9L,SAAS,CAAClC,IAAI,EAAE,SAAS,CAAC;QAClC,SAAS5O,QAAQA,CAAC+O,WAAW,EAC7B;UACEwO,eAAe,CAAC9M,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACxD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAAC4d,KAAK,GAAG,UAASC,QAAQ,EAC9B;QACE,IAAIjP,IAAI,GAAG;UACE,QAAQ,EAAE,OAAO;UACjB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACE8O,QAAQ,CAACpN,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACjD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAAC8d,OAAO,GAAG,UAASC,UAAU,EAClC;QACE,IAAInP,IAAI,GAAG;UACE,QAAQ,EAAE,SAAS;UACnB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACEgP,UAAU,CAACtN,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACnD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA,IAAI,CAACge,SAAS,GAAG,UAAS1d,EAAE,EAAE2d,YAAY,EAC1C;QACE,IAAIrP,IAAI,GAAG;UACE,QAAQ,EAAE,WAAW;UACrB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,aAAa,EAAEpQ;QACjB,CAAC;QACZ,SAASN,QAAQA,CAAC+O,WAAW,EAC7B;UACEkP,YAAY,CAACxN,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACrD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAACke,YAAY,GAAG,UAASC,eAAe,EAC5C;QACE,IAAIvP,IAAI,GAAG;UACE,QAAQ,EAAE,cAAc;UACxB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACE;UACAoP,eAAe,CAAC1N,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACqP,SAAS,CAAC,EAAEhO,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACzF;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAACqe,cAAc,GAAG,UAASC,iBAAiB,EAChD;QACE,IAAI1P,IAAI,GAAG;UACE,QAAQ,EAAE,gBAAgB;UAC1B,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACE;UACAuP,iBAAiB,CAAC7N,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACwP,WAAW,CAAC,EAAEnO,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QAC7F;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAACwe,cAAc,GAAG,UAASC,iBAAiB,EAChD;QACE,IAAI7P,IAAI,GAAG;UACE,QAAQ,EAAE,gBAAgB;UAC1B,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACE;UACA0P,iBAAiB,CAAChO,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAAC2P,WAAW,CAAC,EAAEtO,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QAC7F;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAAC2e,gBAAgB,GAAG,UAASC,mBAAmB,EACpD;QACE,IAAIhQ,IAAI,GAAG;UACE,QAAQ,EAAE,kBAAkB;UAC5B,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACE;UACA6P,mBAAmB,CAACnO,OAAO,EAAEsC,OAAO,CAAC,CAAC,IAAI3C,QAAQ,CAACrB,WAAW,CAAC8P,aAAa,CAAC,CAAC,EAAEzO,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QAC/G;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAAC8e,cAAc,GAAG,UAASC,iBAAiB,EAChD;QACE,IAAInQ,IAAI,GAAG;UACE,QAAQ,EAAE,gBAAgB;UAC1B,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACE;UACAgQ,iBAAiB,CAACtO,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACiQ,WAAW,CAAC,EAAE5O,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QAC7F;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAACif,sBAAsB,GAAG,UAASC,yBAAyB,EAChE;QACE,IAAItQ,IAAI,GAAG;UACE,QAAQ,EAAE,wBAAwB;UAClC,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACE;UACAmQ,yBAAyB,CAACzO,OAAO,EAAEsC,OAAO,CAAC,CAAC,IAAI3C,QAAQ,CAACrB,WAAW,CAACoQ,QAAQ,CAAC,CAAC,EAAE/O,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QAChH;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAACof,OAAO,GAAG,UAASC,UAAU,EAClC;QACE,IAAIzQ,IAAI,GAAG;UACE,QAAQ,EAAE,SAAS;UACnB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACE,IAAIuQ,IAAI,GAAG,IAAIpe,SAAS,CAACmR,OAAO,CAAC,CAAC;UAClCiN,IAAI,CAACtL,KAAK,CAACjF,WAAW,EAAE,MAAM,CAAC;UAC/BsQ,UAAU,CAAC5O,OAAO,EAAE6O,IAAI,EAAElP,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACzD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAACuf,YAAY,GAAG,UAASC,eAAe,EAC5C;QACE,IAAI5Q,IAAI,GAAG;UACE,QAAQ,EAAE,cAAc;UACxB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACE;UACAyQ,eAAe,CAAC/O,OAAO,EAAEsC,OAAO,CAAC,CAAC,IAAI3C,QAAQ,CAACrB,WAAW,CAAC0Q,SAAS,CAAC,CAAC,EAAErP,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACvG;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAAC4Y,UAAU,GAAG,UAASC,aAAa,EAAE;QACxC,IAAIjK,IAAI,GAAG;UACE,QAAQ,EAAE,YAAY;UACtB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACE;UACA8J,aAAa,CAACpI,OAAO,EAAE1B,WAAW,CAAC+J,OAAO,EAAE1I,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QAC3E;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA,IAAI,CAAC0f,cAAc,GAAG,UAASpf,EAAE,EAAEqf,iBAAiB,EAAE;QACpD,IAAI/Q,IAAI,GAAG;UACE,QAAQ,EAAE,gBAAgB;UAC1B,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,UAAU,EAAEL,QAAQ,CAAC/P,EAAE;QACzB,CAAC;QACZ,SAASN,QAAQA,CAAC+O,WAAW,EAC7B;UACE,IAAI6Q,KAAK,GAAG,IAAI1e,SAAS,CAACmR,OAAO,CAAC,CAAC;UACnCuN,KAAK,CAAC5L,KAAK,CAACjF,WAAW,EAAE,UAAU,CAAC;UACpC4Q,iBAAiB,CAAClP,OAAO,EAAEmP,KAAK,EAAExP,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACjE;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAAC6f,YAAY,GAAG,UAASC,eAAe,EAAE;QAC5C,IAAIlR,IAAI,GAAG;UACE,QAAQ,EAAE,cAAc;UACxB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACE;UACA+Q,eAAe,CAACrP,OAAO,EAAEmE,UAAU,CAAC7F,WAAW,CAACuE,MAAM,CAAC,EAAElD,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACxF;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAAC+f,WAAW,GAAG,UAASC,cAAc,EAAE;QAC1C,IAAIpR,IAAI,GAAG;UACE,QAAQ,EAAE,aAAa;UACvB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACE;UACAiR,cAAc,CAACvP,OAAO,EAAEmE,UAAU,CAAC7F,WAAW,CAAC6G,KAAK,CAAC,EAAExF,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACtF;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA,IAAI,CAAC6T,WAAW,GAAG,UAAS3B,GAAG,EAAE4B,cAAc,EAAE;QAC/C,IAAIlF,IAAI,GAAG;UACE,QAAQ,EAAE,aAAa;UACvB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,KAAK,EAAEL,QAAQ,CAAC6B,GAAG;QACrB,CAAC;QACZ,SAASlS,QAAQA,CAAC+O,WAAW,EAC7B;UACE,IAAIgF,QAAQ,GAAG,IAAI7S,SAAS,CAACmR,OAAO,CAAC,CAAC;UACtC0B,QAAQ,CAACC,KAAK,CAACjF,WAAW,EAAE,UAAU,CAAC;UACvC+E,cAAc,CAACrD,OAAO,EAAEsD,QAAQ,EAAE3D,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACjE;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAACigB,gBAAgB,GAAG,UAASC,mBAAmB,EAAE;QACpD,IAAItR,IAAI,GAAG;UACE,QAAQ,EAAE,kBAAkB;UAC5B,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACE;UACAmR,mBAAmB,CAACzP,OAAO,EAAEsC,OAAO,CAAC,CAAC,IAAI3C,QAAQ,CAACrB,WAAW,CAACoR,OAAO,CAAC,CAAC,EAAE/P,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACzG;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAACogB,OAAO,GAAG,UAASC,UAAU,EAAE;QAClC,IAAIzR,IAAI,GAAG;UACE,QAAQ,EAAE,SAAS;UACnB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACE;UACAsR,UAAU,CAAC5P,OAAO,EAAEmE,UAAU,CAAC7F,WAAW,CAACuR,IAAI,CAAC,EAAElQ,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACjF;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAACugB,UAAU,GAAG,UAASC,aAAa,EAAE;QACxC,IAAI5R,IAAI,GAAG;UACE,QAAQ,EAAE,YAAY;UACtB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACE;UACAyR,aAAa,CAAC/P,OAAO,EAAEsC,OAAO,CAAC,CAAC,IAAI3C,QAAQ,CAACrB,WAAW,CAAC0R,UAAU,CAAC,CAAC,EAAErQ,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACtG;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAAC0gB,aAAa,GAAG,UAASC,gBAAgB,EAAE;QAC9C,IAAI/R,IAAI,GAAG;UACE,QAAQ,EAAE,eAAe;UACzB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACE4R,gBAAgB,CAAClQ,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACzD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA,IAAI,CAAC4gB,YAAY,GAAG,UAASxC,SAAS,EAAEyC,eAAe,EACvD;QACE,IAAIjS,IAAI,GAAG;UACE,QAAQ,EAAE,cAAc;UACxB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,WAAW,EAAEL,QAAQ,CAAC+N,SAAS;QACjC,CAAC;QACZ,SAASpe,QAAQA,CAAC+O,WAAW,EAC7B;UACE8R,eAAe,CAACpQ,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACxD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA,IAAI,CAAC8gB,cAAc,GAAG,UAASvC,WAAW,EAAEwC,iBAAiB,EAC7D;QACE,IAAInS,IAAI,GAAG;UACE,QAAQ,EAAE,gBAAgB;UAC1B,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,aAAa,EAAEL,QAAQ,CAACkO,WAAW;QACrC,CAAC;QACZ,SAASve,QAAQA,CAAC+O,WAAW,EAC7B;UACEgS,iBAAiB,CAACtQ,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QAC1D;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA,IAAI,CAACghB,cAAc,GAAG,UAAStC,WAAW,EAAEuC,iBAAiB,EAC7D;QACE,IAAIrS,IAAI,GAAG;UACE,QAAQ,EAAE,gBAAgB;UAC1B,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,aAAa,EAAEL,QAAQ,CAACqO,WAAW;QACrC,CAAC;QACZ,SAAS1e,QAAQA,CAAC+O,WAAW,EAC7B;UACEkS,iBAAiB,CAACxQ,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QAC1D;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;;MAED;MACA,IAAI,CAACkhB,gBAAgB,GAAG,UAASrC,aAAa,EAAEsC,mBAAmB,EACnE;QACE,IAAIvS,IAAI,GAAG;UACE,QAAQ,EAAE,kBAAkB;UAC5B,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,eAAe,EAAEL,QAAQ,CAACwO,aAAa;QACzC,CAAC;QACZ,SAAS7e,QAAQA,CAAC+O,WAAW,EAC7B;UACEoS,mBAAmB,CAAC1Q,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QAC5D;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA,IAAI,CAACohB,cAAc,GAAG,UAASpC,WAAW,EAAEqC,iBAAiB,EAC7D;QACE,IAAIzS,IAAI,GAAG;UACE,QAAQ,EAAE,gBAAgB;UAC1B,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,aAAa,EAAEL,QAAQ,CAAC2O,WAAW;QACrC,CAAC;QACZ,SAAShf,QAAQA,CAAC+O,WAAW,EAC7B;UACEsS,iBAAiB,CAAC5Q,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QAC1D;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA,IAAI,CAACshB,sBAAsB,GAAG,UAASnC,QAAQ,EAAEoC,yBAAyB,EAC1E;QACE,IAAI3S,IAAI,GAAG;UACE,QAAQ,EAAE,wBAAwB;UAClC,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,UAAU,EAAEL,QAAQ,CAAC8O,QAAQ;QAC/B,CAAC;QACZ,SAASnf,QAAQA,CAAC+O,WAAW,EAC7B;UACEwS,yBAAyB,CAAC9Q,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QAClE;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA,IAAI,CAACwhB,OAAO,GAAG,UAASlC,IAAI,EAAEmC,UAAU,EACxC;QACE,IAAI7S,IAAI,GAAG;UACE,QAAQ,EAAE,SAAS;UACnB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ4O,IAAI,CAACxO,SAAS,CAAClC,IAAI,EAAE,MAAM,CAAC;QAC5B,SAAS5O,QAAQA,CAAC+O,WAAW,EAC7B;UACE0S,UAAU,CAAChR,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACnD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA,IAAI,CAAC+Y,UAAU,GAAG,UAASD,OAAO,EAAEE,aAAa,EAAE;QACjD,IAAIpK,IAAI,GAAG;UACE,QAAQ,EAAE,YAAY;UACtB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,SAAS,EAAEL,QAAQ,CAACyI,OAAO;QAC7B,CAAC;QACZ,SAAS9Y,QAAQA,CAAC+O,WAAW,EAC7B;UACEiK,aAAa,CAACvI,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACtD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA,IAAI,CAAC0hB,YAAY,GAAG,UAASpO,MAAM,EAAEqO,eAAe,EAAE;QACpD,IAAI/S,IAAI,GAAG;UACE,QAAQ,EAAE,cAAc;UACxB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,QAAQ,EAAEL,QAAQ,CAACiD,MAAM;QAC3B,CAAC;QACZ,SAAStT,QAAQA,CAAC+O,WAAW,EAC7B;UACE4S,eAAe,CAAClR,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACxD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA,IAAI,CAAC4hB,WAAW,GAAG,UAAShM,KAAK,EAAEiM,cAAc,EAAE;QACjD,IAAIjT,IAAI,GAAG;UACE,QAAQ,EAAE,aAAa;UACvB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,OAAO,EAAEL,QAAQ,CAACuF,KAAK;QACzB,CAAC;QACZ,SAAS5V,QAAQA,CAAC+O,WAAW,EAC7B;UACE8S,cAAc,CAACpR,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACvD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA,IAAI,CAACka,aAAa,GAAG,UAASC,UAAU,EAAEC,gBAAgB,EAAE;QAC1D,IAAIxL,IAAI,GAAG;UACE,QAAQ,EAAE,eAAe;UACzB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,YAAY,EAAEL,QAAQ,CAAC8J,UAAU;QACnC,CAAC;QACZ,SAASna,QAAQA,CAAC+O,WAAW,EAC7B;UACEqL,gBAAgB,CAAC3J,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACzD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA,IAAI,CAAC8hB,UAAU,GAAG,UAASxC,IAAI,EAAEyC,aAAa,EAC9C;QACE,IAAInT,IAAI,GAAG;UACE,QAAQ,EAAE,YAAY;UACtB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ4O,IAAI,CAACxO,SAAS,CAAClC,IAAI,EAAE,MAAM,CAAC;QAC5B,SAAS5O,QAAQA,CAAC+O,WAAW,EAC7B;UACEgT,aAAa,CAACtR,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACtD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA,IAAI,CAACgiB,gBAAgB,GAAG,UAAS7B,OAAO,EAAE8B,mBAAmB,EAC7D;QACE,IAAIrT,IAAI,GAAG;UACE,QAAQ,EAAE,kBAAkB;UAC5B,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,SAAS,EAAEwR,MAAM,CAAE/B,OAAQ;QAC7B,CAAC;QACZ,SAASngB,QAAQA,CAAC+O,WAAW,EAC7B;UACEkT,mBAAmB,CAACxR,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QAC5D;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA,IAAI,CAACmiB,OAAO,GAAG,UAAS7B,IAAI,EAAE8B,UAAU,EACxC;QACE,IAAIxT,IAAI,GAAG;UACE,QAAQ,EAAE,SAAS;UACnB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,MAAM,EAAEL,QAAQ,CAACiQ,IAAI;QACvB,CAAC;QACZ,SAAStgB,QAAQA,CAAC+O,WAAW,EAC7B;UACEqT,UAAU,CAAC3R,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACnD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAI,CAACqiB,KAAK,GAAG,UAASC,QAAQ,EAC9B;QACE,IAAI1T,IAAI,GAAG;UACE,QAAQ,EAAE,OAAO;UACjB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ,SAAS1Q,QAAQA,CAAC+O,WAAW,EAC7B;UACEuT,QAAQ,CAAC7R,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACjD;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MACD;MACA;MACA,IAAI,CAACsX,WAAW,GAAG,UAASpF,GAAG,EAAET,KAAK,EAAE8F,cAAc,EACtD;QACE,IAAI3I,IAAI,GAAG;UACE,QAAQ,EAAE,aAAa;UACvB,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC,MAAM;UACxB,KAAK,EAAEwB;QACT,CAAC;QACZ,SAASlS,QAAQA,CAAC+O,WAAW,EAC7B;UACEwI,cAAc,CAAC9G,OAAO,EAAEL,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;QACvD;QACAyC,KAAK,CAACX,SAAS,CAAClC,IAAI,EAAE,OAAO,CAAC;QAC9BjQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;MAED,IAAIuiB,GAAG;MACP,IAAI,CAACC,eAAe,GAAG,UAASC,YAAY,EAC5C;QACE,IAAI7T,IAAI,GAAG;UACE,QAAQ,EAAE,iBAAiB;UAC3B,SAAS,EAAE1N,SAAS,CAACF,OAAO;UAC5B,QAAQ,EAAEyP,OAAO,CAACC;QACpB,CAAC;QACZ6R,GAAG,GAAGE,YAAY;QAElB,SAASziB,QAAQA,CAAC+O,WAAW,EAC7B;UACE,IAAI2T,WAAW,GAAG;YACE,QAAQ,EAAE,oBAAoB;YAC9B,SAAS,EAAExhB,SAAS,CAACF,OAAO;YAC5B,QAAQ,EAAEyP,OAAO,CAACC;UACpB,CAAC;UACnB,IAAG,CAAC,IAAIN,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,EACpC;YACErQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEqhB,WAAW,EAAE1iB,QAAQ,CAAC;UACjE,CAAC,MACI,IAAI,WAAW,KAAK,OAAO+O,WAAW,CAACC,MAAO,EAAE;UACrDH,UAAU,CAAE,YAAU;YAAE0T,GAAG,CAAC9R,OAAO,CAACC,MAAM,EAAE3B,WAAW,CAAC,UAAU,CAAC,EAAEqB,QAAQ,CAACrB,WAAW,CAAC,YAAY,CAAC,CAAC,EAAEqB,QAAQ,CAACrB,WAAW,CAACC,MAAM,CAAC,CAAC;UAAE,CAAC,EAAE,CAAC,CAAC;QAChJ;QACArQ,OAAO,CAACG,OAAO,CAACuC,UAAU,GAAG,UAAU,EAAEuN,IAAI,EAAE5O,QAAQ,CAAC;MAC1D,CAAC;IAEH,CAAC,EAAC;EACJ;AACA;;AAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}