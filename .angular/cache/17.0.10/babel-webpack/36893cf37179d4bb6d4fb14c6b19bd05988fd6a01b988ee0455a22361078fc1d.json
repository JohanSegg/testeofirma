{"ast":null,"code":"import { SigCapture } from \"./capture\";\nimport { SessionControl } from './SigCaptX-SessionControl';\nimport * as i0 from \"@angular/core\";\nexport class ClearSignature {\n  clearSignature() {\n    ClearSignature.clearSignature();\n  }\n  /* This function clears the current signature image from the signature control on the form */\n  static {\n    this.clearSignature = () => {\n      if (null != SigCapture.HTMLTagIds.imageBox.firstChild) {\n        SigCapture.HTMLTagIds.imageBox.removeChild(SigCapture.HTMLTagIds.imageBox.firstChild);\n      }\n      if (null == SigCapture.sigObj) {\n        SessionControl.actionWhenRestarted(); // See SigCaptX-SessionControl.js\n        return;\n      }\n      SigCapture.sigObj.Clear(ClearSignature.onClearSig);\n    };\n  }\n  static onClearSig(sigObjV, status) {\n    if (window.sdkPtr.ResponseStatus.OK != status) {\n      SigCapture.print(\"ClearSignature() error: \" + status);\n      if (window.sdkPtr.ResponseStatus.INVALID_SESSION == status) {\n        SigCapture.print(\"Session error. Restarting the session.\");\n        SessionControl.actionWhenRestarted(); // See SigCaptX-SessionControl.js\n      }\n    }\n  }\n\n  static {\n    this.ɵfac = function ClearSignature_Factory(t) {\n      return new (t || ClearSignature)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ClearSignature,\n      selectors: [[\"btn-clear\"]],\n      decls: 1,\n      vars: 0,\n      consts: [[\"type\", \"button\", \"value\", \"Clear\", \"title\", \"Clears the signature\", 2, \"height\", \"10mm\", \"width\", \"35mm\", 3, \"click\"]],\n      template: function ClearSignature_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"input\", 0);\n          i0.ɵɵlistener(\"click\", function ClearSignature_Template_input_click_0_listener() {\n            return ctx.clearSignature();\n          });\n          i0.ɵɵelementEnd();\n        }\n      },\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["SigCapture","SessionControl","ClearSignature","clearSignature","HTMLTagIds","imageBox","firstChild","removeChild","sigObj","actionWhenRestarted","Clear","onClearSig","sigObjV","status","window","sdkPtr","ResponseStatus","OK","print","INVALID_SESSION","selectors","decls","vars","consts","template","ClearSignature_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","ClearSignature_Template_input_click_0_listener","ɵɵelementEnd"],"sources":["C:\\Users\\PROGRAMA2WEB\\Desktop\\wacom-pruebas\\sdk-for-signature-sigcaptx-windows-master\\Samples\\AngularNG\\capture\\src\\app\\clearsig.ts","C:\\Users\\PROGRAMA2WEB\\Desktop\\wacom-pruebas\\sdk-for-signature-sigcaptx-windows-master\\Samples\\AngularNG\\capture\\src\\app\\btnclear.html"],"sourcesContent":["/* **************************************************************************\r\n  clearsig.ts\r\n   \r\n  This file contains the source code for clearing the signature image from the image box on the form\r\n  The \"clearSignature()\" function is activated by the click event on the \r\n  \"Clear\" button on the form as defined in btnclear.html\r\n  \r\n  Copyright (c) 2021 Wacom Co. Ltd. All rights reserved.\r\n  \r\n  v1.0\r\n  \r\n***************************************************************************/\r\nimport { Component } from '@angular/core';\r\nimport { SigCapture } from \"./capture\";\r\nimport { SessionControl } from './SigCaptX-SessionControl';\r\n\r\n@Component({\r\n    selector: 'btn-clear',\r\n    templateUrl: './btnclear.html'\r\n  })\r\n  \r\n  export class ClearSignature\r\n  {\r\n     clearSignature()\r\n     {\r\n       ClearSignature.clearSignature();\r\n     }\r\n  \r\n     /* This function clears the current signature image from the signature control on the form */  \r\n    static clearSignature = () =>\r\n    { \r\n        if(null != SigCapture.HTMLTagIds.imageBox.firstChild)\r\n        {\r\n            SigCapture.HTMLTagIds.imageBox.removeChild(SigCapture.HTMLTagIds.imageBox.firstChild);\r\n        }\r\n        if (null == SigCapture.sigObj)\r\n        {\r\n            SessionControl.actionWhenRestarted();  // See SigCaptX-SessionControl.js\r\n            return;\r\n        }\r\n        SigCapture.sigObj.Clear(ClearSignature.onClearSig);\r\n    }\r\n\r\n    static onClearSig(sigObjV, status)\r\n    {\r\n        if(window.sdkPtr.ResponseStatus.OK != status)\r\n        {\r\n            SigCapture.print(\"ClearSignature() error: \" + status);\r\n            if(window.sdkPtr.ResponseStatus.INVALID_SESSION == status)\r\n            {\r\n                SigCapture.print(\"Session error. Restarting the session.\");\r\n                SessionControl.actionWhenRestarted();  // See SigCaptX-SessionControl.js\r\n            }\r\n        }\r\n    }\r\n}","<input type=\"button\" value=\"Clear\" style=\"height:10mm;width:35mm\" (click)=\"clearSignature()\" title=\"Clears the signature\" />"],"mappings":"AAaA,SAASA,UAAU,QAAQ,WAAW;AACtC,SAASC,cAAc,QAAQ,2BAA2B;;AAOxD,OAAM,MAAOC,cAAc;EAExBC,cAAcA,CAAA;IAEZD,cAAc,CAACC,cAAc,EAAE;EACjC;EAEA;;IACM,KAAAA,cAAc,GAAG,MAAK;MAEzB,IAAG,IAAI,IAAIH,UAAU,CAACI,UAAU,CAACC,QAAQ,CAACC,UAAU,EACpD;QACIN,UAAU,CAACI,UAAU,CAACC,QAAQ,CAACE,WAAW,CAACP,UAAU,CAACI,UAAU,CAACC,QAAQ,CAACC,UAAU,CAAC;;MAEzF,IAAI,IAAI,IAAIN,UAAU,CAACQ,MAAM,EAC7B;QACIP,cAAc,CAACQ,mBAAmB,EAAE,CAAC,CAAE;QACvC;;MAEJT,UAAU,CAACQ,MAAM,CAACE,KAAK,CAACR,cAAc,CAACS,UAAU,CAAC;IACtD,CAAC;EAAA;EAED,OAAOA,UAAUA,CAACC,OAAO,EAAEC,MAAM;IAE7B,IAAGC,MAAM,CAACC,MAAM,CAACC,cAAc,CAACC,EAAE,IAAIJ,MAAM,EAC5C;MACIb,UAAU,CAACkB,KAAK,CAAC,0BAA0B,GAAGL,MAAM,CAAC;MACrD,IAAGC,MAAM,CAACC,MAAM,CAACC,cAAc,CAACG,eAAe,IAAIN,MAAM,EACzD;QACIb,UAAU,CAACkB,KAAK,CAAC,wCAAwC,CAAC;QAC1DjB,cAAc,CAACQ,mBAAmB,EAAE,CAAC,CAAE;;;EAGnD;;;;uBAjCWP,cAAc;IAAA;EAAA;;;YAAdA,cAAc;MAAAkB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCrB7BE,EAAA,CAAAC,cAAA,eAA4H;UAA1DD,EAAA,CAAAE,UAAA,mBAAAC,+CAAA;YAAA,OAASJ,GAAA,CAAAxB,cAAA,EAAgB;UAAA,EAAC;UAA5FyB,EAAA,CAAAI,YAAA,EAA4H","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}